<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d7525a1e-5ee9-4470-9c95-b0e3c0a4e99c" activeEnvironment="Default" name="Webservice-DispatchDelivery_W_M" lastOpened="2018-11-16T14:39:42.426+05:30" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="1a4805e8-9f29-49f7-b7ff-237d60317d57" wadlVersion="http://wadl.dev.java.net/2009/02" name="DeliveryLocation" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint></con:endpoints><con:resource name="DeliveryLocations" path="/AOO/v2/DeliveryOrders/DeliveryLocations" id="2be61c0d-d6d8-40e5-a169-897bc0e969e5"><con:settings/><con:parameters><con:parameter><con:name>latitude</con:name><con:value>40.722036</con:value><con:style>QUERY</con:style><con:default>40.722036</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>longitude</con:name><con:value>-73.990425</con:value><con:style>QUERY</con:style><con:default>-73.990425</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="DeliveryLocations" id="8ad79f80-faaa-4dbf-8829-7e6cd0a41a51" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:del="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryLocations">del:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:del="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryLocations">del:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:del="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryLocations">del:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="92825888-c019-4808-aa01-e30f8c10ff01" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="dfdbd245cb7746229f51d39f40efbffa"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="1B44fE3b0dCD4120ae875C90a661bd53"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryLocations</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="latitude" value="32.9618"/>
  <con:entry key="longitude" value="-96.8292"/>
</con:parameters><con:parameterOrder><con:entry>latitude</con:entry><con:entry>longitude</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="0a6a1d99-c166-40e0-819a-8a8895f6b4c9" wadlVersion="http://wadl.dev.java.net/2009/02" name="CreateTransaction-Delivery" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://bww-pickuporder-api-chtest.cloudhub.io</con:endpoint></con:endpoints><con:resource name="CreateTransactionDelivery" path="/FP/v1/Transactions/Create/{SiteID}" id="f31a9030-c153-4e65-9a86-c6c42cc2da15"><con:settings/><con:parameters><con:parameter><con:name>SiteID</con:name><con:value>SiteID</con:value><con:style>TEMPLATE</con:style><con:default>SiteID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="CreateTransactionDelivery" id="42f3383f-631e-4646-9e39-0c905c7c785e" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="https://bww-delivery-api-v2-chtest.cloudhub.io/experience/v1/Transactions/Create/5">ns:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:ns="https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5">ns:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 400</con:status><con:params/><con:element xmlns:ns="https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5">ns:Fault</con:element></con:representation><con:request name="Request 1" id="d7d2ac69-308c-4158-b17f-26203ae10900" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="dfdbd245cb7746229f51d39f40efbffa"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="1B44fE3b0dCD4120ae875C90a661bd53"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://bww-pickuporder-api-chtest.cloudhub.io</con:endpoint><con:request>{
                "TransactionTotal": 5
}
</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="5" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="d5f38421-4fdf-4181-baa1-27c1a5dd01e8" wadlVersion="http://wadl.dev.java.net/2009/02" name="DeliveryPutOrder" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint></con:endpoints><con:resource name="DeliveryPutOrder" path="/AOO/v2/DeliveryOrders/{SiteID}" id="ce014a74-ad01-4e8c-a6a2-b86135583242"><con:settings/><con:parameters><con:parameter><con:name>SiteID</con:name><con:value>SiteID</con:value><con:style>TEMPLATE</con:style><con:default>SiteID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="DeliveryPutOrder" id="3d9415c3-7be4-4e5a-aa72-f1f43c5ba822" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:sit="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID">sit:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 406 500 403</con:status><con:params/><con:element xmlns:sit="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID">sit:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sit="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID">sit:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>504</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="dfdbd245cb7746229f51d39f40efbffa"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="1B44fE3b0dCD4120ae875C90a661bd53"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "253 West 47th Street",
			"City": "New York",
			"State": "NY",
			"PostalCode": "10010",
			"Latitude": 40.722036,
			"Longitude": -73.990425,
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "53 Stanton St",
			"City": "New York City",
			"State": "NY",
			"PostalCode": "10010",
			"Latitude": 40.722036,
			"Longitude": -73.990425,
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "2017-12-23T16:00:00",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId": 5 ,
		"MenuId": 0,
		"PromiseDateTime": "2017-12-21T19:50:00",
		"LineItems": [{
		"ItemLineNumber": 1,
		"SalesItemId": 4325,
		"MenuItemId": 2318,
		"Quantity": 1,
		"UnitPriceOverride": 3,
		"NextModifierSequenceNumber": 1,
		"ItemOrderingMode": 1,
		"EnablePriceOverride": false,
		"Modifiers": []
	},

	{
		"ItemLineNumber": 3,
		"SalesItemId": 2890,
		"MenuItemId": 1674,
		"UnitPriceOverride": 3,
		"EnablePriceOverride": false,
		"Quantity": 1,
		"NextModifierSequenceNumber": 1,
		"ItemOrderingMode": 1,
		"Modifiers": []
	},
	{
		"ItemLineNumber": 4,
		"SalesItemId": 3031,
		"MenuItemId": 1758,
		"UnitPriceOverride": 5.29,
		"EnablePriceOverride": false,
		"Quantity": 1,
		"NextModifierSequenceNumber": 1,
		"ItemOrderingMode": 1,
		"Modifiers": []
	},
	
	{
		"ItemLineNumber": 5,
		"SalesItemId": 4433,
		"MenuItemId": 2319,
		"UnitPriceOverride": 3,
		"EnablePriceOverride": false,
		"Quantity": 1,
		"NextModifierSequenceNumber": 1,
		"ItemOrderingMode": 1,
		"Modifiers": []
	}
	
],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "trob@buffalowildwings.com",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="5" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="845af5b7-1097-4a9d-b94b-6158cced66b1" wadlVersion="http://wadl.dev.java.net/2009/02" name="DeliveryPostOrder" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint></con:endpoints><con:resource name="DeliveryPostOrder" path="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" id="6f72eeb6-c2c6-4818-99c0-2b38bdadc3c7"><con:settings/><con:parameters><con:parameter><con:name>SiteId</con:name><con:value>SiteId</con:value><con:style>TEMPLATE</con:style><con:default>SiteId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>OrderId</con:name><con:value>OrderId</con:value><con:style>TEMPLATE</con:style><con:default>OrderId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>QuoteId</con:name><con:value>QuoteId</con:value><con:style>TEMPLATE</con:style><con:default>QuoteId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CustomerId</con:name><con:value>CustomerId</con:value><con:style>TEMPLATE</con:style><con:default>CustomerId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="CustomerId" id="a13c309a-0f21-42ba-b689-5622616a8159" method="POST"><con:settings/><con:parameters><con:parameter><con:name>forceATODeposit</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:cus="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteId/OrderId/QuoteId/CustomerId">cus:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500 406 404</con:status><con:params/><con:element xmlns:d606="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820">d606:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:d606="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820">d606:Response</con:element></con:representation><con:request name="Request 1" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="dfdbd245cb7746229f51d39f40efbffa"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="1B44fE3b0dCD4120ae875C90a661bd53"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "2017-06-29T19:05:02.1434103-06:00",
	"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 3012,
			"MenuItemId": 1737,
			"SpecialInstructions": "Make extremely spicy",
			"RecipientName": "Test QA",
			"Quantity": 6,
			"NextModifierSequenceNumber": 1,
			"ItemOrderingMode": 0,
			"UnitPriceOverride": 1.0,
			"EnablePriceOverride": true,
			"Section1Type": 0,
			"Section2Type": 0,
			"Section3Type": 0,
			"Section4Type": 0,
			"Modifiers": [{
					"SequenceNumber": 1,
					"ItemOptionGroupId": 2,
					"SalesItemOptionId": 3,
					"Action": 0,
					"DefaultAction": 0,
					"ItemLineNumber": 4,
					"ParentSequenceNumber": 5,
					"Quantity": 6,
					"IsOnEntireItem": true,
					"IsOnSection1": true,
					"IsOnSection2": true,
					"IsOnSection3": true,
					"IsOnSection4": true,
					"FreeQuantity": 1
				}
			]
		}
	],
	"ComboItems": [{
			"PromoId": 1,
			"PromoType": 0,
			"Price": 2.0,
			"WebSalesGroupLineItems": [{
					"$id": "5",
					"WebSalesGroupId": 1,
					"LineItemNumber": 2,
					"GroupLineId": 3,
					"MenuItemName": "Side of Sweet BBQ",
					"SalesItemId": 5
				}
			]
		}
	],
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 2,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "ccb09661-2041-444d-80c7-6512e9c512ed",
		"EMail": "ddtest1@buffalowildwings.com",
		"FirstName": "Test",
		"LastName": "QA",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": null,
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"LoyaltyNumber": null,
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"PaymentMethods": [{
			"PaymentMethod": 0,
			"AccountId": "b00cc9e9-a7ac-4b6a-8a79-cad25673def4",
			"Amount": 0.64,
			"TipAmount": 0,
			"OrderOfProcess": 6,
			"ZipCode": "55435",
			"PaymentMethodType": 6,
			"ProcessingType": 0,
			"P2PECombo": 0
		}
	],
	"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Arnav Patil",
	"DropoffPhoneNumber": "123-456-7890",
	"Tip": 0.00
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteId/OrderId/QuoteId/CustomerId</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="SiteId"/>
  <con:entry key="QuoteId" value="QuoteId"/>
  <con:entry key="CustomerId" value="CustomerId"/>
  <con:entry key="OrderId" value="OrderId"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry><con:entry>forceATODeposit</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="b1a60f2d-89d0-4ad4-99da-13c9f1f5cf2a" wadlVersion="http://wadl.dev.java.net/2009/02" name="DelievryOrderStatus" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint></con:endpoints><con:resource name="OrderStatus" path="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" id="6a850b30-56b6-4569-b47f-aca468281208"><con:settings/><con:parameters><con:parameter><con:name>DeliveryId</con:name><con:value>DeliveryId</con:value><con:style>TEMPLATE</con:style><con:default>DeliveryId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="OrderStatus" id="5d74f162-1740-4e77-93bf-33db9275df79" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403 404</con:status><con:params/><con:element xmlns:ord="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus">ord:Fault</con:element></con:representation><con:request name="Request 1" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="dfdbd245cb7746229f51d39f40efbffa"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="1B44fE3b0dCD4120ae875C90a661bd53"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="DeliveryId" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="0cbaa0c8-2da5-4fd2-b97e-60da655d7f3d" wadlVersion="http://wadl.dev.java.net/2009/02" name="DeliveryRestOrderStatus" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint></con:endpoints><con:resource name="RestaurantStatus" path="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" id="160dc0dc-a923-46b1-baf1-2bb62e15c71a"><con:settings/><con:parameters><con:parameter><con:name>RestaurantNumber</con:name><con:value>RestaurantNumber</con:value><con:style>TEMPLATE</con:style><con:default>RestaurantNumber</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>StartDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>EndDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="RestaurantStatus" id="712ccde4-aa2e-4ab2-ae6c-c89b5eba9dd7" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403 404</con:status><con:params/><con:element xmlns:res="https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus">res:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="dfdbd245cb7746229f51d39f40efbffa"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="1B44fE3b0dCD4120ae875C90a661bd53"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://bww-delivery-api-v2-chtest.cloudhub.io</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="349" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="b9358666-55a4-4e89-83b3-e3aa01d2b2b5" wadlVersion="http://wadl.dev.java.net/2009/02" name="TransactionStatus" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://payments.uat.freedompay.com</con:endpoint></con:endpoints><con:resource name="GetTransaction" path="/CheckoutService/CheckoutService.svc/GetTransaction" id="84f98aa8-44e6-4d2a-96da-afaf1d80cd68"><con:settings/><con:parameters/><con:method name="TransactionStatus" id="01598df6-5e9a-408d-88b9-c687b6e28022" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction">get:Response</con:element></con:representation><con:request name="Request 1" id="99bfcb12-2c9c-496e-a9f6-de84faced267" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"fa382068-08f7-41a0-b4e4-906e214bc2e9"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="9a9a5f7d-d4d2-4fe0-b4df-94be797fe06b" wadlVersion="http://wadl.dev.java.net/2009/02" name="VoidCapture" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://cs.uat.freedompay.com</con:endpoint></con:endpoints><con:resource name="VoidCapture" path="/Freeway/Service.asmx" id="7cf78761-3987-48e6-8bef-70da49703cfc"><con:settings/><con:parameters/><con:method name="Service.asmx" id="25b368f0-b185-4c20-9ada-68b9eeeb2547" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/xml; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">soapenv:Envelope</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>text/xml</con:mediaType><con:params/><con:element xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">soapenv:Envelope</con:element></con:representation><con:request name="Request 1" id="a54212e8-8f81-4f2d-b030-619a1bbded58" mediaType="text/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://cs.uat.freedompay.com</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soap:Body>
      <Submit xmlns="http://freeway.freedompay.com/">
         <request>
            <storeId>1413329017</storeId>
            <terminalId>2413148015</terminalId>
            <comments>7.03 Restaurant, eCommerce, Moto Follow on Void (Full)</comments>
            <orderRequestID>01Z6FUOQL001U624E1UTDSKKU15UJIGZ</orderRequestID>
            <voidService run="true" />
         </request>
      </Submit>
   </soap:Body>
</soap:Envelope>]]></con:request><con:originalUri>https://cs.uat.freedompay.com/Freeway/Service.asmx</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="dfe118f3-6449-4971-90c3-3ece6a50dc56" name="Delivery_Location_Scenarios-STAGE"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">true</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="c8d2c511-1f97-4406-aa67-225ce9c7e682" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="LocationSearch" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="0d0eb659-f2c3-4d28-ab1e-b2b63da4afb8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>lat</con:name><con:value>${#TestSuite#lat}</con:value></con:property><con:property><con:name>long</con:name><con:value>${#TestSuite#long}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryLocSearch" id="2b5595ea-09ef-40ad-946d-38595db8671b"><con:settings/><con:config service="DeliveryLocation" resourcePath="/AOO/v2/DeliveryOrders/DeliveryLocations" methodName="DeliveryLocations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryLocSearch" id="92825888-c019-4808-aa01-e30f8c10ff01" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${#TestSuite#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${#TestSuite#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryLocations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b2718656-e5d8-4e2f-ac00-bc4d1d41aacc" name="HTTPStatusCodesCheck"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3ada3bc8-e1e0-45b5-827d-4ee5ca795431" name="USADropoffCountryCheck"><con:configuration><path>$['DropoffLocation']['DropoffCountry']</path><content>US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f30ef6f9-d337-485f-8402-c82e6020821a" name="DeliveryFlagCheck"><con:configuration><path>$['PickupLocation']['DeliveryMarketFlag']</path><content>True</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="latitude" value="${Properties#lat}"/>
  <con:entry key="longitude" value="${Properties#long}"/>
</con:parameters><con:parameterOrder><con:entry>latitude</con:entry><con:entry>longitude</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="2996c08e-37d6-40fe-927e-ed561ebf9627"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>2b5595ea-09ef-40ad-946d-38595db8671b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0d0eb659-f2c3-4d28-ab1e-b2b63da4afb8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="9536025a-b5c8-48ce-a522-50b087d6d9ba" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="LocSearch_NoRestaurant" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="5d2f2e6f-9304-46db-aaa8-a71bcd075aaa"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>latNoRest</con:name><con:value>${#TestSuite#latNoRest}</con:value></con:property><con:property><con:name>longNoRest</con:name><con:value>${#TestSuite#longNoRest}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryLocSearch_NoRestaurant" id="ba090121-cf52-45b9-bf17-677e65110421"><con:settings/><con:config service="DeliveryLocation" resourcePath="/AOO/v2/DeliveryOrders/DeliveryLocations" methodName="DeliveryLocations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryLocSearch_NoRestaurant" id="92825888-c019-4808-aa01-e30f8c10ff01" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${#TestSuite#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${#TestSuite#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryLocations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b2718656-e5d8-4e2f-ac00-bc4d1d41aacc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a85e1775-1ed3-4f39-9dcf-7fd1b5966adb" name="No Restaurants available in your area"><con:configuration><path>$['ErrorDescription']</path><content>No Restaurants available in your area.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c1a26bfa-a321-4dea-a693-a828a82e397d" name="ErrorCodeCheck"><con:configuration><path>$['ErrorCode']</path><content>200</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="latitude" value="${Properties#latNoRest}"/>
  <con:entry key="longitude" value="${Properties#longNoRest}"/>
</con:parameters><con:parameterOrder><con:entry>latitude</con:entry><con:entry>longitude</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="284dde49-84d1-4603-ad3e-7cf5532772e0"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>0085b58d-4e62-4256-9d04-baf7d3d6006b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b5595ea-09ef-40ad-946d-38595db8671b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5d2f2e6f-9304-46db-aaa8-a71bcd075aaa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="c1d77351-cd9e-4fef-8150-770f80e4284a" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="LocSearch_DeliveryFalse" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="adcf44e6-003b-45be-a65e-f27fbe427063"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>latFDel</con:name><con:value>${#TestSuite#latFDel}</con:value></con:property><con:property><con:name>longFDel</con:name><con:value>${#TestSuite#longFDel}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryLocSearch_DeliveryFalse" id="1daf9239-d612-40b8-8069-684bdf627480"><con:settings/><con:config service="DeliveryLocation" resourcePath="/AOO/v2/DeliveryOrders/DeliveryLocations" methodName="DeliveryLocations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryLocSearch_DeliveryFalse" id="92825888-c019-4808-aa01-e30f8c10ff01" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${#TestSuite#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${#TestSuite#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryLocations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b2718656-e5d8-4e2f-ac00-bc4d1d41aacc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="latitude" value="${Properties#latFDel}"/>
  <con:entry key="longitude" value="${Properties#longFDel}"/>
</con:parameters><con:parameterOrder><con:entry>latitude</con:entry><con:entry>longitude</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="01f3ff55-d09e-478c-a585-ae614766eca9"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>0085b58d-4e62-4256-9d04-baf7d3d6006b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b5595ea-09ef-40ad-946d-38595db8671b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>adcf44e6-003b-45be-a65e-f27fbe427063</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="ec6151e9-3303-44b5-a6d0-65daec8d12b6" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="LocSearch_NoOLOCoverage" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="a13a886b-5f6d-42de-9abb-e978fcbb139d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>latNoOLOCoverage</con:name><con:value>${#TestSuite#latNoOLOCoverage}</con:value></con:property><con:property><con:name>longNoOLOCoverage</con:name><con:value>${#TestSuite#longNoOLOCoverage}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryLocSearch_NoOLOCoverage" id="1c437fee-7a99-48bc-b8f9-3362f53acf1f"><con:settings/><con:config service="DeliveryLocation" resourcePath="/AOO/v2/DeliveryOrders/DeliveryLocations" methodName="DeliveryLocations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryLocSearch_NoOLOCoverage" id="92825888-c019-4808-aa01-e30f8c10ff01" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${#TestSuite#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${#TestSuite#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryLocations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b2718656-e5d8-4e2f-ac00-bc4d1d41aacc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="latitude" value="${Properties#latNoOLOCoverage}"/>
  <con:entry key="longitude" value="${Properties#longNoOLOCoverage}"/>
</con:parameters><con:parameterOrder><con:entry>latitude</con:entry><con:entry>longitude</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="8355b270-4561-4caf-8521-1df708b430af"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/Location/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>0085b58d-4e62-4256-9d04-baf7d3d6006b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b5595ea-09ef-40ad-946d-38595db8671b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>adcf44e6-003b-45be-a65e-f27fbe427063</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>EndPoint</con:name><con:value>https://api-staging.buffalowildwings.com</con:value></con:property><con:property><con:name>TrnEndPoint</con:name><con:value>https://api-staging.buffalowildwings.com</con:value></con:property><con:property><con:name>cs</con:name><con:value>b412815427554a96ADBc8Cd2af6C368f</con:value></con:property><con:property><con:name>cid</con:name><con:value>e61af77efc1e4477bf8b83ade31901b5</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>2019-04-04T12:50:00</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>2019-04-04T12:50:00</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.931058</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.346002</con:value></con:property><con:property><con:name>latNoRest</con:name><con:value>46.9778</con:value></con:property><con:property><con:name>longNoRest</con:name><con:value>-94.2650</con:value></con:property><con:property><con:name>latFDel</con:name><con:value>41.87</con:value></con:property><con:property><con:name>longFDel</con:name><con:value>87.95</con:value></con:property><con:property><con:name>latNoOLOCoverage</con:name><con:value>12.97</con:value></con:property><con:property><con:name>longNoOLOCoverage</con:name><con:value>-83.95</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="1cc8e1c3-39d1-43aa-a088-8bf31672e408" name="DeliveryOrder_Scenarios-STAGE"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="78b60301-980a-4c2f-9329-9349eee50ed4" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-CompleteFlow" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="3ab9428e-15ab-4ce1-8558-c3a8fe842303"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="904225d6-b882-4945-a59b-64868aaea122"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="aa6b142d-a148-4b3f-b3b3-9ec38f82d0c2" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aabf32a9-6af3-499d-ad61-09ecb2b849c7" name="DeliveryAvailableCheck"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1a9e2480-af67-49be-841c-bd4a14460243" name="SiteIdCheck"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="95e3b8eb-adba-48bc-9cd9-589591997e31" name="CheckExistenceOrderId"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6d531f13-b6f6-430f-a52f-509e08d622ad" name="FailedItemCheck"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="06ef2a97-9994-433c-b9be-a5d830699447" name="ResultCodeCheck"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="08d9f88b-b0cf-4b49-abb5-e4312ffc6429"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="e8e37e69-8c1a-4cdf-b8d3-d21ae6cadf0b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14591</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>807ab1ca-dc0d-4755-a698-84d8443b0a1f</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="e9a914b1-128e-44e2-a90a-2d10ae93de43"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="09e36e46-c687-4e06-994b-12b5bc9f799b" name="HTTPStatusCodesCheck"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="ad2a0222-250b-4f4c-a683-4c844323d5b7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="b8e94f58-b5ec-464e-8d03-f1918ea48a09"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>bc6a8279-670a-4fda-8bc2-a516e4c452d4</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=bc6a8279-670a-4fda-8bc2-a516e4c452d4</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="9adb04ca-654a-4ee6-9852-15c91aea4967"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="754b4fab-7412-46db-8eb5-091dfee97918" name="AmountMatchCheck"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="3889e818-5a3d-43f9-a550-266f6e78624f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b1acf4a3-43ca-4b9c-b2c2-69686d3ffb2e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="PaymentSuccessCheck" id="6c89f2a5-097b-49bf-ac6d-d7381d9fb250"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="82e9619f-25cd-4905-8ff6-c4d7f57a134c"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="8e095782-0e53-468c-9607-9097615ae8a7" name="HTTPStatusCodesCheck"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e10c3da2-657c-452c-961a-62a6f459d500" name="ResultCodeCheck"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b555242f-b6bc-4dad-acae-fd8132458e6c" name="PromiseTimeCheck"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4229326b-f84e-4b20-944b-d12934200d6c" name="HasFailedItemCheck"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01f7892d-32d6-4d39-aa72-8b6b5e9e1453" name="SiteIdCheck"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e5613226-71af-43c5-b519-6488142be2df" name="OrderIdCheck"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c5309b38-1464-4e99-b657-1eb997909533" name="TotalAmountCheckMatch"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="2405fa0a-9811-4ef4-8547-42a0292c4f3d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="6f105119-9f25-4bd2-b668-6b3cb9ef6fe3"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>2b8a62b3-e836-4bd8-9931-e2afeb0bef52</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="ff96627c-6a95-407f-b89a-f2a9f6448157"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="64a507fa-773b-468e-92ed-fe48e85d611c"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="df5bb6c5-095a-416f-a8cb-b88445467de3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="14dcbb8b-6aca-43c0-a2a9-c0f21b9d7a9c"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="f01a35a4-6311-4372-89cd-1bb0845035ad"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="87a652e0-7f75-4a6b-a461-8d469d04fe82"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="ea20a1b5-a250-40f0-b3b7-34a27dec5fdc"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2fbc65df-c7eb-4f93-aa6a-b9fefe2b5812"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="2cd026e8-8a0f-4fa9-8442-a03b003a3e5c"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="4aaae653-2283-4514-9e4f-f43ac571d4da"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="b20e9564-e28d-4951-bb99-067e17eab93b"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="4659efa4-fa8e-4c28-8b4a-f5cbe6a3d77f"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f09d82ab-899d-489f-b32a-d0698abd7151" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7b7f9970-2754-4837-b2ba-cf0890f69a5f" name="AuthorizationStatusCheck"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="73c448cd-3252-4626-be74-5c2bc5022d85" name="CapturedAmountMatchCheck"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f573d30-b512-421d-8b59-8607601bec87" name="AuthorizationAmountMatchCheck"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="23c8dfd8-395f-4062-97e2-03eb3892d1bb" name="ProcessorResponseCodeCheck"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="f8bc1f53-4845-40cc-96b3-a9c72325d1c9"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="c77ce0f9-1bc6-4dd2-a716-45546d659a79" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-SingleItem" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="b31d4b15-cd67-4eac-aa2f-0c657c99a201"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="baf98b65-18d8-47e7-b27e-1716224012a6"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Single Item",
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 2,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="46765f07-362b-4866-b766-deb4bd7466d1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="93f9c6e6-7827-40a7-bb82-abb98eb58a6a"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="1e1a70a5-25f3-4d7f-8e2c-7d1f4b0e5909"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="8b92b6c8-e2de-4acc-890e-956f44719858"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="9b4ddb5b-62fc-4595-b8f0-0fb10877c03d"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="62b47faf-b188-47bb-8909-2159605d47e4"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="6f1f75d4-e30b-4b1e-bd52-ee459df63e78"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="e74990f9-a589-4d0e-ac1e-0db0f57ddb95"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>22449</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>2375d31b-e92c-428b-8fed-c7dc40ddaf05</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":7.58,"Quantity":2,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>16.97</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="9da8e2da-c614-4c94-a27f-cfcd3b2ebcd2"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="2ddca21a-bb0e-4c56-b787-ed95cecbebaf"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="36211469-935e-467c-872b-924012106b53"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="84970ec5-8fc5-474f-a522-37e36fd0c42d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>dccb4719-0577-4e29-9052-7c5ab09df18d</con:value></con:property><con:property><con:name>Amount</con:name><con:value>16.97</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=dccb4719-0577-4e29-9052-7c5ab09df18d</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="1f0a2c05-ea0f-46dc-90a1-caeb4c2f8bf6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d8a0eb84-bbc0-4ecd-8e2b-09c495a3b835"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="6c05c5fd-8955-47e1-95e4-edfc8778728e"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="7b7fc636-65fe-4d25-a02f-3b23b42e4e89"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="2ebd58fe-a159-4b84-882c-5c693d96570c"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="eb278cf6-e4b8-48ee-a426-c5173286e059"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="d1a79d20-3b60-488d-b884-96a5799c9596"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="55620607-254f-4e2a-907f-7f208c7f10bf"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="f4e91431-f642-4b45-b3e2-4a07c0b3f603"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="64859cd3-e402-423e-9b30-b23d8d24d6d6"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="96793ccc-cba8-419e-a427-9a94c2fc64d0"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="4b0072f3-9cf6-462a-ba90-fc3e9a20043b"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="260617be-c8f0-4920-bd59-f33d72c03174"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="af6b9112-3e85-4e37-b1f5-b61be4ecf1ed"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="49351b11-8425-4d95-9373-7cc3c10acebc"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="ed793edc-d29a-4b79-8d38-ae0a157c3393"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="888d8347-8da4-420c-ba51-8e85a43bed5d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="ae5a493d-809b-42c2-bea9-2103157c4262"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="27da9c05-4f66-4292-9a4d-f092b90dd507"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="65f6370a-a1e0-4749-9cc6-600713d39368"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="30c2b72b-e8be-4e6f-9f5a-f2ed3b6193e1"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="702c0849-6da0-4191-8c45-e7ff65f4f796"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="45917512-a4ff-4e7a-a5b7-abfa72944e79"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="007b2b2d-9b1d-4cd8-83f8-aeee44eb55d7"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="1a230344-0a98-49c2-8298-9e441f57c8c6"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="617467a7-4ffa-4b56-afc0-5c0ad295e794"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="de9bd162-536b-4c51-bdb1-c0c975e275bd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="9ca3a780-8bb3-4839-ae6d-f61a6ff834bb"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="8f405594-c84f-453c-a6c8-c2acb360735c"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="339063ad-1c8d-4107-9f37-e62137a3055d"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="d917c269-1d01-4c34-8129-87831b2ea243"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="420637f4-582f-4455-b4cb-b200cef5c7f1"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="43367967-caac-4087-9729-a4154c01b948" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-ItemWithModifier" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="8316a90c-a049-4ca5-a0d2-4088d1636e2a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="24a8c9f5-2c2f-4c6d-bbd5-76a123d6099c"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Item with modifiers",
			"ItemLineNumber": 1,
			"SalesItemId": 3791,
			"MenuItemId": 2098,
			"Name": "Traditional Small (Approx. 9)",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12563,
				"SalesItemOptionId": 17171,
				"Quantity": 1,
				"Name": "Sweet BBQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }]
		},
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ad6c5922-0c2c-4f5d-bdfe-5fe4f5d2c651"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="3858e742-6865-432b-baed-97f7c34f74e0"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="dd4187d0-d0a9-4271-a4fb-04910d4d68ad"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="47c0dd48-3ad8-40bf-943a-3368abf50342"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="c6f1fd7e-2fe2-4533-8d12-1383207dbc80"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="1132c32c-5725-4ba9-a546-56cebf0fc949"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="30ddb75e-7066-4c2e-8c0b-216d11a3cab0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="e9584edd-0e10-4716-8088-bc34b8c5dd14"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14593</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>d6a4a5d5-d009-4be9-8108-9d25371304c6</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3791,"MenuItemId":2098,"CompId":0,"Name":"Traditional Small (Approx. 9)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12563,"SalesItemOptionId":17171,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sweet BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10456,"PosModifierId":17127,"Status":0,"Modifiers":[]}],"UnitPrice":11.29,"ExtendedPrice":11.29,"Quantity":1,"NextModifierSequenceNumber":2,"PosItemId":16181,"CompValue":0},{"$id":"7","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"8","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"9","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.23</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="33f35a7e-e88f-4133-b0b3-0aacd56fe1e8"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="3cd6a7fe-cb24-4490-9971-ed7e0b47f846"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="5d0cc131-bd1a-4855-b2a8-4864a8419035"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="308bc0db-e9a0-492f-9f2a-13af5a4d7f57"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>64842c5b-3c9e-4d5f-8402-7e6d1f457ef4</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.23</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=64842c5b-3c9e-4d5f-8402-7e6d1f457ef4</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="6446af36-1e96-4f8c-abb8-e1672564a60e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="dfcd389c-e607-4612-8163-f82757f2f7e1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="4fb98357-9736-4ad1-9b4e-4e9ba8357fd5"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="5a2dfe9e-c32f-45b8-84dc-aed8f8e05cda"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="a2385e2e-68f9-4d79-bb0b-8c537edd83c7"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="d24cf72a-dc20-4633-835e-b92e4e0308d6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="a7c37801-65e7-462d-83f6-d7cbb96d3cdc"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="9337cc9b-74b2-4386-a52b-4a524a73ee4d"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="5d3003e4-acc9-4499-aaf6-3f616e4d62a7"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="539e3fe9-be95-4f3d-aeb5-cb3611f9defc"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="9733c07d-1ce1-495d-9a03-14286056da72"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="c9578bb1-9a55-44f1-b0c6-d60b25f121a5"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="faa81116-bc55-4bad-9cd2-3a09724afaff"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="7d8e4469-37b6-42ff-afff-156c920091a1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>da713979-e901-4abe-ad3f-39c02f2cac36</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="4d27f076-889f-4059-9208-ec01d716add1"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="5ee35f64-d99b-41e7-8969-8386f5179e1d"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="34f30a5c-9d71-470f-9be6-73492967defd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="817753dc-f91d-4c26-b136-ea12965d9682"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="93d436a4-fb10-4d68-9ed4-ae7a8629669c"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="eec394a1-0f38-47ad-abcb-c4595a35105f"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="d38b179a-574b-48ee-aa11-c54ecb13428a"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7e4154ff-9b7c-4491-8711-552b492fb4ea"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="7f0eed7a-c1a4-435b-9eb0-8efb5237f6d8"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="72147712-c355-4387-a4ee-fdeaa6b6bbdd"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="ce4532f8-ba73-42c9-96c8-79fc8fbdf60e"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="ff800869-af2b-4b05-a6bc-c2990e7cefad"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="4cdfaae2-46dd-4307-9ece-a869293b6edb"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="f14b982d-ccab-4c7f-963a-2380807d6df6"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="36c6ef4b-9432-43af-b36b-8f896266ef76"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="200dd3da-1bd8-4e63-aa8d-98e9b2ab53c6"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="cc236687-4dfb-4b3c-b764-402a1a3bf94b"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="940561cb-23be-4460-b8a4-b2f0d2abd6b3"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="c6a9a828-d859-4fa9-b9c4-ae2f396ea77a" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-ItemsAndItemsWithModifiers" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="34f25b59-54c3-42d3-b796-f799def81d02"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="560a67cf-13ec-4aff-a17e-58aa7643c8a6"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Item without modifiers",
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
		    "_comment": "Item with modifiers",
		     "ItemLineNumber": 4,
			"SalesItemId": 3791,
			"MenuItemId": 2098,
			"Name": "Traditional Small (Approx. 9)",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12563,
				"SalesItemOptionId": 17171,
				"Quantity": 1,
				"Name": "Sweet BBQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }]
		}	
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6fd68a1f-6b8a-43d7-b1df-803533e22dc6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="e908407c-b4f3-4651-ab06-e1c5434f34fd"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="6644f9ad-dd04-4264-8c11-9125d360926d"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="053e689c-cf8e-408c-ba19-f239181069ee"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="655f9885-4198-4e65-8554-9b17959f6108"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="aaa1442b-e13f-4cb1-9cb4-c697dd97ac2f"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="1f8eb219-7ea3-4eb1-898a-9dc981bcacea"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="41a6b10d-1dfd-4c50-8391-63f354124240"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14594</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>d992214e-3e69-4f38-a00b-4743a070ce09</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":3.79,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":3791,"MenuItemId":2098,"CompId":0,"Name":"Traditional Small (Approx. 9)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"9","SequenceNumber":1,"ItemOptionGroupId":12563,"SalesItemOptionId":17171,"Action":0,"DefaultAction":0,"ItemLineNumber":4,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sweet BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10456,"PosModifierId":17127,"Status":0,"Modifiers":[]}],"UnitPrice":11.29,"ExtendedPrice":11.29,"Quantity":1,"NextModifierSequenceNumber":2,"PosItemId":16181,"CompValue":0},{"$id":"10","LineItemNumber":5,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>25.59</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="c35dd7d5-c535-4288-840c-ba4190553823"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="4fe20c41-66a2-4167-8060-d29a0493f235"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="958cd16f-4514-4fbd-94da-c19a5c4f2284"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="651de694-2d66-4ea0-9984-79c91fb21346"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>a0697fb6-fb22-4a59-bbea-35eb311283c4</con:value></con:property><con:property><con:name>Amount</con:name><con:value>25.59</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=a0697fb6-fb22-4a59-bbea-35eb311283c4</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="cb1e170e-f7cb-4573-b230-e66bb7e6c143"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9286f5ac-bbdc-40a9-8737-40b56abefb92"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="428052a4-d6a2-48d6-b8f1-795ee1bd82a7"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="73b51c49-a1ad-4b37-91cc-41a685e6e786"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="9076b933-cc18-46d9-bc6e-4ee49f9453c4"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="0ebdda24-abf4-4dec-8d9f-d757ab790d59"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="c12e7c41-a351-42c9-a61a-41c8cda6f7df"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="ab14e12b-d17e-460d-a31c-9f96e686db8e"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="dae254d5-94e8-4fd4-a3bc-0c477a1a29ff"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="ffadeb5e-3d95-43b7-b34d-5cbecb68e9e2"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="4f941086-b66f-4f25-b9b1-b8dacef6adfb"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="ccfd785e-17fe-4c83-8c70-397e76eca846"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="5d21702e-364f-4551-8e7f-22c64c8b24ef"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="aed7f7c6-ca74-4367-8de0-e6f4122d280d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>cda2566a-85aa-4434-90f3-51de7988dfc3</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="b6418bf5-1715-4bf5-b658-a3db7882cbca"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="c9fbb369-2a30-4c20-9adc-32d7a1b609d6"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="da4d5ef1-55b9-4c28-8826-26c865b4e6f8"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="f10bb6f8-128e-4b8f-9f5c-d1751876e1db"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="068c4010-708e-41ee-97ce-bfb07c6bf6fb"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="c5fac132-4172-404e-bef7-46159c42aacc"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="83f0fb08-075e-4e9d-9907-bc06ec50eae5"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="00cd7547-6215-45fd-b2c5-b8aa3e29815d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="003dd3a6-34c9-4e7a-9702-2889a90ecde7"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="c9c08266-ff6d-4e2c-a494-ca2644f17497"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="23cdd539-ca76-4e69-a899-d9d8d5f7eb47"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="7345139a-0a2d-435e-ad6f-cc42d145f8fe"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="010c7d08-64ce-400e-850e-601911c19428"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="05ec9639-f337-44f9-a807-d71b1d2e5d5e"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="fcc37a7f-c58c-4591-88ea-f94f0c3e706f"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="5bfccbc5-f4c9-4a28-8cef-331b190af3da"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="f48026a7-b663-4efa-b200-670faaaf4543"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="cfc81a54-fb9c-4d1b-a0ba-c17ca755b15b"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8183839c-648c-4c76-b326-5c19be51c5b1" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-86edItems" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="174952d6-8b48-41af-b18d-20e7ea526173"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="07a31e10-7c5a-4233-9594-f3a84e55de19"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "86ed Item",
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="88bbbf31-646c-4d79-a3e5-5aa8536b738a"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="6665aaf3-ed3b-4ba7-bf37-d896b06f0409"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="6c7564a0-2838-4cc4-84a5-e1bd2b1f953a"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="baab4720-a0c4-4ce5-a102-7244af4240c0"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="f606f7dd-1f23-4a98-b605-c66a6a60b1a1"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="2fe4e0de-55bb-4387-992c-3be6967c650d"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="de72090c-eb15-4285-98a6-b4501c74518f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="3fd5ff28-1db2-42ce-8652-bdc7d5ccf78d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14595</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>a2c0fcb0-0eee-41d2-8c7d-7ba39c5357e7</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":3.79,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>12.61</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="5f6ba1a5-da32-4deb-9ebc-2154669dda16"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="3004f5fd-2291-46ad-b3bc-f93d80e91b3e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="745cd761-6d75-4309-bcd2-579ab9abf144"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="aeb5e4ec-c9ce-44a2-8eac-8d2892f090cd"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>365f4cf0-4b17-4c71-a4ba-131a75e67a62</con:value></con:property><con:property><con:name>Amount</con:name><con:value>12.61</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=365f4cf0-4b17-4c71-a4ba-131a75e67a62</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="8dec9489-652e-4fb4-a20d-a91689ef6e35"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="46026dfb-43ed-4e71-96f7-c2fc98eb7b1f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="4e320b4a-e2ef-40fc-b9d7-fcff7b570b7f"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="45836cea-1ec0-4c87-81c0-25369d22448e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="e2f37193-c845-4993-babb-70c25f0459cd"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="e944705a-cd64-44b3-9efa-5000cc1a37f2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="40549055-693f-444a-9d67-d7e0fef8ac01"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="61488ac7-b313-4f0d-95a7-3c1805a8f285"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="2b75e51a-2bbe-46d4-8eca-650b97e7980b"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="e58fe8d3-315e-4f1c-bdb7-a208ad3cccf6"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="41c875b9-ffad-4d82-99f5-78898f36173d"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="2f32385d-4935-48dd-8ea8-d5fb982f0bcf"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="0c1ff47e-9798-440e-85df-0f7b3c614a5f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="7ca81d20-a1a8-42bb-a9b9-4587f4f2bb9f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>a024ccab-7b32-400f-b429-8cf20c39b2dd</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="fa7d5c92-69aa-40f7-84fd-1050bf8ce32f"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="35139ec3-d703-4006-8088-924e29ef852a"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="fe2f3586-6b61-4479-9ded-257ac627f000"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="c4abffd8-365a-47d5-81a2-f902fb844c1d"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="a83f9e1a-1b63-4326-a61a-880e0fa8b651"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="ac237983-90d9-49b5-bb18-b8ae809f8268"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="1df7211d-ddbe-4a16-b045-8792f54fcbd6"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="1ba41ba1-5a18-40bb-ab07-30c656a87897"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="d5ecbbdd-fb19-40c5-9411-a6708fffa1f3"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="fe59a1a1-11c2-4ded-901c-8ab222110ead"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="a038a331-602b-4e0d-aaa7-364c89ec6313"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="4e12dfc0-e96f-40df-bd4e-692f8fe421ff"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d34d923d-0525-467f-bb9d-072c2b085c01"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="4adf2c09-7ceb-4267-aa30-423d3a556ebd"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="92d59ece-7ff0-4115-86ee-3b73a4f64cff"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="c5d4f352-fa64-40ac-84f0-2f62e64f39b1"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="51f17561-7c0f-45fb-a52d-44777919ce6b"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="d4da194b-8ae2-4aea-b0b2-3317fb8407f5"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="c6b9b976-0ca3-4e2d-8424-17da538b6ed9" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-86edModifiers" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="125a3960-fd27-42ff-a01d-16a2c8a9fd04"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="3841270f-32e7-47c3-89dd-a2f30c7d1ca5"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Item without modifiers",
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
		    "_comment": "Item with modifiers",
		     "ItemLineNumber": 4,
			"SalesItemId": 3791,
			"MenuItemId": 2098,
			"Name": "Traditional Small (Approx. 9)",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12563,
				"SalesItemOptionId": 17171,
				"Quantity": 1,
				"Name": "Sweet BBQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }]
		}	
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="c7d8a876-e944-429e-894a-f71e6a66ab91"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="7a9638e6-dd37-4af3-91a2-a1abe07e5fab"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="96178bef-d46b-40c0-b8c2-990623023484"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="54163d05-290b-4e93-9850-8107e5a55e7b"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="91871f2b-be43-4aa8-9c1c-b562c841eacd"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="383d7a47-e028-4f59-a7a9-0aae4a737dcd"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="e0898900-27f0-45ad-a8dd-bccdb12efab9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="1b0e6f42-2d7a-4f6a-9be7-b34de9b738ee"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14596</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>3a7b66a5-57cd-4c7c-95cf-15c9954b0ff7</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":3.79,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":3791,"MenuItemId":2098,"CompId":0,"Name":"Traditional Small (Approx. 9)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"9","SequenceNumber":1,"ItemOptionGroupId":12563,"SalesItemOptionId":17171,"Action":0,"DefaultAction":0,"ItemLineNumber":4,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sweet BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10456,"PosModifierId":17127,"Status":0,"Modifiers":[]}],"UnitPrice":11.29,"ExtendedPrice":11.29,"Quantity":1,"NextModifierSequenceNumber":2,"PosItemId":16181,"CompValue":0},{"$id":"10","LineItemNumber":5,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>25.59</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="488c865a-11c8-4aba-9c19-bf43c5584148"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="60846e1f-2fe9-4f97-8d75-c15990f6b0f0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="2a039514-bbb1-4f0c-80d9-bf8f326d9872"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="a3485843-fd06-4e18-b93e-7b9a5d18f87c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>987928f4-c0b4-4e77-a715-49b1cc09c600</con:value></con:property><con:property><con:name>Amount</con:name><con:value>25.59</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=987928f4-c0b4-4e77-a715-49b1cc09c600</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="1d1cb892-cfeb-4812-8e97-be33dcd7d8db"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ffdb5795-ffd1-4c52-9482-7e4e80b0c32f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="17a3211d-4629-4a16-8b2d-1c18e5fd3f5f"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="715c0cd4-4d68-4b05-b2b7-fe69c77ae87a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="b468e64f-8975-4331-a82b-5d428b3f6b40"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="1b80af98-4998-4cb9-9c39-811c1333ca15"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="cc050017-ede7-4f36-a499-78be92cc77d3"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="00b0f94c-de3e-403b-a4e3-be1c49576c89"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="2a45d5f8-90dc-46b8-93c4-c1224a06430c"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="83fc8e44-4dc3-4fd5-9c3e-31ae4f3d05fd"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="987b9d6b-8136-4750-b4b5-af5b3202e0d8"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="527b421a-3a07-484f-93e4-783dae6365c9"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="750ea205-73f7-4d91-89dd-0b5e252d67ef"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="5782cf06-bb5c-4376-9a9f-2e9ae6078c92"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>c2294d98-9fce-4885-82f5-8e7586ed0af2</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="634ba1b5-4af5-4fbe-9612-6ee9a23e0e5d"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="60f90b81-2f14-4d7d-915c-b01d06976273"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e30206b3-9f47-4fec-b006-1187f50a1ec7"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="19138774-9ced-462a-b859-52ef7b4376ad"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="2b7ce4d5-11b8-4a84-a676-327d2a9b1757"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="d84eabd6-5e36-45e0-9ca5-de56291dd732"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="0f94a947-8ddc-4a56-a6a7-a4fb73d6e80e"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6ec6f821-8436-42bb-b18c-729e1562a33e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="b365beb6-c71d-4e56-94e8-549ee797347a"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="14f5121a-d7c9-4b3a-80b0-2fef4de7c8f4"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="11cea61e-1d3b-4535-8e5c-a53b5cfa9d83"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="53280771-599f-401a-8897-d607aa42582f"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2f410857-b573-4f09-a666-449a7a5f3cb2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="ab221288-7a04-4249-9516-c0a23c6e3e2f"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="5e888afe-af61-4e10-879a-ec71394afdcc"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="0650bcb8-3639-44dd-b559-b26b984cb927"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="a67879a4-5b39-4082-96a3-087a9623550f"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="bf82dc2b-47a2-4266-b039-7ad3c05bfb2a"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="1bea01a6-790a-464d-a549-6c49e9c2a940" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-TuesdayBOGO" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="c42a617a-dab3-4d8e-9e79-2885337ee2d0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="40738ac3-08d3-4911-ab54-59aa4a592725"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "TuesdayBOGO",
			"ItemLineNumber": 1,
			"SalesItemId": 4076,
			"MenuItemId": 2200,
			"Name": "2 Boneless Small (Approx. 24 Total)",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12568,
				"SalesItemOptionId": 17313,
				"Quantity": 1,
				"Name": "Teriyaki",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 11686,
				"SalesItemOptionId": 13575,
				"Quantity": 1,
				"Name": "Blue Cheese",
				"UnitPrice": 0.6000,
				"Modifiers": []
			}
			]
		},
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b4d699eb-5d14-4f2c-b6d0-f94b0ea6774d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="3ad80401-5168-40e4-b97e-2c6aaae3aee0"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="a791f6d9-8a07-4228-a728-5a948cf7764e"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="0a3bb295-879e-44a2-a008-c430ce3e1815"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="802849e0-ef1e-40c8-8d9d-83ed84591f19"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="df9c9e04-4d11-431c-a15b-9a9ab5ab768e"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="0fcda85c-c8e5-4204-8b1e-2f476cc23a21"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="d987d7e5-def8-43ef-af5b-5bf412d0553e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14597</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>7e9c8f1b-e199-4c49-8b89-421287c1cc0e</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":4076,"MenuItemId":2200,"CompId":0,"Name":"2 Boneless Small (Approx. 24 Total)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12568,"SalesItemOptionId":17313,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Teriyaki","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10460,"PosModifierId":17137,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":11686,"SalesItemOptionId":13575,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":1,"Name":"Blue Cheese","UnitPrice":0.6,"ExtendedPrice":0,"PosModifierGroupId":14568,"PosModifierId":10001,"Status":0,"Modifiers":[]}],"UnitPrice":10.79,"ExtendedPrice":10.79,"Quantity":1,"NextModifierSequenceNumber":3,"PosItemId":17390,"CompValue":0},{"$id":"8","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"9","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"10","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>20.66</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="0bbb4049-bfc6-48b3-9dfd-e9e7469de73a"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="614b8f7b-995f-4a05-a82f-62dedff975fe"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="9902a97e-08ec-4f09-91e5-aa9c98d29d12"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="23e4f838-3283-49ca-b45f-3b51e6959cb7"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>16d5631d-ec3f-44ae-bf46-5a9f7d2c8883</con:value></con:property><con:property><con:name>Amount</con:name><con:value>20.66</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=16d5631d-ec3f-44ae-bf46-5a9f7d2c8883</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="17c587da-3e55-425e-b859-3012744ac5ad"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b12ea652-ec11-4cf3-a8eb-b89fd932a2e5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="80fb626a-c3b6-4cae-b716-c32587b87cb0"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="aba39edc-ffb9-43e7-8dfe-2bba77d7499b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="12cc3b75-8b9e-4caf-824a-8c5ac031f4e9"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="fba71d55-81d3-41e3-a688-fe285ad156bf"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="a3f2f923-1919-4f07-acca-ddb951288964"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="b78371c0-eb81-4069-ae1a-075f88249994"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="eb4cafa0-9407-44d0-9484-cbad337e6c48"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="8c616796-f475-4841-be6f-78cf1836699e"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="83cf20a9-5890-4011-9662-75a808dbf8bd"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="bf30828a-71cc-467d-ae61-b89c7dbe87cb"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="acd98c70-0042-4769-99fa-7ba939dad5cd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="efa88e2a-9ecc-4299-8d51-3e315b24ea06"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>55cc3955-ef9d-4d17-a66e-b68b6c319059</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="72e29ede-f54c-42f0-a3ed-47b97f84009c"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="31424157-a67f-4ef3-a199-d86eb1a1b6db"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="532409fd-f9b2-4b02-9abf-5e5bbf037e48"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="76d5c7c4-7f27-4dcd-93d1-e2fd8d455c12"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="d8791524-ea30-4da2-867f-c6ebbadbfa88"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="a0f1ba77-7400-4f30-8a63-a82fad7ce8de"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="d2e3cde1-0e85-4017-a285-9231f8c271d0"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="42ec0f50-4cfd-41a4-b6ea-ef5871d25687"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="ab96acb9-dac7-430a-af55-aad66f66c1f5"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="b40cee4f-9b52-4508-b649-66cbebfc84b0"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="0e0bde00-703d-408c-ac37-f7baeab65b3b"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="c0bfb89e-710e-4324-b0f0-987b5ac23538"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7ff5da74-27d9-4372-8ddd-96181f9abfa3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="61e4b4b3-9e33-4f7c-8a27-3a3072b1a5fe"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="8b5f3d9f-c6ef-4512-819b-a00dd5d3e3bc"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="4b653cf8-2f2f-4e56-afe1-108340ef5e61"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="e0ced657-e962-4e0f-b633-2bde8cbd1544"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="1e55736e-5286-45e4-9e21-95b07679a718"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="dc300e19-19dc-44b4-8c22-967214ed6e66" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-ThursdayWings" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="305748a2-5435-4858-a9dc-6f898fafbe6a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="fe2218b9-19fc-4c95-9438-3b57781d489d"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Thursday Boneless Wings",
			"ItemLineNumber": 1,
			"SalesItemId": 3700,
			"MenuItemId": 1986,
			"Name": "4 Boneless Wings",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12565,
				"SalesItemOptionId": 17170,
				"Quantity": 1,
				"Name": "Teriyaki",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 13755,
				"SalesItemOptionId": 20922,
				"Quantity": 1,
				"Name": "Ranch",
				"UnitPrice": 0.6000,
				"Modifiers": []
			}
			]
		},
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a193008d-a687-49a2-b674-65128c309380"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="e5819134-3af0-407c-8996-02814bf223c0"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="baf7170b-f451-4733-92c3-30b31dd39613"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="35ece6c7-d408-41e9-9d43-81cd93a19ae0"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="05d5060f-63c2-4bbb-b45b-37a90d708634"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="9237e8da-77cd-44cd-b714-0cf08d54de6b"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="8d4d86a8-c2d0-4ac3-ac81-34ba29c4aaa0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="b9574a9b-c8c0-49b4-bdf4-fd56424e455e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14598</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>c98f2185-8e1b-460b-883c-e4b4711b227f</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3700,"MenuItemId":1986,"CompId":0,"Name":"4 Boneless Wings","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12565,"SalesItemOptionId":17170,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Teriyaki","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10456,"PosModifierId":17133,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":13755,"SalesItemOptionId":20922,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Ranch","UnitPrice":0.6,"ExtendedPrice":0.6,"PosModifierGroupId":14580,"PosModifierId":10003,"Status":0,"Modifiers":[]}],"UnitPrice":2.6,"ExtendedPrice":2.6,"Quantity":1,"NextModifierSequenceNumber":3,"PosItemId":16211,"CompValue":0},{"$id":"8","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"9","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"10","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>11.93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="306fe72e-e955-4b46-b58b-1e02147a1e72"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="a7525738-f12e-4ae6-8d5d-868564abf460"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="ae585f8d-878a-47fa-9986-5fdf6059026d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="3e014157-e0b0-48e6-9012-0e1bdb4fadcd"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>78e12574-357f-49fb-a628-575f6ed1d429</con:value></con:property><con:property><con:name>Amount</con:name><con:value>11.93</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=78e12574-357f-49fb-a628-575f6ed1d429</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="5ea20085-2364-4575-a8da-77ee3ee82c83"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2f341ff0-e827-458c-88e8-7c2e625b7d4c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="2c09a22e-fce7-4df5-bd15-e226f451b01b"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="bfcd2ec9-c4bd-4bdd-8232-4649aebc2469"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="fc949843-a034-4323-ad7f-3a49b4f20737"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="525f9a03-e76d-443d-bb36-f6fe2344b4f3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="04791446-8781-4dd4-ad53-cfed305b5163"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="4fb0713e-646a-4010-ae3f-4620c253590b"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="19755ff4-ba19-4b19-b1e5-66c33d3a537e"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="057856a6-57ff-40f1-a7ce-bc2a00a5787f"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="5c885315-c8b8-4d5c-9830-4c35d31616d2"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="7991da75-58f6-431d-bfbe-c6449158b8a1"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="e6038281-12c7-4c29-ae86-a58a19fade6e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="7827fc08-d8d1-4ee0-aee1-2f12f64adcc2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>154dbb84-ae13-44a5-8d92-0a14244f5be6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e3376b6a-7dfe-4fe5-8040-0b9c2663d4f4"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="d21643b9-0aa4-480a-aef4-b634a2760b37"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8b1e3a47-b84c-49a6-a41e-35933933b8da"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="26789f9d-164e-424a-aedd-87948bca5e51"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="a5299b14-b559-4dbc-a7e2-a059413cbe35"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="cdf5ba3a-e5c6-40d0-b567-0f89a044232f"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="11e5d61f-ec52-4ce3-b2bc-04b2f0e5d3fc"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b24dca70-d725-48d6-83c6-3812dc2d79b0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="5c897467-7865-4954-b820-2142a1973b44"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="9e541a04-9a1e-47d1-b857-4693fad216be"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="206c87af-5de3-443d-841d-5ded10fe77e9"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="b492c34d-094c-4838-9f87-0b6d4cac9a65"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="03c2eb7c-f2cf-4033-bdaf-188636bf37a5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="41813e1b-2832-4d27-b7fb-f65db5d6f82c"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="85b6ce9f-5ef8-4013-90da-d17cfabf3f6c"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="b1f029d3-c835-42ae-950e-4f7d14611df9"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="22734367-005d-4593-be25-c50a4f9d5e01"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="5819af94-cb5d-450d-85bd-74291fd4538c"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="e9b34432-b6b7-41af-a890-cb01cafde7ec" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-DrinkItems" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="a723e7c6-f6e9-4cae-ba03-9320d3f4a1ca"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="922754be-fe74-4dd9-9ff2-0df1834c102b"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Drink Item",
			"ItemLineNumber": 1,
			"SalesItemId": 4585,
			"MenuItemId": 2149,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b8d42fbc-8065-4084-8bee-e587d0533de7"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="933b4d5c-a9a1-46ae-842e-048fd20e9667"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="74225a9e-3580-400f-94a3-9692edb77d49"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="ecb4549b-3d55-4008-9e0e-3df3f8ac7454"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="748b5d6f-7f8f-4a9f-bb26-b19bd99c8583"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="d2e052b2-3622-426c-b2f9-892ab7a55b03"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="3e3f9f8c-11c0-4969-84cd-4dd07de39c15"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="8373ca3d-2639-49b4-8d49-b69ee3703432"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14599</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>a5c196b9-dc29-487e-8575-b6db91ce9150</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":4585,"MenuItemId":2149,"CompId":0,"Name":"20 OZ DRINK","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2.89,"ExtendedPrice":2.89,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":13372,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>11.57</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="c02d1b1b-6079-4602-8412-57554dbb40fc"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="22f9acf4-d145-44ad-95ff-89beebd2e48f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="24912024-3cee-496e-bfd1-ad2a2c732e81"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="6b93e294-28da-4809-8dfd-007389417cd6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>11a854ec-ca1c-40b6-a567-0d4b25bdc23b</con:value></con:property><con:property><con:name>Amount</con:name><con:value>11.57</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=11a854ec-ca1c-40b6-a567-0d4b25bdc23b</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="c5dfe3a1-7742-428e-9d6a-7e239037d087"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f77684a1-bbc1-4a2d-8ff0-921cc0a2c0b0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="36617163-858c-4888-bba1-df75747124dc"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="07cb2480-19d8-4420-b683-cf44a1dbf0fb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="21d53254-49cc-4c3f-ac3b-4f010f3824ec"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="f6f9226f-26a6-4539-89c9-3be7b768a13e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="66df8780-91f8-4daa-b716-3debaa596016"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="f04f4f46-7fa7-42dd-85ef-91a26d257c61"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="214299ca-4392-492d-a750-a9e06712b8a2"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="f594bf2a-03da-40ab-8c17-1aecfc3faf99"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="6566df8a-a53c-4f3d-ad35-ac1f64e48bd8"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="bb5a8389-b91b-485f-abfe-52dc27ef5cff"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="e2ea27a2-fb46-44a4-b190-3d17acf2e237"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="fc910910-4f13-4aa4-8a8d-d08e6e890e6f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>30bd165e-5629-42e6-83a6-9d9dcb8f9019</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="86118112-943b-4157-b725-496bf507a818"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="9cabbe04-9fdf-423d-9278-13cd380b9d6e"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6b62edf0-2745-4ee9-bec3-e7b3939c43eb"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="69a4160c-7569-47c0-ada8-11f0330aebb1"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="b1578b57-c087-482a-aa08-00f183843d34"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="f271d972-c425-410f-b779-a2cb72e0ebc2"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="9afc6263-7509-4dff-a6a5-b44ac720bc59"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8a6ef56c-2d2d-4111-9f00-526332d4427a"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="fbf080c8-e79a-4f33-b003-328a1d2bfe39"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="58880000-0212-460d-8678-fe09927a4f3d"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="435b827d-31e0-48d6-b739-af3dbb36ad06"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="8fe3e3e8-5440-4538-a437-bc5fc89029ff"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="dbe368e3-6d88-438c-a620-5b45cf2239ea"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="d7fa5b6f-109b-4da0-9261-3c9ba2f24514"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="5d07e0a1-b7b5-4e6d-8fd5-48bc0468836f"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="b9778e18-03cf-4110-8404-bc4ffd209ff4"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="6b6e292d-65e2-4307-8471-34dfd3026bb3"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="2ad0a8a3-fd49-45fe-9427-a297352888ed"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="c1c84b05-9433-474d-825f-fbb173b726c3" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-KidsItems" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="cb79b35e-4f31-4924-9bf1-c1b3e3f805ea"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="e5de7d81-5f74-4bb5-8a1f-2afc881534c8"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Kids Item",
			"ItemLineNumber": 1,
			"SalesItemId": 3403,
			"MenuItemId": 1066,
			"Name": "Mac &amp; chesse",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 11069,
				"SalesItemOptionId": 8220,
				"Quantity": 1,
				"Name": "French fries",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 9754,
				"SalesItemOptionId": 7884,
				"Quantity": 1,
				"Name": "Kid Milk",
				"UnitPrice": 0.000,
				"Modifiers": []
			}
			]
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3f906c38-8076-45e5-9ff5-3336c5d0e549"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="3e9db989-a8c6-440a-be3f-3e046376961c"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="a9353f21-794c-4004-8d8b-20741bdc6cb9"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="de94b047-7e20-403c-95e7-1fc6229018fd"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="1bf003c7-43d8-4c5e-89bf-354174c5e403"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="690deeef-5e80-40dd-b742-2b6eb5dd14a4"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="272dee9f-bf4b-44b9-b4de-c2ab28d09635"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="e121ce85-0a5c-4da6-b3dd-cf6beb116809"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14600</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>fb3cace3-dc26-43a0-ab8f-458b02301105</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3403,"MenuItemId":1066,"CompId":0,"Name":"Kids' Mac &amp; Cheese","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":11069,"SalesItemOptionId":8220,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"French Fries","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10257,"PosModifierId":14114,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":9754,"SalesItemOptionId":7884,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Kids' Milk","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10080,"PosModifierId":14235,"Status":0,"Modifiers":[]}],"UnitPrice":5.29,"ExtendedPrice":5.29,"Quantity":1,"NextModifierSequenceNumber":3,"PosItemId":15970,"CompValue":0},{"$id":"8","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"9","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"10","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>14.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="6df3edd4-ec0b-4760-92a6-f7e982468bfc"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="14cf703c-a933-4bc6-ba70-50965b086675"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="5d56b4bd-ea09-4566-82d5-6364371ed516"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="53ccda40-48df-4509-8ffc-3ba6da3f8888"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>75769c06-4e00-40cf-959e-70e74839752a</con:value></con:property><con:property><con:name>Amount</con:name><con:value>14.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=75769c06-4e00-40cf-959e-70e74839752a</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="ab2fa143-6d96-4ea9-8ca0-354a8f30dee6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="01e6c1b8-2027-4052-8286-996a337abb9f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="29ad6af7-c9c6-47bb-8abd-bc8531676021"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="dd81791a-ad70-42da-8fcf-a7738dc97fde"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="9cae1ba3-4079-4825-b79e-420a8b69dc66"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="aab1d0af-dc53-42aa-9d20-bd1af5d116fc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="b8e79764-ce23-41c5-a271-520ef5a56b89"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="80179576-408d-4104-9f67-f3b1754f68a2"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="572d0b3c-a3d6-4ad3-8bf2-d6779813110f"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="4ac6c11f-5b0a-45cc-9471-ee2b79486faf"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="644c6afb-3582-4415-ad52-bb1ac4c23f07"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="704b91bd-441a-4e68-9d42-9ef04a3d8443"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="33c31e8f-7f3f-446e-82ec-51e987649190"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="199efea0-718a-4e8d-8df3-122b53533d6a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>c844cbb3-ca3f-4fee-a888-ef193208fc12</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e5566cc4-d8a3-40d9-b829-a0c90b1fa798"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="f17cf767-b42b-4547-a16c-e7c5f1d5417e"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="69f4601f-afe1-43f1-9197-c7439c278e20"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="ba238e69-054c-4edf-a89b-6a82567bb489"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="9834110c-885c-43b3-927b-1f6a099513fd"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="6fa48ef9-0c33-46a1-965d-b855d261d126"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="5d4b576a-3728-468c-b8bb-461a9eb861cd"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="513aa649-577e-42c4-8b19-ef7fc3ee1c30"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="0cfb764f-f36b-4a9f-87a0-d6f7fc7123f0"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="62b0bf04-7820-484c-b9e6-365fadb87228"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="3eea0fe7-c5ba-4afb-b850-2a4ba4583494"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="81fb321a-f5b6-4637-be7d-cf4c73001ae6"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="c49c4f23-8d0c-48f5-b3ff-42de8414acc0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="e7cc6649-24bc-45e7-a96b-aa1848750c20"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="fc1e3c34-c080-4258-841e-3f27d9ed3161"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="666e9329-e045-46df-aba7-7c3f8e5b9729"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="d9e888ad-8352-4779-b75a-2bbeafb18402"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="2b6d063b-988b-4a99-b09a-1ddb48040e20"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="baf53d24-01f2-4f28-9d30-a452d5305246" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-FastbreakLunch" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="4291845e-1b9c-422b-9a0c-53e463c0c213"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="b75d1753-9e3f-4607-bcde-af3c9a5ffd0b"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Fastbreak Lunch Items",
			"ItemLineNumber": 1,
			"SalesItemId": 3119,
			"MenuItemId": 1813,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12551,
				"SalesItemOptionId": 20899,
				"Quantity": 1,
				"Name": "Honey BQQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 8599,
				"SalesItemOptionId": 4036,
				"Quantity": 1,
				"Name": "Souce on Side",
				"UnitPrice": 0.000,
				"Modifiers": []
			},
			{
				"ItemOptionGroupId": 8678,
				"SalesItemOptionId": 4099,
				"Quantity": 1,
				"Name": "Blue Chesse",
				"UnitPrice": 0.000,
				"Modifiers": []
			},
			{
				"ItemOptionGroupId": 13177,
				"SalesItemOptionId": 18978,
				"Quantity": 1,
				"Name": "Pota Wedges",
				"UnitPrice": 0.000,
				"Modifiers": [{
					"ItemOptionGroupId": 11513,
					"SalesItemOptionId": 14677,
					"Quantity": 1,
					"Name": "American Cheese",
					"UnitPrice": 0.6000,
					"Modifiers": []
				}]
			}]
		}, 
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8268d9b8-d8e0-4941-8726-3c15f763b03d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="04c2b7aa-1ea6-444e-92c9-6ed96751c52f"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="2531ef40-ca38-405b-b5bf-304b2c176768"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="4d757f70-ca34-4b39-aec8-3c592686ebc4"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="ddad4daf-5d92-4861-bef1-b42d20e3590b"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="9a0313d2-e506-48d6-931f-2fa9788e1889"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="83673477-b7bd-42bf-8537-4cae52aefbe9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="27db642e-fe63-45e0-a208-3af8c0323418"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14601</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>62219262-db15-49f3-b308-a39051d2a4ce</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3119,"MenuItemId":1813,"CompId":0,"Name":"Lunch Traditional Snack (Approx. 5)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12551,"SalesItemOptionId":20899,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Honey BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10455,"PosModifierId":17156,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":8599,"SalesItemOptionId":4036,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sauce on Side","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10001,"PosModifierId":11943,"Status":0,"Modifiers":[]},{"$id":"8","SequenceNumber":3,"ItemOptionGroupId":8678,"SalesItemOptionId":4099,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":1,"Name":"Blue Cheese","UnitPrice":0.6,"ExtendedPrice":0,"PosModifierGroupId":14567,"PosModifierId":10001,"Status":0,"Modifiers":[]},{"$id":"9","SequenceNumber":4,"ItemOptionGroupId":13177,"SalesItemOptionId":18978,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Potato Wedges","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10289,"PosModifierId":16259,"Status":0,"Modifiers":[{"$id":"10","SequenceNumber":5,"ItemOptionGroupId":11513,"SalesItemOptionId":14677,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":4,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"American Cheese","UnitPrice":0.6,"ExtendedPrice":0.6,"PosModifierGroupId":10351,"PosModifierId":16789,"Status":0,"Modifiers":[]}]}],"UnitPrice":8.99,"ExtendedPrice":8.99,"Quantity":1,"NextModifierSequenceNumber":6,"PosItemId":16433,"CompValue":0},{"$id":"11","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"12","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"13","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>19.28</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="0911f1c6-a4d5-4e6c-9d73-51601ed713a0"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="394c3e1c-6667-4602-be51-c5da7d19fbf4"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="12bf6f71-3749-4885-a994-cbf8654212d1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="52f28734-36de-462a-b9fc-26d3e801fd8b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>714f140c-7c1e-486e-9ef3-6dea88c21195</con:value></con:property><con:property><con:name>Amount</con:name><con:value>19.28</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=714f140c-7c1e-486e-9ef3-6dea88c21195</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="9af08bf5-23e5-4574-a50d-f741f931b721"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="5c3e7638-383f-4c56-bd11-7fb24dfbfa05"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="30f40ed2-89b8-436f-9392-f14247d8288a"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="2cdd4900-8bd3-43d2-8380-c1af6ac3784a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="b20f9057-048a-45cd-adae-a03874e909dd"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="cd7c90ae-193a-4b06-b284-7a7776d3bf19"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="b692121a-5391-46ba-a55a-bce27d0e9969"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="5a70856c-c79e-467f-adf6-b5afb99b8465"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="22d84389-0ea4-4d96-ac29-65b0ae52744c"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="a503b5c0-d280-4fa6-b412-5dd4cb165220"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="db3e4304-de48-458f-9cdb-efa2e3c3b326"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="28df762b-780c-404b-b99a-27758f7bdfa2"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="2d3bf71d-2095-4f4a-8b4c-e109515e653e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="cd2eace3-aeab-42c7-8271-b99ed7136371"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>6c3ba11c-f92c-476c-8868-1fb533422536</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1d0ab589-49b7-4745-994c-ef5cafdea34b"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="06d829eb-dd3f-4cd9-adcc-7538439b3d60"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a8217cb2-6536-4408-8a0c-0d68364c0adc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="dbae4e20-1094-4d4f-802b-41f9338b870c"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="baed713b-32c4-4338-88f3-2a53c4cddf10"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="8137b11d-1849-485c-a354-3af2fa3bbdee"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="a480dece-d011-4467-b848-7757f59aea0a"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6696157a-b1c3-419e-8244-0892b7808b5f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="c506393c-2146-4de4-8199-304f58ff8252"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="bfeb2631-a630-4dec-93bc-d5a4690f394d"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="60ff5896-4cb2-4ab1-be13-cdf6bbca21ad"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="c0887252-4c40-4dc5-93cd-32d5caa4cd63"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d4e9a5ae-1c52-4cb5-96d1-c191505e3651"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="08cc4047-bf9a-451d-9af6-a8f6e9dbff16"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="eb939ab4-82dd-4a0b-ab3b-c6ad810a2ecf"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="865c985a-c0a6-415c-b1ad-e4f11623ac13"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="85132c97-e84e-4b8b-9df5-bfba854b3451"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="2d42f8c5-0331-4239-9f4c-52dbc845ce31"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f0167592-225b-40b4-9633-0e29540f99c2" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-FastbreakLunchInvalidTime" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="797cd70d-579c-4228-a850-4ae9f079989b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="98c69364-3fa4-4c93-80b7-e100f24b0dcd"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Fastbreak Lunch Items",
			"ItemLineNumber": 1,
			"SalesItemId": 3119,
			"MenuItemId": 1813,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12551,
				"SalesItemOptionId": 20899,
				"Quantity": 1,
				"Name": "Honey BQQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 8599,
				"SalesItemOptionId": 4036,
				"Quantity": 1,
				"Name": "Souce on Side",
				"UnitPrice": 0.000,
				"Modifiers": []
			},
			{
				"ItemOptionGroupId": 8678,
				"SalesItemOptionId": 4099,
				"Quantity": 1,
				"Name": "Blue Chesse",
				"UnitPrice": 0.000,
				"Modifiers": []
			},
			{
				"ItemOptionGroupId": 13177,
				"SalesItemOptionId": 18978,
				"Quantity": 1,
				"Name": "Pota Wedges",
				"UnitPrice": 0.000,
				"Modifiers": [{
					"ItemOptionGroupId": 11513,
					"SalesItemOptionId": 14677,
					"Quantity": 1,
					"Name": "American Cheese",
					"UnitPrice": 0.6000,
					"Modifiers": []
				}]
			}]
		}, 
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9b8deb90-01f4-48cc-b3b5-1c377b6ad034"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="1f699b8d-cc57-4d21-9266-5ec75d859228"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="49ac8ef6-27cb-46d8-8c23-573b04b65008"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="d4ee3650-a38f-4dab-ae41-52f925f104f7"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="1a34c340-d688-44b7-bb23-3d708c70b790"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="ed3150be-91ab-4336-b9de-82ec62832ae3"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="7fe1aa74-ab2e-49d7-a25c-4bd6e3f71d9b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="bb03b519-e408-4c01-9c3d-07767ebc9593"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14602</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>0ed1748a-129c-43f8-a33f-2846fd5db674</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3119,"MenuItemId":1813,"CompId":0,"Name":"Lunch Traditional Snack (Approx. 5)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12551,"SalesItemOptionId":20899,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Honey BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10455,"PosModifierId":17156,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":8599,"SalesItemOptionId":4036,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sauce on Side","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10001,"PosModifierId":11943,"Status":0,"Modifiers":[]},{"$id":"8","SequenceNumber":3,"ItemOptionGroupId":8678,"SalesItemOptionId":4099,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":1,"Name":"Blue Cheese","UnitPrice":0.6,"ExtendedPrice":0,"PosModifierGroupId":14567,"PosModifierId":10001,"Status":0,"Modifiers":[]},{"$id":"9","SequenceNumber":4,"ItemOptionGroupId":13177,"SalesItemOptionId":18978,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Potato Wedges","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10289,"PosModifierId":16259,"Status":0,"Modifiers":[{"$id":"10","SequenceNumber":5,"ItemOptionGroupId":11513,"SalesItemOptionId":14677,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":4,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"American Cheese","UnitPrice":0.6,"ExtendedPrice":0.6,"PosModifierGroupId":10351,"PosModifierId":16789,"Status":0,"Modifiers":[]}]}],"UnitPrice":8.99,"ExtendedPrice":8.99,"Quantity":1,"NextModifierSequenceNumber":6,"PosItemId":16433,"CompValue":0},{"$id":"11","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"12","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"13","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>19.28</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="4fdf9750-ba93-46c2-829f-575bb8055d34"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="f3ae416c-04c4-4ac2-a205-5940f0913a9e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="30b9c3c2-9cd2-4594-8442-259c037508a4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="4db3b9cf-c903-4e4a-8d25-932e38f15db6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>06553dc6-17e7-4305-b240-d954578a2575</con:value></con:property><con:property><con:name>Amount</con:name><con:value>19.28</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=06553dc6-17e7-4305-b240-d954578a2575</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="63f82f55-a0b0-4c80-84e3-b29c27b868c7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b3ce24c2-1b63-4030-ab72-d81d2a64ea98"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="90a52806-e254-4d3c-bcaf-1081c171eca7"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="2eda4f22-8082-4e79-a84e-d72deb61c491"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="4329292c-3994-4e88-a24e-e7eb4c4165c0"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="827bf324-50bb-4954-a411-5d5c07c7d243"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="a675a4c7-5fc2-4531-bea8-9f978d163b7f"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="35b0a0f8-4706-4ab7-8527-85bfdf3c7245"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="37bc864f-85b1-4c1b-a333-56e15c6b17f5"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="14e20c43-353c-4cc6-9c3c-747cd35bdd47"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="df01b663-ae85-4370-a518-9a0e067e9d32"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="6c2707d3-cfda-495a-920b-edfd2d72ac69"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="951cc6d7-7237-4eb4-b9df-e912acfb3d2a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="99bd71f9-919c-474f-9c75-0b7cba10e6eb"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>03d042f2-597f-4218-b657-b4a578a511a7</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3695bc61-eaa1-4d08-adbe-f6ff5b6e3654"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="89754ce1-13db-4b5a-8fb7-b43bb6c6290b"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="de86a975-b4d3-4f60-a044-dce26adfb519"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="6f7aa5c2-5e50-4150-8e62-a3f846769996"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="441efe33-ffd7-4bb6-8ec3-490020ff17d3"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="2b2b76c8-9b19-4bb7-9699-11a85788acf6"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="f942200e-dca2-434a-aa1f-2201eb84abd5"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e0bd12f5-8596-446d-aeae-2c70e834585b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="2a71d59c-0b66-48b8-92af-e1951b2d8caa"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="bd2a941a-0992-41dc-afb2-79e2aed35e5f"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="6579c3ab-3908-4058-a6b7-14e5aaa6d773"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="808a59d1-1452-4f30-8fd7-f1242e5fb0ec"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8a84b004-39a3-4147-8113-69e3a8d015d9"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="7a8c136a-96e2-460a-8815-674a2fc5e481"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="1e2f4431-ad86-4a89-a5f7-ebb72c63c7e0"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="95ee6f53-deac-4926-bc94-1605486b3f72"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="990ccb4b-2c2c-4b31-9c66-5104f166c6fd"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="e01eac54-a146-45c5-aaf6-54f3a2d6d5a8"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="e9222d06-28fd-42b4-a619-fae6fbc2af28" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-OrderAmountOver$175" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="d06661ad-2f6f-4dc0-9890-4cd5743d0c0e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="cd9d39c6-a975-4089-a846-2ee46a3d4ce1"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Party Items",
			"ItemLineNumber": 1,
			"SalesItemId": 3870,
			"MenuItemId": 2129,
			"Name": "Party wings",
			"SpecialInstructions": "",
			"Quantity": 7,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 11974,
				"SalesItemOptionId": 14913,
				"Quantity": 1,
				"Name": "No Souce",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }
			     ]
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a6c03084-336b-4cca-89ad-e80e47522004"><con:settings/><con:configuration><codes>406</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b193cae-b698-4b06-b350-85a88bc3ecbd" name="Order total amount exceeds configured limits Check"><con:configuration><token>Order total amount exceeds configured limits</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="86144967-9a61-4e95-9ff0-ba0c9bee8f22"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="74513147-bb2a-413a-9ff2-8702ae82c0de" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-NotContainMinModifier" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="c1270a07-36d4-478e-a8a0-80006511794e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="a58b995f-393b-4ae3-9c22-4c3f0ee08bf6"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Kids Item with no minium required",
			"ItemLineNumber": 1,
			"SalesItemId": 3403,
			"MenuItemId": 1066,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="11c97a9a-8660-4a9a-a496-5176e2043611"><con:settings/><con:configuration><codes>406</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4fa07c9c-a7ab-42fe-aaff-991c36b8b5ce" name="Item does not contain the minimum required modifiers Check"><con:configuration><token>Item does not contain the minimum required modifiers</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="2de65a7a-8a29-4414-befa-a979b6d24000"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="7ffe6e00-1fac-4576-8110-b4aba53d90dc" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-PartyItems" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="238f1d56-7dcc-49ff-b13e-e4ba205f5acb"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="8b730786-8c67-4dd4-94f7-58f0c8f086ac"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Party Items",
			"ItemLineNumber": 1,
			"SalesItemId": 3870,
			"MenuItemId": 2129,
			"Name": "Party wings",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 11974,
				"SalesItemOptionId": 14913,
				"Quantity": 1,
				"Name": "No Souce",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }
			     ]
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7665361b-4499-4a73-8107-4c29a3ad96e9"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="e69e6496-dfa2-4b14-a011-ab75b8102e85"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="55070f2f-d40a-4ff9-a217-4ef1f33c1913"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="d625070d-0a74-4fe5-84c6-1cc21f42c74e"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="865b5396-9ec2-4656-b09d-bfdb57010024"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="9aa8722c-2e2d-46ce-984d-6e43a69f89dc"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="b8f0593b-09c1-411e-80d1-c3ebe4f0d529"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="b9247be2-6e1e-4ab4-a288-ab98337edb0c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14605</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>f1716282-7f68-4b9a-8ba3-6970a65bbbf9</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3870,"MenuItemId":2129,"CompId":0,"Name":"Party 100 Traditional Wings","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":11974,"SalesItemOptionId":14913,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"No Sauce","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10076,"PosModifierId":11942,"Status":0,"Modifiers":[]}],"UnitPrice":29.99,"ExtendedPrice":29.99,"Quantity":1,"NextModifierSequenceNumber":2,"PosItemId":16825,"CompValue":0},{"$id":"7","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"8","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"9","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>42.74</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="f3e967ad-51a3-4c37-92ae-47d5296b3528"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="6cf7a07a-3688-4aa7-a345-d07ab2bf9011"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="7a9b1463-a7e0-4be9-83de-84a36ab48f3e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="9cb59ef7-03aa-4d56-94d3-4ee0b20bc57a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>f046bcd2-f751-4221-b1d3-087eb889badc</con:value></con:property><con:property><con:name>Amount</con:name><con:value>42.74</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=f046bcd2-f751-4221-b1d3-087eb889badc</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="03b3e419-33c2-4be2-bdc2-c5ff76efba67"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="079b807e-17fc-43bc-bd1d-b13b1ddec7bd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="15328015-6407-4b04-a797-c5c7cd3d51de"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="3de092cf-8535-401a-99cf-fa579e4486ed"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="cc520234-a14a-4b06-b358-b99decf8d3e6"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="92d2116c-a7a4-4cbd-b6ed-a872b11de022"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="2fcd0146-f2fd-4c71-8b83-fd85e29e0088"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="eeb9edfe-ddd8-4bf8-bff0-ba19f71a16cb"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="26019153-c522-4c96-83ae-dda02fb87f35"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="a6ff90a4-7824-421b-9024-28390d5c2949"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="168482cf-d730-4c08-8759-bf287da3a4ca"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="746cc3e3-11f2-4e47-8f6d-a2a86629b76d"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="b4458dde-aad6-495d-904f-6a71a5083e5c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="5278e506-b3eb-420c-9fcf-8a7b2922c8ed"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>10605659-b235-45a8-9000-f40be3c70622</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="ebde6662-850f-43cc-88f6-eb8d61399445"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="22e51eed-b54e-412c-ac48-55527294c4dd"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="4d36491a-995c-4944-a075-4f682ee0609d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="6f42f1bf-e638-4db6-8e55-3f2d27940104"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="eca80762-28c1-4e82-92aa-7f8993ad1ce1"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="ff6e89a9-375d-4148-989a-20c3c4e192f7"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="e43d5cf9-29cc-4218-ae35-cbb927c07b2b"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ced903d2-b124-4e93-b5a5-2b85f7e7788c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="0b170e6b-fc2a-4d65-a12c-a01e8d231936"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="0582a232-4035-47c2-8c70-6791f26b2280"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="116ffa54-605b-4d84-b68d-71c1f7297f96"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="c9f98610-c1ee-4299-a019-ace4b29092fd"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7e6abe35-9326-4390-872c-f112a5154b72"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="f9cd6cb1-485a-466a-92ee-34c0d41f6628"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="a1357df1-c266-4fcc-8d7b-2df928ef7fde"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="1b7b9906-7c10-4d56-bd86-99132e3d08f5"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="f7eac2ae-59d9-4ff0-9a19-ca5aa56734d0"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="98a79536-feb9-4e04-889c-9daff393db0c"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="6c239292-dfaf-478b-972b-47e4b41cc24d" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-AMEXPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="23baa440-c196-4681-ae12-1ba81387db9d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>378282246310005</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="27f322ee-fc26-4aff-b38a-e58aa4790715"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9b578210-19eb-4982-b350-cd3ea3b8a103"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="798d9e1a-1a4e-4b8b-8a2f-104da0dbfbea"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="7a20b6d8-9884-4e84-b6e0-8b6beece9395"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="9eea35a3-1640-4460-9a70-d660288cb996"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="5b607822-471d-449b-b086-ae03bb7c334b"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="14abadf6-7871-4c7e-8bfc-fd7057d79b3a"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="83ee60b9-a36f-42e3-9d7b-2c2eddc11908"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="0cc193b1-9756-451f-bb17-e8da612062d6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14606</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>55500d03-810d-481c-92fa-8f2c1c777d95</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="b559ed4e-bc99-4091-b118-93ef76fd4712"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="9be20517-74fe-4368-bea8-54bc4e83ead2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="a574f16d-e6d5-43b9-8373-032ddfac5264"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="4416515c-7df1-49c6-9a04-6c7eb48f7012"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>84a972cf-ba72-42e7-8964-69bc75df37f4</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=84a972cf-ba72-42e7-8964-69bc75df37f4</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="1925dcea-e0ee-4b47-a4e1-539b701ced72"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="33544241-167f-416c-af64-bf59379bbb28"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="ebd727cf-0723-4a23-83f1-aafd2aa83719"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="15a444c5-81cd-4265-889f-86efa6f6bb7e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="153f794a-1a54-4bf9-993f-17c75c04b3d2"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="93698daf-c330-428d-8c25-2f4b3e8c9e78"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="2e797830-f361-4ea9-9b48-3d18499ac6fe"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="ba503129-7d92-4820-b859-d08f94647bf2"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="5e82bb5d-3ca2-44ea-88cf-89f3aea1b649"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="26a04513-0cce-41ee-ac1d-14634d88c7ec"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="6de88987-d9fe-4bf6-97af-b0eda5e297a0"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="54709611-b2f6-476b-b66c-760d6e6a6c9a"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="3cc34e2a-8b6e-4dc1-a763-a32101542a06"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="a0af26ac-88b7-4a56-a147-f3be0681d7b4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>796d5dc0-bdc2-4dd0-a695-e9745923c864</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="70a4dcad-3146-4093-a707-b9891aa0dbf1"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="d8704c4c-3488-47de-8841-2e09816abd66"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="575ad6b4-cc09-487a-ac5a-9d440fa38733"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="45e0a8f0-84aa-4b89-8634-45844d6dc139"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="9ab2148a-c642-4210-8631-e6ce37c2824d"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="82467f59-942e-47ca-97e9-4aa45740473b"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="63376857-216e-4fa6-8c14-d9a2e3043da5"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e0b550bb-9a48-4934-9d3c-b3f4ee64ff10"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="4d5bd2f1-86d6-4165-af16-4ebc648dfc07"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="bc45ea3b-8f70-49ad-9792-1595b61cf02b"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="e566e4fc-ff16-42f1-bd62-b2f62fd46479"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="f7bcbfc2-9af9-4eab-a25b-2264c103a839"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8a43c0f2-a823-441b-99f3-b7df47121fd5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="13730159-d635-4ab6-a694-15d267295cde"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="56172204-e4f3-43c2-981f-5b7895a9ecb7"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="3182a12e-a925-4de1-b070-848701c8238a"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="7f048016-9742-4b3a-9c54-8cd4bffa3c08"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="9d86f358-cd84-470f-a618-1bc6dc5c1b8d"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f4e8c867-2819-4bb1-ad1f-b6ff185beb21" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-DiscoverPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="084b20e8-ef2a-4106-a199-895e5a722f09"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>6011111111111117</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="90fcf844-d41e-4be7-ae5d-f9bcbcb32ff0"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e788d84a-c511-4341-bceb-d6ce4be3eca3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="88ea61ef-e3da-4dd4-b053-c43da530e19d"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="06c6cb02-a99d-4123-988c-58100c5f8e5c"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="a4f2b562-d364-4634-9579-9d504b1ef7f4"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="b9496d0b-e19c-41ae-a6e8-8712466ea3a6"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="f8b7c5a6-f7fb-4f59-bfd8-980aa93d0c95"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="58969819-2a3b-4fa8-b9ef-4b683ea7382f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="40e25101-be1f-46d9-a32b-968eb5fa90cd"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14607</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>3b9b4096-b7e6-41fa-bf2c-366ef92fa9ea</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="333649b3-037c-40d6-aa3c-b6246484226d"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="3ad57c15-d9d6-4c5f-b049-ef0a0b2204c6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="0962c345-e8f0-49f8-a1a0-324de58b768d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="8ebe64f2-6cf1-40e3-9963-e184bb4db8e4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>0e69d000-c444-444f-be2f-0357b8961c32</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=0e69d000-c444-444f-be2f-0357b8961c32</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="78b3e112-67a1-4bcb-9924-92fce92abc45"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="01531175-aab0-422e-971c-b3520e2df3e7"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="31998b69-cd34-4e30-8896-a6c03b0ba111"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="8fc8012d-d1c9-4841-a1a6-d8c248c80563"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="f130c09f-fa03-4dc4-98be-086d7b8993fe"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="f9a778ab-3a7e-4f47-ac74-5ac31bd5d174"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="c1d2fb86-b41b-47d1-9d5e-be2eaab00474"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="1013ea7e-adfb-4803-b7d2-84375d54ee96"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="655183f8-7437-4f43-bece-dd72b983a141"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="bcc10956-e6a7-4b54-9a5e-3a90a1d4d3e9"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="2240fffb-070a-43c2-a225-7c57b5f7eb1d"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="3284ad5a-7590-40e6-9dd8-720004f04ebe"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="b7facb53-5d18-4f07-9371-f22448735c76"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="45d701c9-5203-4965-b7f3-00e1a9a3b04a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>728037b0-945d-4a0c-9ff5-839fab342186</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1e4991bf-e495-4deb-8c99-cc108ef37306"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="55b1d57a-4cab-438d-a531-af17f6cf6a2b"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ac72c5c5-9fe8-4cf4-8258-60ed53a3ff55"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="1bdec777-539d-4c6c-859c-a783d9d41faf"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="5468e84e-f927-46dd-8621-15b1a619e248"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="0e871cc5-6d80-45ee-ab73-cc6cac95d88c"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="4b7d135e-642d-42eb-9dbe-75997ebe06fb"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="531f0212-b5e5-423c-b061-893b0fe6365b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="a3570a7c-18b3-4c81-a5c8-dd01cd2527e3"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="d41b4061-b89e-4035-a213-de43720bdbc7"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="34f1b03d-1ea4-437a-8070-9cf700bb109b"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="14fec8df-3c4f-4122-82b0-e1380e3423ba"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7883962b-1ecf-45c0-be1b-7f3840554f6e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="7841f0c4-9474-4fbe-a5e0-fea56f048dab"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="491e298b-4e97-466c-8b14-86dd1d8f8841"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="5f142b85-8537-43d0-89d9-f0fb38a57620"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="ade32fe9-5eb1-4583-98f7-1d70c274c9be"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="2ef1c136-cf74-40f3-9925-e78cc0095ff5"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="db13920c-9ceb-480a-ada0-bcc7d19d4bc1" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-JCBPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="ef3a7c6c-c80f-424f-8d2c-7ea92326e070"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>3530111333300000</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="792d6aaa-85e1-4210-aaa1-31b3f65b5f25"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3d6d50dc-82b9-471a-bfa4-6322f989fd7b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="926f8c53-d007-4cf6-93b2-74cafb3885b9"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="9a48824d-1576-47ad-befe-da9798346da6"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="c5d40e93-422d-46bd-a2b2-fe58e4e1e33c"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="9f612d08-8e8f-4321-96ec-f1594f93dce3"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="292c110c-2706-4984-b0b0-76a6d64d3720"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="a3b29956-5583-4581-97ff-4fe72b47802a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="9263d58e-c501-4f92-a541-fa2f4918820a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14608</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>30d810e4-21e3-4782-86e5-bdd4a338404c</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="05b37199-deac-4e6d-b9e1-08fd598fc552"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="6529ddf3-b36a-4c4b-a048-5a0767f2db5f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="e6936796-64b0-4a19-8a30-321d0317a581"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="bc938879-31c5-4c23-b999-48d38b7711ee"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>13794810-32f1-42a0-93aa-a2ebba5213a1</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=13794810-32f1-42a0-93aa-a2ebba5213a1</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="eaafac39-4b8f-46cc-808f-afdbda6208f2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="acc349fe-3212-4b29-aee8-46fd14ccc215"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="98282228-153f-403a-9f4c-e2132d7fa386"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="b7bff3eb-5f3f-47bc-a581-dd1e01eaf1f3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="d84f3281-50c4-40bf-a50c-43a51fd9d165"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="89ba6e5b-4c8f-416c-8c0b-83129080a09b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="faacbe1f-ae64-4a3f-8746-78b7dce1df62"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="ab512c55-5998-495b-945c-48678509185f"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="b3813718-208e-4407-bc8d-5d6ba81311eb"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="512292df-1c04-49e5-8a79-d459ffde22e9"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="6d6b2751-d194-4ab8-9cdc-72669756cd8c"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="efcb5d38-4321-4224-9d41-9a42c8901feb"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="6cf7427d-87a1-4fe7-90f3-dcfa90564027"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="a1caa7a0-ef68-4ea0-b773-3a9737da52f8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="c6df4e6a-5c54-4cd6-8018-94408a76c11e"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="338b2ada-7d43-4042-9868-0254ed9d8e02"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2167964e-bf35-473d-b9be-d01207d7e33b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="7cdccc23-237d-4b22-bf99-c6d0ec079691"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="55636d41-fca6-48fa-8e54-918930a39122"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="773e065e-ab7f-4922-be20-8fc00ad3112e"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="fe1caab1-1631-4506-ae4f-33d4e38fee8e"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="807407ff-1f55-4b81-889d-b7e95cbc2230"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="53fa09be-bd1a-4663-a7c5-1ac4dabbabc8"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="6451ede1-eab0-4693-bcf8-04f00be13230"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="df0eac48-bf9f-4ce2-9fd5-d29f36e2845c"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="74cb0c0d-9bb0-4b10-a178-0abf56b10c44"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="46370ca7-85b4-453b-b6fb-a25c5c383ae1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="f292d6f6-5ce4-4d68-be49-74270adbf922"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="e2954a25-87ec-47e3-b77b-b392b0298dec"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="1386cd2d-db54-4cfa-a077-3bcc679b2f9e"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="adb38aed-2d9c-4996-b960-fe7d1780e11f"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="8c2ee0b9-1363-42ef-a937-466b9c3380fd"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="4848268d-c763-4bb3-8edc-7cde9c9b3b9c" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-MasterPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="231282d4-e289-4de2-be0d-7b4a2b816877"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>5555555555554444</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="44deabb1-b127-4539-9933-cb90d7eed6ba"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3bfeb618-a0d1-4d4e-bea6-3778e811f7c5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="4f83d192-4655-4da4-b9a4-4ade34d2fe48"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="829fca71-a273-4860-b290-81e6e5da06bd"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="6980f4d7-f902-44f2-8384-f700ae114481"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="49c77dd7-fa6c-4a84-b129-bf5e0ffcdaf1"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="845582c2-755d-43fb-bfe5-5d47d128f3a5"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="e91c6151-176e-4fd9-ae49-dd223ad12440"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="70561337-6b03-4754-91e2-f4063959a4ec"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>26182</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>0fb3bd90-dc2e-46f6-9259-725cd3afefc4</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>3</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>20.04</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="d2e9cd15-e266-46c2-9794-bf323fa736d8"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="4194d96e-f35a-4e3a-bb23-f095c58750b1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="796d1678-9cfc-41a6-82eb-08439a6019b9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="84f00bc2-d228-4097-96c0-84f1fb73fa7f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>5ff867c1-5b19-4461-b482-168076229915</con:value></con:property><con:property><con:name>Amount</con:name><con:value>20.04</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=5ff867c1-5b19-4461-b482-168076229915</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="a64d1f96-c969-4097-ae3e-dc0e448fd691"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="be12a23b-ddc9-4f1c-a740-a5610c504c0c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="e6093d31-629d-4a5a-bc12-a021470ae794"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="0f128307-c546-4d70-a980-aa6ada71486b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="b990cdf1-a279-4665-b595-4ce58314e202"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="4011b32c-7436-47e9-9d4c-a5bf85ce0cc6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="29f6912a-a413-4210-998a-e20ed25e8988"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="e2e95c46-6741-4f11-bd12-8f557cae8a20"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="b41ed4db-94ea-45dd-9d99-5e5e6b57ae70"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="4c1ea9c2-74af-4b50-88ec-8c7e2b319774"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="4639a732-3a8e-4759-b3e9-cd187d3db2dc"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="39b5bb0c-9231-45cf-b9ed-d2e36bdba379"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="0f241565-3294-44c3-bc72-90cde4268ae2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="72f0dc80-b75e-4488-9404-12a6b2af8e53"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="a6d288b8-008e-415d-895f-3853c0bde2f4"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="02d417cd-9f86-4aae-9183-616624fbc5ac"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f2b5aa1f-f7e3-487e-874a-0b43db7125ed"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="85910991-e50a-4052-8516-32e71ac11cf8"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="17d1907e-0b0d-4be1-bd29-9f7010c161b6"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="eeebaa7c-19d1-4406-86ca-f500a66b9c9e"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="8cec8415-b972-4332-924d-c283bdf09ef5"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="32350d92-ac80-4b15-a711-80654e4fa887"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="421b328a-6c78-4fc5-bacd-331373b956bf"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="d251f0e1-1278-4e48-8fb6-9986ac8f37c7"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="0d7569a9-0e17-46a9-bc2c-9e51efe24d2b"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="c35bcdba-f8a3-4a04-bbd2-2e227c126138"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a5c2246a-9f07-4a98-bf8f-1e89152a933e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="a03c0565-a269-472e-9587-18474bad3e50"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="1763b54b-3127-4c40-bb6f-bd65e299d0f9"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="21beb17a-7a3a-45f2-94bb-e6604fa6fd24"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="272b3964-edf2-47cd-abfc-68523a002a1a"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="e4ae5b2b-8fd6-400f-8dba-8cdb18a834c7"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="947be1bd-513f-4179-b003-f3275767576d" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-VisaPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="2901586a-c441-4be9-a09a-ea316d7edc06"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="97b08aed-4645-40c7-971e-bc8357c0ce6d"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="dd14c5ef-5f68-41ce-8f22-e08b4157fc39"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="db919783-97ef-4f51-98c9-76e72820da06"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="b570b3f1-fba4-464e-bd78-b7be651ea3fe"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="a3e1520e-23aa-4ec7-8000-eb105772e580"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="f30dfcf1-dcff-49c9-b1a5-fad281953c79"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="697f1145-7a93-4e73-98aa-5bcce0569757"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="4a176f26-f846-4660-ba97-4ac5bff9d6cf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="b8a768cf-bf52-4b4f-9ffd-251cdc0b304f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>26183</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>cad634d4-85ba-478a-8b61-a77ad7b415e6</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>3</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>20.04</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="7566c304-c5c3-4ce4-ab50-a2e9ac68abab"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="330db8c4-3d58-45a9-b290-42f8dc79db87"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="3f782de4-6ea9-4036-af93-030d6081f33f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="d0e728a1-79fc-4896-9541-be27327b0666"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>836648e2-7fa1-482b-888e-3a2698d07fb8</con:value></con:property><con:property><con:name>Amount</con:name><con:value>20.04</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=836648e2-7fa1-482b-888e-3a2698d07fb8</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="10f1216a-af33-44ac-9ef6-f52ace1094dc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7c21e1f5-3595-4155-b1f6-44d51e319872"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="978a785a-0e08-4fcd-916d-590b387fe960"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="48d04f75-00a7-4213-843d-2c2f3e03ded9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="4a7cacfe-927d-45cf-84b9-b60f6daa0aa0"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="3550d3e9-3eb7-4a23-bfb3-b3a20d394892"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="bbbfdc5f-e425-40a6-99f0-120483424f04"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="1a2d9597-01c0-4359-9a6f-9014b31850b3"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="1cfd0c48-9da1-459a-810c-0c154c5dd9e7"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="b16c0ab6-223b-4dbc-b75c-5f3481b1e219"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="98c22e51-d6af-470d-a6fa-afa9f4721775"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="e3668f35-ec69-49ef-b8a1-401485783ca1"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="9f7d0b37-67fb-4d45-b0e4-a8aad1d37c0d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="b86f479c-20b5-42e9-8da7-a21238c68e3f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e8979fb7-5a01-415e-af78-41aaade6dae5"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="b8db9ccd-99c6-4167-91f7-82d1430dd83e"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7559293e-88e1-4ccc-9e5a-898a77e0591b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="3e5ca02e-ba42-44ff-bc43-4d91e2f7a0d9"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="3be9d0be-c8d3-44ec-abe0-9173a50d62d4"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="251d6ad1-0652-4f60-ae6f-df5ca7f9659f"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="ba10ec86-f76a-422d-8f58-6c121d51ae47"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="cec78f86-1cd6-46c0-a43b-b22be21d5813"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="43176f27-595b-43e0-8b56-723a24b83899"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="1ac69c56-9be2-467c-a457-0d596a34dec5"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="f3564b9e-eb94-47db-8aaf-1746a3eab5c1"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="ac8a4f9c-2222-4840-b43c-91a013b0586e"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9837b3ab-d7c3-4fa6-b963-0c6156da7d2f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="f00535f1-fb80-4211-8b7f-5449e30a7502"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="29c01524-7a01-4d1d-be63-2180b41225c0"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="bf793411-4003-4787-b06c-97d91cb1a6ce"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="6e2a0c63-7996-471c-9c5e-b7b882d5f633"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="826fc21e-c6ed-4c99-984e-69b4d0c885c7"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="a0434d3a-1cdf-495a-a02f-bb7446bac96f" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-NotSupportedPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="819a19a9-427b-472d-9605-9aafcd9cf0bd"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>30569309025904</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="155096be-b2cf-491e-88b5-d21c4431593b"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9df45f4b-a7a3-448b-9f8b-b2cbfcbf124b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="7438402e-d736-4ef3-a494-5f16785ca6f3"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="56e2ee33-4d6e-4ce5-adf5-c294a273f0da"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="7271c8b8-e820-4ef0-a111-b8ccc2c2fa6b"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="e195ec1c-e838-4f5f-a317-f6e333dd2269"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="775b1004-e805-4ba6-9129-2187c9dc1e3c"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="b0729a3b-9fee-4089-9192-55a0b051d438"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="19e5385b-610e-4085-aa13-2fa30cd3792e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>26184</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>05aa2100-260a-4185-8cf0-749ff177ce22</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>3</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>20.04</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="75405b5b-48dd-48c5-93e3-47a90480f194"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="ff9be5d5-891c-4c18-9af8-714f6f6b08df"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="c945658f-66d2-4cb5-adfe-bf2000348aa4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="eb24f68d-826d-4093-8003-eab7a312392a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>12b27a1f-a589-4ba7-afff-f42dbf4e3fd6</con:value></con:property><con:property><con:name>Amount</con:name><con:value>20.04</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=12b27a1f-a589-4ba7-afff-f42dbf4e3fd6</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="42f6f544-54ef-4713-b1f3-6a7355337745"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="4ba121b9-3426-4606-a3d9-f21de89c8cd6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="2e11d8ee-46d9-4f14-b074-24da7045ae2c"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="8a50227b-8a1e-4f56-975f-514c323dd35b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="579f5860-194d-416b-85d0-f316b3956bfb"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="cffa086c-5009-4bf1-a185-d49848326b29"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5fcb4c5-36f5-4b59-942a-b57647e74989" name="PaymentFailedCheck"><con:configuration><token>Payment failed and order was not submitted</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="e81777ec-6b83-4b90-838d-c45bd7ab906f"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="01e912c4-f79c-4f6a-b36c-7773463590c2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="4744491e-94ad-49d1-ae52-d28c3c530203"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="64581b28-a6be-4c76-85ed-a1604a823d4a"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="bb0706ce-3e6d-4ed3-b241-f6c64e402e00"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8afa07be-48cb-4372-94f4-67a88afdb5d2" name="PaymentCaptureFalseCheck"><con:configuration><path>$['AuthResponse']['WasCaptured']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="36acf76b-1498-4e0d-9133-f1a6d05fa4ab"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>EndPoint</con:name><con:value>https://api-staging.buffalowildwings.com</con:value></con:property><con:property><con:name>TrnEndPoint</con:name><con:value>https://api-staging.buffalowildwings.com</con:value></con:property><con:property><con:name>ClientSecret</con:name><con:value>b412815427554a96ADBc8Cd2af6C368f</con:value></con:property><con:property><con:name>ClientID</con:name><con:value>e61af77efc1e4477bf8b83ade31901b5</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>restnum</con:name><con:value>349</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>2019-04-05T13:50:00</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>2019-04-05T13:50:00</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:testSuite id="7006096c-c5f4-4ace-b47c-f6dc7281b954" name="DeliveryOrder_Scenarios-QA"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="978641f3-de50-4557-8445-3e5aef0d7634" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-CompleteFlow" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="3448bb2f-54fe-41d7-bd37-7b865f1265f9"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="96253e3f-349e-4510-acd1-93f980a84526"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="aa6b142d-a148-4b3f-b3b3-9ec38f82d0c2" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aabf32a9-6af3-499d-ad61-09ecb2b849c7" name="DeliveryAvailableCheck"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1a9e2480-af67-49be-841c-bd4a14460243" name="SiteIdCheck"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="95e3b8eb-adba-48bc-9cd9-589591997e31" name="CheckExistenceOrderId"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="53a0ee5d-4690-4bc5-af29-b1a6549cca0b" name="PromiseTimeCheck"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6d531f13-b6f6-430f-a52f-509e08d622ad" name="FailedItemCheck"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="06ef2a97-9994-433c-b9be-a5d830699447" name="ResultCodeCheck"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="a0b0127a-04af-414a-b2bc-142ea292cb44"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="4b5a0a20-1b69-42b3-9a21-4e9c363276e6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14442</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>fce12dba-c9ac-4653-95a5-be7f4bed17a6</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="4a2be133-ea48-4fec-9cfc-a351d311d3f2"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="09e36e46-c687-4e06-994b-12b5bc9f799b" name="HTTPStatusCodesCheck"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="bf7e2d34-92cb-43a2-ac73-4f531319f252"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="1ac5de06-e806-4742-b341-2dc6e612b3f4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>999c1dd0-954e-455c-8f12-4aaa4112dd73</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=999c1dd0-954e-455c-8f12-4aaa4112dd73</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="e56e869e-6b04-4f40-9cdf-35f21682c360"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="754b4fab-7412-46db-8eb5-091dfee97918" name="AmountMatchCheck"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="db64ba6b-85ef-457f-aa64-00b72bf1e7ec"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b1acf4a3-43ca-4b9c-b2c2-69686d3ffb2e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="PaymentSuccessCheck" id="6c89f2a5-097b-49bf-ac6d-d7381d9fb250"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="dd3a323b-f46a-4ab6-b930-d5ca628964a2"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="8e095782-0e53-468c-9607-9097615ae8a7" name="HTTPStatusCodesCheck"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e10c3da2-657c-452c-961a-62a6f459d500" name="ResultCodeCheck"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b555242f-b6bc-4dad-acae-fd8132458e6c" name="PromiseTimeCheck"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4229326b-f84e-4b20-944b-d12934200d6c" name="HasFailedItemCheck"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01f7892d-32d6-4d39-aa72-8b6b5e9e1453" name="SiteIdCheck"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e5613226-71af-43c5-b519-6488142be2df" name="OrderIdCheck"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c5309b38-1464-4e99-b657-1eb997909533" name="TotalAmountCheckMatch"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="5937365d-0281-4d85-8e2a-7d572343f78d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="9e102e4c-9bb0-4e41-a590-d8e9be66bd2c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>e5b75521-29fc-4bb2-8fd5-5aaedec39f20</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="92e781f0-2bda-46f3-8518-cf7d822b45ef"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="5ab99e2e-7c4e-43c2-82ac-99b270d29b86"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="df5bb6c5-095a-416f-a8cb-b88445467de3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="14dcbb8b-6aca-43c0-a2a9-c0f21b9d7a9c"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="f01a35a4-6311-4372-89cd-1bb0845035ad"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="dcf84605-a710-47fb-8df7-1cb3c944f8f2"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="1365beac-ba9c-48a7-800a-45749a873eaa"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2fbc65df-c7eb-4f93-aa6a-b9fefe2b5812"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="2cd026e8-8a0f-4fa9-8442-a03b003a3e5c"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="4aaae653-2283-4514-9e4f-f43ac571d4da"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="b20e9564-e28d-4951-bb99-067e17eab93b"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="991d966e-73af-42d1-9fcd-81a36be92171"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f09d82ab-899d-489f-b32a-d0698abd7151" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7b7f9970-2754-4837-b2ba-cf0890f69a5f" name="AuthorizationStatusCheck"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="73c448cd-3252-4626-be74-5c2bc5022d85" name="CapturedAmountMatchCheck"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f573d30-b512-421d-8b59-8607601bec87" name="AuthorizationAmountMatchCheck"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="23c8dfd8-395f-4062-97e2-03eb3892d1bb" name="ProcessorResponseCodeCheck"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="3b62309f-eb72-4604-99fe-2ac646c5ed28"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8e5c20eb-e3ab-4326-bfa0-28ff870d98bf" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-SingleItem" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="422d3220-4697-4895-b032-17377a81ee85"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="12396b0a-bd30-4155-9b4b-a092ae7aff0d"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Single Item",
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="46765f07-362b-4866-b766-deb4bd7466d1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="93f9c6e6-7827-40a7-bb82-abb98eb58a6a"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="1e1a70a5-25f3-4d7f-8e2c-7d1f4b0e5909"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="8b92b6c8-e2de-4acc-890e-956f44719858"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="e78d4e39-417e-462d-875d-81ab980acb20"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="9b4ddb5b-62fc-4595-b8f0-0fb10877c03d"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="62b47faf-b188-47bb-8909-2159605d47e4"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="19ccbd88-112c-45f8-adb4-49f91d4fd4de"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="a8f7b625-5a14-4e15-ae56-0739b2f3f23d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14358</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>2d109db0-5a54-4746-887b-8f5d55afdd09</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":3.79,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>12.61</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="267d2722-1585-4951-b9e7-9e6d8fd72926"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="2ddca21a-bb0e-4c56-b787-ed95cecbebaf"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="64ae2191-98bd-4691-845c-2ae525315a49"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="edb7dd16-232b-4118-b50d-50b769ce0dfb"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>768ff932-002d-4e3c-b8d0-4962eb82694a</con:value></con:property><con:property><con:name>Amount</con:name><con:value>12.61</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=768ff932-002d-4e3c-b8d0-4962eb82694a</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="5ea49883-b972-4011-b9e8-94587a1e3bbb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d8a0eb84-bbc0-4ecd-8e2b-09c495a3b835"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="6c05c5fd-8955-47e1-95e4-edfc8778728e"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="ced0fadb-62ba-4fe1-92dd-ad791b78ef8e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="cbe2ac45-44d4-434d-81c0-eab9b09b0747"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="eb278cf6-e4b8-48ee-a426-c5173286e059"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="d1a79d20-3b60-488d-b884-96a5799c9596"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="55620607-254f-4e2a-907f-7f208c7f10bf"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="f4e91431-f642-4b45-b3e2-4a07c0b3f603"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="64859cd3-e402-423e-9b30-b23d8d24d6d6"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="96793ccc-cba8-419e-a427-9a94c2fc64d0"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="4b0072f3-9cf6-462a-ba90-fc3e9a20043b"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="e327d31f-abc5-4537-858a-d4dd978ce02f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="c548e0fc-27ef-4987-86ab-5471a12979ec"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>2d762fe6-eaa0-4e98-9acb-aa0ff16937af</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3a1cd645-c04a-4635-b762-f8d95a6f85b3"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="c6d69efd-fd24-432e-97b2-003e5c7fac24"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="888d8347-8da4-420c-ba51-8e85a43bed5d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="ae5a493d-809b-42c2-bea9-2103157c4262"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="27da9c05-4f66-4292-9a4d-f092b90dd507"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="06f63a32-4ac1-4f08-801c-a97f91215c06"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="5dbe0917-f5e5-4efd-9453-b2b1362047d3"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="702c0849-6da0-4191-8c45-e7ff65f4f796"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="45917512-a4ff-4e7a-a5b7-abfa72944e79"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="007b2b2d-9b1d-4cd8-83f8-aeee44eb55d7"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="1a230344-0a98-49c2-8298-9e441f57c8c6"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="981e64c0-37ac-4cb6-bae6-2642bf36b049"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="de9bd162-536b-4c51-bdb1-c0c975e275bd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="9ca3a780-8bb3-4839-ae6d-f61a6ff834bb"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="8f405594-c84f-453c-a6c8-c2acb360735c"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="339063ad-1c8d-4107-9f37-e62137a3055d"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="d917c269-1d01-4c34-8129-87831b2ea243"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="a0eaee30-fb7f-430d-a39b-c9cbf1d151c7"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="0f6f4c06-c15d-4fa3-af80-68decfd24e0e" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-ItemWithModifier" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="cf3658c0-7b4e-4c58-9dbe-fae01a70a49e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="6ebfdb97-e256-4e0d-aaf6-39fc67a30fef"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Item with modifiers",
			"ItemLineNumber": 1,
			"SalesItemId": 3791,
			"MenuItemId": 2098,
			"Name": "Traditional Small (Approx. 9)",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12563,
				"SalesItemOptionId": 17171,
				"Quantity": 1,
				"Name": "Sweet BBQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }]
		},
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ad6c5922-0c2c-4f5d-bdfe-5fe4f5d2c651"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="3858e742-6865-432b-baed-97f7c34f74e0"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="dd4187d0-d0a9-4271-a4fb-04910d4d68ad"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="47c0dd48-3ad8-40bf-943a-3368abf50342"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="067bbc95-74b9-49fa-b4b5-f1b98d1ab40e"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="c6f1fd7e-2fe2-4533-8d12-1383207dbc80"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="1132c32c-5725-4ba9-a546-56cebf0fc949"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="f9b460e0-3da9-455d-8896-fda6db4f09c7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="a7e2cc20-8dcd-4770-869a-9903cf78e743"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14359</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>be9be50b-fdf0-4ead-8489-8cfdc0d25d60</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3791,"MenuItemId":2098,"CompId":0,"Name":"Traditional Small (Approx. 9)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12563,"SalesItemOptionId":17171,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sweet BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10456,"PosModifierId":17127,"Status":0,"Modifiers":[]}],"UnitPrice":11.29,"ExtendedPrice":11.29,"Quantity":1,"NextModifierSequenceNumber":2,"PosItemId":16181,"CompValue":0},{"$id":"7","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"8","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"9","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.23</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="f62a89f8-1ccd-4187-976a-429e7fc05218"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="3cd6a7fe-cb24-4490-9971-ed7e0b47f846"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="28ade8f2-2dfa-4a63-b6dc-002556286541"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="7a3b12e3-db83-48da-998a-f3cf5e865d07"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>ab2569de-89a3-465e-adc3-a609294891d2</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.23</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=ab2569de-89a3-465e-adc3-a609294891d2</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="7aa78344-4933-4250-96e7-77ee634db800"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="dfcd389c-e607-4612-8163-f82757f2f7e1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="4fb98357-9736-4ad1-9b4e-4e9ba8357fd5"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="a0761d40-e2ee-43d7-9d9d-ffec44b1d50f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="a654c886-16ea-485e-9f80-6d6a03818434"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="d24cf72a-dc20-4633-835e-b92e4e0308d6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="a7c37801-65e7-462d-83f6-d7cbb96d3cdc"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="9337cc9b-74b2-4386-a52b-4a524a73ee4d"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="5d3003e4-acc9-4499-aaf6-3f616e4d62a7"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="539e3fe9-be95-4f3d-aeb5-cb3611f9defc"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="9733c07d-1ce1-495d-9a03-14286056da72"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="c9578bb1-9a55-44f1-b0c6-d60b25f121a5"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="212feb8c-5301-44cf-89dc-6c25e24af5e2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="88538228-1ddd-4518-806c-e7dec04d00d4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>4221cc9e-6306-48f2-aa45-74d612995683</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="ce4810ab-a88e-426d-8f11-73dc3c86de92"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="29f2203c-9643-49b6-9a68-bf17cf569f76"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="34f30a5c-9d71-470f-9be6-73492967defd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="817753dc-f91d-4c26-b136-ea12965d9682"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="93d436a4-fb10-4d68-9ed4-ae7a8629669c"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="fe6a9f3e-9b4b-4429-9167-483f2bf3a6fd"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="977a0ea2-ed64-4289-8ee0-16cb14f0f81a"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7e4154ff-9b7c-4491-8711-552b492fb4ea"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="7f0eed7a-c1a4-435b-9eb0-8efb5237f6d8"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="72147712-c355-4387-a4ee-fdeaa6b6bbdd"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="ce4532f8-ba73-42c9-96c8-79fc8fbdf60e"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="0e174bd3-3876-469c-9c3a-96bda5c1c766"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="4cdfaae2-46dd-4307-9ece-a869293b6edb"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="f14b982d-ccab-4c7f-963a-2380807d6df6"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="36c6ef4b-9432-43af-b36b-8f896266ef76"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="200dd3da-1bd8-4e63-aa8d-98e9b2ab53c6"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="cc236687-4dfb-4b3c-b764-402a1a3bf94b"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="2d3d29a8-e671-425f-b5dc-3b9f9ba44966"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="31d69de5-7dd7-4625-bdf7-e7d8b45d370c" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-ItemsAndItemsWithModifiers" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="904ce726-acca-4025-8f45-06e49a8386f2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="14a7f310-9da2-47fe-b9fc-c3c17d59d09f"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Item without modifiers",
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
		    "_comment": "Item with modifiers",
		     "ItemLineNumber": 4,
			"SalesItemId": 3791,
			"MenuItemId": 2098,
			"Name": "Traditional Small (Approx. 9)",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12563,
				"SalesItemOptionId": 17171,
				"Quantity": 1,
				"Name": "Sweet BBQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }]
		}	
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6fd68a1f-6b8a-43d7-b1df-803533e22dc6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="e908407c-b4f3-4651-ab06-e1c5434f34fd"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="6644f9ad-dd04-4264-8c11-9125d360926d"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="053e689c-cf8e-408c-ba19-f239181069ee"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="c037db94-1650-4c0f-b082-15edcf2922b5"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="655f9885-4198-4e65-8554-9b17959f6108"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="aaa1442b-e13f-4cb1-9cb4-c697dd97ac2f"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="3763b2c4-b27a-4ce4-8055-b50f72d72080"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="b905a2d6-0a35-4e6d-9d03-0b6450087d62"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14360</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>f6507d28-cdfb-4ab4-b789-270d4dd92f35</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":3.79,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":3791,"MenuItemId":2098,"CompId":0,"Name":"Traditional Small (Approx. 9)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"9","SequenceNumber":1,"ItemOptionGroupId":12563,"SalesItemOptionId":17171,"Action":0,"DefaultAction":0,"ItemLineNumber":4,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sweet BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10456,"PosModifierId":17127,"Status":0,"Modifiers":[]}],"UnitPrice":11.29,"ExtendedPrice":11.29,"Quantity":1,"NextModifierSequenceNumber":2,"PosItemId":16181,"CompValue":0},{"$id":"10","LineItemNumber":5,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>25.59</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="a2c2d331-a043-4efc-914d-a97d11c0b1fc"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="4fe20c41-66a2-4167-8060-d29a0493f235"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="611da054-c927-4aee-8f02-8605c8f7ed28"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="1b19a0e7-b9a1-4019-91a1-20b5864e5d98"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>da605ef8-070e-4030-8221-c8e4b78887ef</con:value></con:property><con:property><con:name>Amount</con:name><con:value>25.59</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=da605ef8-070e-4030-8221-c8e4b78887ef</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="021d52a4-3e33-4ed4-a3aa-545c9bedc6fa"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9286f5ac-bbdc-40a9-8737-40b56abefb92"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="428052a4-d6a2-48d6-b8f1-795ee1bd82a7"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="ff681939-3cb2-4d7b-92d7-2910ba4b8256"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="29473f2c-2f34-4c84-9597-e73ee19ffc6d"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="0ebdda24-abf4-4dec-8d9f-d757ab790d59"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="c12e7c41-a351-42c9-a61a-41c8cda6f7df"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="ab14e12b-d17e-460d-a31c-9f96e686db8e"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="dae254d5-94e8-4fd4-a3bc-0c477a1a29ff"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="ffadeb5e-3d95-43b7-b34d-5cbecb68e9e2"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="4f941086-b66f-4f25-b9b1-b8dacef6adfb"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="ccfd785e-17fe-4c83-8c70-397e76eca846"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="c99f5bfd-b594-4d53-ae42-46d283342d3d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="e3cbe27c-902a-4233-8a5b-c104bb483f8f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>c184a242-33a4-4862-8a37-c1489327eac5</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="5434a731-5003-4ada-af67-81ba6d05891e"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="80719513-e4d2-45f1-9ffe-13ae6bf193ae"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="da4d5ef1-55b9-4c28-8826-26c865b4e6f8"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="f10bb6f8-128e-4b8f-9f5c-d1751876e1db"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="068c4010-708e-41ee-97ce-bfb07c6bf6fb"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="87e682a9-f671-41a6-a973-5d5c0d76c186"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="9f4c9cda-bc31-4392-9f21-465456039a25"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="00cd7547-6215-45fd-b2c5-b8aa3e29815d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="003dd3a6-34c9-4e7a-9702-2889a90ecde7"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="c9c08266-ff6d-4e2c-a494-ca2644f17497"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="23cdd539-ca76-4e69-a899-d9d8d5f7eb47"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="4432fc26-0742-40d8-9d1d-ce26e45bf496"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="010c7d08-64ce-400e-850e-601911c19428"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="05ec9639-f337-44f9-a807-d71b1d2e5d5e"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="fcc37a7f-c58c-4591-88ea-f94f0c3e706f"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="5bfccbc5-f4c9-4a28-8cef-331b190af3da"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="f48026a7-b663-4efa-b200-670faaaf4543"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="b68b4957-afe0-4dd5-ab28-ae6d63465c5b"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8da63e91-2235-407b-97a0-3dc3aa3d7d3f" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-86edItems" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="3a805fb6-c03b-4f23-a89f-8934722dd8aa"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="2049a663-a236-4c17-80df-b9598996d483"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "86ed Item",
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="88bbbf31-646c-4d79-a3e5-5aa8536b738a"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="6665aaf3-ed3b-4ba7-bf37-d896b06f0409"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="6c7564a0-2838-4cc4-84a5-e1bd2b1f953a"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="baab4720-a0c4-4ce5-a102-7244af4240c0"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="12f82aed-b2be-49cc-a0a4-66ac5dcce3d7"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="f606f7dd-1f23-4a98-b605-c66a6a60b1a1"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="2fe4e0de-55bb-4387-992c-3be6967c650d"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="85d55da1-a7fa-45eb-a2cf-deeb5c22323b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="db118065-25f8-4769-a328-5ffe1dcab0ff"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>26168</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>a9c89708-28c0-4900-bcce-339a67d56d42</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>3</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":3.79,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>11.92</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="5fec1eba-212b-45ef-bf8b-a620e97cd2a4"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="3004f5fd-2291-46ad-b3bc-f93d80e91b3e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="c6615270-fc30-4a0e-a607-780be6fcbefb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="787a26ee-0534-4bf7-a193-f6fe2a3461d4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>1bf9c20c-e14f-433f-958c-4f173b32fee2</con:value></con:property><con:property><con:name>Amount</con:name><con:value>11.92</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=1bf9c20c-e14f-433f-958c-4f173b32fee2</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="fec1234e-8331-48ac-ab39-950731749d83"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="46026dfb-43ed-4e71-96f7-c2fc98eb7b1f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="4e320b4a-e2ef-40fc-b9d7-fcff7b570b7f"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="1f200310-7df2-40a8-a6af-6991e2cba5de"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="087bc53d-07fe-4008-8db0-b964ddb94138"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="e944705a-cd64-44b3-9efa-5000cc1a37f2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="40549055-693f-444a-9d67-d7e0fef8ac01"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="61488ac7-b313-4f0d-95a7-3c1805a8f285"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="2b75e51a-2bbe-46d4-8eca-650b97e7980b"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="e58fe8d3-315e-4f1c-bdb7-a208ad3cccf6"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="41c875b9-ffad-4d82-99f5-78898f36173d"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="2f32385d-4935-48dd-8ea8-d5fb982f0bcf"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="e3d8333d-d35d-4033-a4f1-032de9dc407d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="d5263c4a-5e69-40a8-ba7f-db7d0205492a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>329af2e1-768c-4850-9b4e-60538fde0218</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="047e8e67-8dbe-4cec-a8e6-b9d49d320871"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="444b979f-52b1-42a7-889a-68130c9acc19"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="fe2f3586-6b61-4479-9ded-257ac627f000"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="c4abffd8-365a-47d5-81a2-f902fb844c1d"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="a83f9e1a-1b63-4326-a61a-880e0fa8b651"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="ac11a696-e5a4-459b-affd-03d2cc7d1fc3"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="c96f4765-543f-4f8c-84bd-3afc5788ce94"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="1ba41ba1-5a18-40bb-ab07-30c656a87897"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="d5ecbbdd-fb19-40c5-9411-a6708fffa1f3"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="fe59a1a1-11c2-4ded-901c-8ab222110ead"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="a038a331-602b-4e0d-aaa7-364c89ec6313"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="b9ac9fb0-1f3f-40cf-90c9-a78528af5e1d"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d34d923d-0525-467f-bb9d-072c2b085c01"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="4adf2c09-7ceb-4267-aa30-423d3a556ebd"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="92d59ece-7ff0-4115-86ee-3b73a4f64cff"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="c5d4f352-fa64-40ac-84f0-2f62e64f39b1"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="51f17561-7c0f-45fb-a52d-44777919ce6b"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="97e7eb46-49bf-4452-8340-bf79b51d2c4c"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="cfce9182-ba0e-4ce5-a56d-d8664cd263ab" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-86edModifiers" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="1c9ed8aa-440b-4871-b099-b980845369da"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="15ca487d-65cb-4460-863d-944326a5d6b7"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Item without modifiers",
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
		    "_comment": "Item with modifiers",
		     "ItemLineNumber": 4,
			"SalesItemId": 3791,
			"MenuItemId": 2098,
			"Name": "Traditional Small (Approx. 9)",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12563,
				"SalesItemOptionId": 17171,
				"Quantity": 1,
				"Name": "Sweet BBQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }]
		}	
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="c7d8a876-e944-429e-894a-f71e6a66ab91"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="7a9638e6-dd37-4af3-91a2-a1abe07e5fab"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="96178bef-d46b-40c0-b8c2-990623023484"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="54163d05-290b-4e93-9850-8107e5a55e7b"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="6da6ce7b-f2f1-4a9c-9184-2d16508d4250"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="91871f2b-be43-4aa8-9c1c-b562c841eacd"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="383d7a47-e028-4f59-a7a9-0aae4a737dcd"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="f7709b16-85ec-499d-93c9-cb1a6cb1538a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="3ef5d85b-afa4-481e-81e1-0ca1c2b1b884"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>26169</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>808c6478-e646-4136-a4ec-824819fec784</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>3</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":3.79,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":3791,"MenuItemId":2098,"CompId":0,"Name":"Traditional Small (Approx. 9)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"9","SequenceNumber":1,"ItemOptionGroupId":12563,"SalesItemOptionId":17171,"Action":0,"DefaultAction":0,"ItemLineNumber":4,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sweet BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10456,"PosModifierId":17127,"Status":0,"Modifiers":[]}],"UnitPrice":11.79,"ExtendedPrice":11.79,"Quantity":1,"NextModifierSequenceNumber":2,"PosItemId":16181,"CompValue":0},{"$id":"10","LineItemNumber":5,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>24.55</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="5fa7edfa-8997-4f76-bc1b-476c20c081a5"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="60846e1f-2fe9-4f97-8d75-c15990f6b0f0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="5b73f663-d280-40bd-a348-ab73890f2d4e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="7359d844-e9b6-4b3e-8590-c20d97879448"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>e0660bf2-9992-4485-8784-4f2e9b1a972e</con:value></con:property><con:property><con:name>Amount</con:name><con:value>24.55</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=e0660bf2-9992-4485-8784-4f2e9b1a972e</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="d14b0810-1800-4420-9368-df3c3c1e7570"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ffdb5795-ffd1-4c52-9482-7e4e80b0c32f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="17a3211d-4629-4a16-8b2d-1c18e5fd3f5f"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="3e783347-11fd-4c8f-8520-8b9e3b674434"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="2ddef04a-9267-4cd6-9b32-53b7c1acb5c6"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="1b80af98-4998-4cb9-9c39-811c1333ca15"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="cc050017-ede7-4f36-a499-78be92cc77d3"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="00b0f94c-de3e-403b-a4e3-be1c49576c89"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="2a45d5f8-90dc-46b8-93c4-c1224a06430c"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="83fc8e44-4dc3-4fd5-9c3e-31ae4f3d05fd"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="987b9d6b-8136-4750-b4b5-af5b3202e0d8"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="527b421a-3a07-484f-93e4-783dae6365c9"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="769f5a11-3edb-40ea-b056-3f8c1ba05741"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="0d2ee865-0b06-4f65-ac82-faa72c2a291a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>0729a397-51f2-43e1-b7b0-5e02aeca1b8e</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="dd94e094-65bf-48dc-9a2b-d76e5a942738"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="e615f772-09b8-4c23-84bf-6091bd87d315"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e30206b3-9f47-4fec-b006-1187f50a1ec7"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="19138774-9ced-462a-b859-52ef7b4376ad"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="2b7ce4d5-11b8-4a84-a676-327d2a9b1757"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="81f38362-7667-4b00-ac15-15a99ee8b34c"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="fa6ba97b-cd5c-452a-b6be-ee2f9cf13462"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6ec6f821-8436-42bb-b18c-729e1562a33e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="b365beb6-c71d-4e56-94e8-549ee797347a"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="14f5121a-d7c9-4b3a-80b0-2fef4de7c8f4"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="11cea61e-1d3b-4535-8e5c-a53b5cfa9d83"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="1bbfb76f-7481-44fb-bda3-6e73d8918c33"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2f410857-b573-4f09-a666-449a7a5f3cb2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="ab221288-7a04-4249-9516-c0a23c6e3e2f"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="5e888afe-af61-4e10-879a-ec71394afdcc"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="0650bcb8-3639-44dd-b559-b26b984cb927"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="a67879a4-5b39-4082-96a3-087a9623550f"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="0750b216-b2d2-48f8-bfff-63c440535c79"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="84537ca2-bf67-4113-9b32-1c674e8a7f45" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-TuesdayBOGO" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="63f6b3f8-1b51-48e7-87da-a6b764d330a0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="95adf419-bd53-48d0-8045-5f36f20355e5"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "TuesdayBOGO",
			"ItemLineNumber": 1,
			"SalesItemId": 4076,
			"MenuItemId": 2200,
			"Name": "2 Boneless Small (Approx. 24 Total)",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12568,
				"SalesItemOptionId": 17313,
				"Quantity": 1,
				"Name": "Teriyaki",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 11686,
				"SalesItemOptionId": 13575,
				"Quantity": 1,
				"Name": "Blue Cheese",
				"UnitPrice": 0.6000,
				"Modifiers": []
			}
			]
		},
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b4d699eb-5d14-4f2c-b6d0-f94b0ea6774d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="3ad80401-5168-40e4-b97e-2c6aaae3aee0"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="a791f6d9-8a07-4228-a728-5a948cf7764e"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="0a3bb295-879e-44a2-a008-c430ce3e1815"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="ca722251-c54d-429c-ba07-8ba18ce18f5b"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="802849e0-ef1e-40c8-8d9d-83ed84591f19"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="df9c9e04-4d11-431c-a15b-9a9ab5ab768e"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="8596e854-3839-4f32-b340-307ea81f3e80"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="d381258e-2dad-4ace-b1c2-61ae15bc00a4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>26170</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>f2639287-46f5-4802-b3f0-86ca53b47a12</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>3</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":4076,"MenuItemId":2200,"CompId":0,"Name":"2 Boneless Small (Approx. 24 Total)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12568,"SalesItemOptionId":17313,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Teriyaki","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10460,"PosModifierId":17137,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":11686,"SalesItemOptionId":13575,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":1,"Name":"Blue Cheese","UnitPrice":0.6,"ExtendedPrice":0,"PosModifierGroupId":14568,"PosModifierId":10001,"Status":0,"Modifiers":[]}],"UnitPrice":10.99,"ExtendedPrice":10.99,"Quantity":1,"NextModifierSequenceNumber":3,"PosItemId":17390,"CompValue":0},{"$id":"8","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"9","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"10","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>19.63</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="7675c575-2d7e-40e1-8cb6-168e2ee43f5f"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="614b8f7b-995f-4a05-a82f-62dedff975fe"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="65f7cc71-df59-4201-bdfa-c67aa9420717"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="216e3361-3430-4487-b0a7-315b5d7072f0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>6c0ccf6a-e7e3-40b3-b336-b3b436302234</con:value></con:property><con:property><con:name>Amount</con:name><con:value>19.63</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=6c0ccf6a-e7e3-40b3-b336-b3b436302234</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="f8818fe0-d6d7-4b83-947d-eb34a6333be2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b12ea652-ec11-4cf3-a8eb-b89fd932a2e5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="80fb626a-c3b6-4cae-b716-c32587b87cb0"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="32e7eb62-578f-4aea-974e-33ab9189ac52"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="832a12bf-4d9b-48d8-8d49-9ee15311dc4a"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="fba71d55-81d3-41e3-a688-fe285ad156bf"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="a3f2f923-1919-4f07-acca-ddb951288964"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="b78371c0-eb81-4069-ae1a-075f88249994"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="eb4cafa0-9407-44d0-9484-cbad337e6c48"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="8c616796-f475-4841-be6f-78cf1836699e"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="83cf20a9-5890-4011-9662-75a808dbf8bd"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="bf30828a-71cc-467d-ae61-b89c7dbe87cb"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="02e9e4d3-487c-4963-b56e-0f5844b4b941"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="4eff27a6-f47c-46e5-8704-3cddee2421dd"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>9b97940d-c93e-4450-b353-f1bf6f471e30</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="ae89bcf2-f2bc-46d9-9ab9-f91deac2d868"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="2f47417e-7708-4d9c-a681-12569c418b01"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="532409fd-f9b2-4b02-9abf-5e5bbf037e48"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="76d5c7c4-7f27-4dcd-93d1-e2fd8d455c12"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="d8791524-ea30-4da2-867f-c6ebbadbfa88"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="30efc71c-ceb0-4574-b4d4-8b6a04dd1a69"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="81819d13-720f-45fb-b3ae-c85717383059"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="42ec0f50-4cfd-41a4-b6ea-ef5871d25687"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="ab96acb9-dac7-430a-af55-aad66f66c1f5"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="b40cee4f-9b52-4508-b649-66cbebfc84b0"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="0e0bde00-703d-408c-ac37-f7baeab65b3b"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="a3cd295f-fb12-4d56-a457-9647b4944575"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7ff5da74-27d9-4372-8ddd-96181f9abfa3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="61e4b4b3-9e33-4f7c-8a27-3a3072b1a5fe"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="8b5f3d9f-c6ef-4512-819b-a00dd5d3e3bc"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="4b653cf8-2f2f-4e56-afe1-108340ef5e61"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="e0ced657-e962-4e0f-b633-2bde8cbd1544"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="cddcc38f-dc25-41a4-8deb-6ca819dda78a"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="4e9a0fe0-0866-4228-84c7-04fc03479bef" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-ThursdayWings" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="928a7a00-6839-4a7d-9cd7-88a9ccbafa8b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="e9c316ec-70c3-4574-883b-2d423ead274a"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Thursday Boneless Wings",
			"ItemLineNumber": 1,
			"SalesItemId": 3700,
			"MenuItemId": 1986,
			"Name": "4 Boneless Wings",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12565,
				"SalesItemOptionId": 17170,
				"Quantity": 1,
				"Name": "Teriyaki",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 13755,
				"SalesItemOptionId": 20922,
				"Quantity": 1,
				"Name": "Ranch",
				"UnitPrice": 0.6000,
				"Modifiers": []
			}
			]
		},
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a193008d-a687-49a2-b674-65128c309380"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="e5819134-3af0-407c-8996-02814bf223c0"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="baf7170b-f451-4733-92c3-30b31dd39613"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="35ece6c7-d408-41e9-9d43-81cd93a19ae0"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="dee98374-f8f4-4c8d-a947-7622c8894aac"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="05d5060f-63c2-4bbb-b45b-37a90d708634"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="9237e8da-77cd-44cd-b714-0cf08d54de6b"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="1ae344cd-111a-466f-9b02-008b8da745a4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="1f6b566b-3c43-4376-a507-bb4e6b3efab3"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>26171</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>fb857e43-47d2-41ec-80c3-36cab67e58f8</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>3</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3700,"MenuItemId":1986,"CompId":0,"Name":"4 Boneless Wings","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12565,"SalesItemOptionId":17170,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Teriyaki","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10456,"PosModifierId":17133,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":13755,"SalesItemOptionId":20922,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Ranch","UnitPrice":0.6,"ExtendedPrice":0.6,"PosModifierGroupId":14580,"PosModifierId":10003,"Status":0,"Modifiers":[]}],"UnitPrice":2.8,"ExtendedPrice":2.8,"Quantity":1,"NextModifierSequenceNumber":3,"PosItemId":16211,"CompValue":0},{"$id":"8","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"9","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"10","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>11.5</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="e810ee03-70b9-4154-a2be-c8eeb1c28195"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="a7525738-f12e-4ae6-8d5d-868564abf460"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="a869a0e3-1985-4ad5-8769-5bc6d668b5f9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="1a29dfac-54ca-4c50-9c99-9fe2fc503b20"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>a31eb28d-5f93-4d89-a1e8-c288567ec72e</con:value></con:property><con:property><con:name>Amount</con:name><con:value>11.5</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=a31eb28d-5f93-4d89-a1e8-c288567ec72e</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="ecdc1288-8e17-4dae-8ef7-a57cd17a6754"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2f341ff0-e827-458c-88e8-7c2e625b7d4c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="2c09a22e-fce7-4df5-bd15-e226f451b01b"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="681d348d-a2bd-4ebe-ac2a-c1ff932cb1e6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="3a473196-8941-47f3-ba75-8ce7f0665be9"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="525f9a03-e76d-443d-bb36-f6fe2344b4f3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="04791446-8781-4dd4-ad53-cfed305b5163"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="4fb0713e-646a-4010-ae3f-4620c253590b"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="19755ff4-ba19-4b19-b1e5-66c33d3a537e"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="057856a6-57ff-40f1-a7ce-bc2a00a5787f"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="5c885315-c8b8-4d5c-9830-4c35d31616d2"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="7991da75-58f6-431d-bfbe-c6449158b8a1"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="e422b99c-2f7e-4ebf-9a70-a7f593c81117"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="654a5131-7746-4dcd-916a-d89ee6ae4c97"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>8f50afc0-4915-438e-bcd1-2ef39fee3c5a</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1bb89743-6d85-4c89-b273-572c4f85abc0"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="b49478f2-2739-4054-88e3-fee27b89974e"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8b1e3a47-b84c-49a6-a41e-35933933b8da"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="26789f9d-164e-424a-aedd-87948bca5e51"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="a5299b14-b559-4dbc-a7e2-a059413cbe35"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="6f36f08b-5e18-43da-9173-21db2cb79437"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="c1d037e9-d24d-4ff2-9e9c-d83c8a567c1c"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b24dca70-d725-48d6-83c6-3812dc2d79b0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="5c897467-7865-4954-b820-2142a1973b44"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="9e541a04-9a1e-47d1-b857-4693fad216be"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="206c87af-5de3-443d-841d-5ded10fe77e9"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="b320f6ec-3b05-49a4-8419-e10553dc48de"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="03c2eb7c-f2cf-4033-bdaf-188636bf37a5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="41813e1b-2832-4d27-b7fb-f65db5d6f82c"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="85b6ce9f-5ef8-4013-90da-d17cfabf3f6c"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="b1f029d3-c835-42ae-950e-4f7d14611df9"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="22734367-005d-4593-be25-c50a4f9d5e01"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="03c59b88-a0bd-49dd-ba09-1404c22fd3cd"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8e934bde-a6b2-48d1-af33-15c69062c4c6" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-DrinkItems" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="d28e7a97-57e2-43ef-99f8-a2d27fa95a4a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="83806aa4-530f-495f-97c6-07ffaa9f3bf9"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Drink Item",
			"ItemLineNumber": 1,
			"SalesItemId": 4585,
			"MenuItemId": 2149,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b8d42fbc-8065-4084-8bee-e587d0533de7"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="933b4d5c-a9a1-46ae-842e-048fd20e9667"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="74225a9e-3580-400f-94a3-9692edb77d49"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="ecb4549b-3d55-4008-9e0e-3df3f8ac7454"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="075c5906-7c53-420f-b9c6-a6473d498056"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="748b5d6f-7f8f-4a9f-bb26-b19bd99c8583"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="d2e052b2-3622-426c-b2f9-892ab7a55b03"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="31769067-2e17-4d13-b165-dea8f2b959e5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="a354e0c0-1511-49bc-b603-14821a7d7a50"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>26172</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>13e45c63-0a95-41e4-9e61-d07d30d74b80</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>3</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":4585,"MenuItemId":2149,"CompId":0,"Name":"20 OZ DRINK","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2.99,"ExtendedPrice":2.99,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":13372,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>11.06</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="ad158d44-edc1-4673-a274-6f98eb84762e"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="22f9acf4-d145-44ad-95ff-89beebd2e48f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="2e5864f0-9b99-43f9-9119-87b84b33e2db"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="88046f54-5177-4eda-8714-0cbd0354b01f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>3b1d66ec-8237-43a2-8847-ae54d8e44244</con:value></con:property><con:property><con:name>Amount</con:name><con:value>11.06</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=3b1d66ec-8237-43a2-8847-ae54d8e44244</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="4cfe83c2-3fff-4108-8989-dafe25d584f0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f77684a1-bbc1-4a2d-8ff0-921cc0a2c0b0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="36617163-858c-4888-bba1-df75747124dc"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="83ba10bd-67ed-4c4f-9867-c60cd7409c27"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="5801800b-39d4-420c-92c6-0b46cbfe8f37"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="f6f9226f-26a6-4539-89c9-3be7b768a13e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="66df8780-91f8-4daa-b716-3debaa596016"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="f04f4f46-7fa7-42dd-85ef-91a26d257c61"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="214299ca-4392-492d-a750-a9e06712b8a2"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="f594bf2a-03da-40ab-8c17-1aecfc3faf99"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="6566df8a-a53c-4f3d-ad35-ac1f64e48bd8"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="bb5a8389-b91b-485f-abfe-52dc27ef5cff"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="25991f0f-4b9f-41d3-a36a-d1164da540c5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="8b9da087-890f-46d7-b162-6fb0493d5a78"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>05c55895-1e58-43ac-a659-f95b233b53f9</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="b78dddde-84b8-4448-aec8-b2eb1de2e555"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="3bb69c8d-5207-499a-8a34-f129795541d6"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6b62edf0-2745-4ee9-bec3-e7b3939c43eb"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="69a4160c-7569-47c0-ada8-11f0330aebb1"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="b1578b57-c087-482a-aa08-00f183843d34"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="a39ae315-ee74-4592-8b61-92461ff3439e"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="f0afec79-5a7a-4d2a-b5fc-09db0b376256"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8a6ef56c-2d2d-4111-9f00-526332d4427a"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="fbf080c8-e79a-4f33-b003-328a1d2bfe39"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="58880000-0212-460d-8678-fe09927a4f3d"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="435b827d-31e0-48d6-b739-af3dbb36ad06"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="245717aa-85fb-4ee3-8646-143068be71ac"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="dbe368e3-6d88-438c-a620-5b45cf2239ea"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="d7fa5b6f-109b-4da0-9261-3c9ba2f24514"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="5d07e0a1-b7b5-4e6d-8fd5-48bc0468836f"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="b9778e18-03cf-4110-8404-bc4ffd209ff4"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="6b6e292d-65e2-4307-8471-34dfd3026bb3"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="5d3b1f94-c847-4032-879f-9e3627b358d9"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="d0a4ec73-7f49-4802-acd9-7e1a89927bb9" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-KidsItems" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="47fdb21d-3a95-48ae-b4e7-4a6a0f8272fe"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="52579eaf-342a-4bbf-a24a-231706f099b8"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Kids Item",
			"ItemLineNumber": 1,
			"SalesItemId": 3403,
			"MenuItemId": 1066,
			"Name": "Mac &amp; chesse",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 11069,
				"SalesItemOptionId": 8220,
				"Quantity": 1,
				"Name": "French fries",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 9754,
				"SalesItemOptionId": 7884,
				"Quantity": 1,
				"Name": "Kid Milk",
				"UnitPrice": 0.000,
				"Modifiers": []
			}
			]
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3f906c38-8076-45e5-9ff5-3336c5d0e549"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="3e9db989-a8c6-440a-be3f-3e046376961c"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="a9353f21-794c-4004-8d8b-20741bdc6cb9"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="de94b047-7e20-403c-95e7-1fc6229018fd"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="cb4ac5d3-2a41-4879-8dbc-ccf0828d7fe5"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="1bf003c7-43d8-4c5e-89bf-354174c5e403"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="690deeef-5e80-40dd-b742-2b6eb5dd14a4"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="a6620616-1cd9-41bf-90c0-72c9c1b3698d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="c753b00c-2447-400a-af2a-2d05873a33c1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>26173</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>b47a4add-34b0-4a55-bb5b-c14a64e99a54</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>3</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3403,"MenuItemId":1066,"CompId":0,"Name":"Kids' Mac &amp; Cheese","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":11069,"SalesItemOptionId":8220,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"French Fries","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10257,"PosModifierId":14114,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":9754,"SalesItemOptionId":7884,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Kids' Milk","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10080,"PosModifierId":14235,"Status":0,"Modifiers":[]}],"UnitPrice":4.79,"ExtendedPrice":4.79,"Quantity":1,"NextModifierSequenceNumber":3,"PosItemId":15970,"CompValue":0},{"$id":"8","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"9","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"10","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>12.99</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="8162c911-d16c-4325-a57c-401634386c50"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="14cf703c-a933-4bc6-ba70-50965b086675"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="901e93c4-a6d2-4da7-bb4a-a000561230e6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="10afbabc-cad8-411b-9779-7575bd47a4a5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>b415092e-8af4-41b5-846d-7a8fe55bb921</con:value></con:property><con:property><con:name>Amount</con:name><con:value>12.99</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=b415092e-8af4-41b5-846d-7a8fe55bb921</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="cbec0f34-c605-48c0-a4c8-edad97d48be2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="01e6c1b8-2027-4052-8286-996a337abb9f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="29ad6af7-c9c6-47bb-8abd-bc8531676021"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="718df38e-c0be-4764-9c9a-68a114f5697c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="01e46d3b-eb93-4f2c-b3d4-3248a0f678d0"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="aab1d0af-dc53-42aa-9d20-bd1af5d116fc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="b8e79764-ce23-41c5-a271-520ef5a56b89"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="80179576-408d-4104-9f67-f3b1754f68a2"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="572d0b3c-a3d6-4ad3-8bf2-d6779813110f"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="4ac6c11f-5b0a-45cc-9471-ee2b79486faf"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="644c6afb-3582-4415-ad52-bb1ac4c23f07"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="704b91bd-441a-4e68-9d42-9ef04a3d8443"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="236ecfed-ad8f-4701-9fba-001ebe102950"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="2c58df76-24ba-48fa-87d5-766f53995868"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>fb8945f7-bfa0-4886-8c2f-a58d6cd66fc8</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="2ad097c4-2dd2-4e2a-98de-3a03c84c9478"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="c2ce0bbf-f5d4-4c9d-bc18-3efa1c80fdd5"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="69f4601f-afe1-43f1-9197-c7439c278e20"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="ba238e69-054c-4edf-a89b-6a82567bb489"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="9834110c-885c-43b3-927b-1f6a099513fd"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="b713a878-69be-43fe-8289-21bd4740e2c6"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="3a947af1-35bc-47b6-bbf2-568ec4904034"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="513aa649-577e-42c4-8b19-ef7fc3ee1c30"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="0cfb764f-f36b-4a9f-87a0-d6f7fc7123f0"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="62b0bf04-7820-484c-b9e6-365fadb87228"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="3eea0fe7-c5ba-4afb-b850-2a4ba4583494"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="1f615c94-8e66-4566-941d-dc78efc8a421"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="c49c4f23-8d0c-48f5-b3ff-42de8414acc0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="e7cc6649-24bc-45e7-a96b-aa1848750c20"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="fc1e3c34-c080-4258-841e-3f27d9ed3161"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="666e9329-e045-46df-aba7-7c3f8e5b9729"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="d9e888ad-8352-4779-b75a-2bbeafb18402"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="10fed9cb-3800-42fb-a846-c6d162c06eb4"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8a1b5502-8f09-47f8-8521-b54521271bc7" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-FastbreakLunch" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="66a322a2-64a2-41ba-a634-62926c3b79f9"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="dbd260a3-ec2c-4d58-a79d-4d986daa7066"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Fastbreak Lunch Items",
			"ItemLineNumber": 1,
			"SalesItemId": 3119,
			"MenuItemId": 1813,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12551,
				"SalesItemOptionId": 20899,
				"Quantity": 1,
				"Name": "Honey BQQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 8599,
				"SalesItemOptionId": 4036,
				"Quantity": 1,
				"Name": "Souce on Side",
				"UnitPrice": 0.000,
				"Modifiers": []
			},
			{
				"ItemOptionGroupId": 8678,
				"SalesItemOptionId": 4099,
				"Quantity": 1,
				"Name": "Blue Chesse",
				"UnitPrice": 0.000,
				"Modifiers": []
			},
			{
				"ItemOptionGroupId": 13177,
				"SalesItemOptionId": 18978,
				"Quantity": 1,
				"Name": "Pota Wedges",
				"UnitPrice": 0.000,
				"Modifiers": [{
					"ItemOptionGroupId": 11513,
					"SalesItemOptionId": 14677,
					"Quantity": 1,
					"Name": "American Cheese",
					"UnitPrice": 0.6000,
					"Modifiers": []
				}]
			}]
		}, 
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8268d9b8-d8e0-4941-8726-3c15f763b03d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="04c2b7aa-1ea6-444e-92c9-6ed96751c52f"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="2531ef40-ca38-405b-b5bf-304b2c176768"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="4d757f70-ca34-4b39-aec8-3c592686ebc4"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="aa93c057-c3e8-4c4e-b463-2a1fc890c152"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="ddad4daf-5d92-4861-bef1-b42d20e3590b"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="9a0313d2-e506-48d6-931f-2fa9788e1889"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="342bc35f-82d3-46ad-bf0b-0a107acb0cf9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="39a43553-494a-486b-a65f-2a15d64d2acc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14361</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>327a25ba-0ae0-4aed-ad2f-7381f6c14d70</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3119,"MenuItemId":1813,"CompId":0,"Name":"Lunch Traditional Snack (Approx. 5)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12551,"SalesItemOptionId":20899,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Honey BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10455,"PosModifierId":17156,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":8599,"SalesItemOptionId":4036,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sauce on Side","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10001,"PosModifierId":11943,"Status":0,"Modifiers":[]},{"$id":"8","SequenceNumber":3,"ItemOptionGroupId":8678,"SalesItemOptionId":4099,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":1,"Name":"Blue Cheese","UnitPrice":0.6,"ExtendedPrice":0,"PosModifierGroupId":14567,"PosModifierId":10001,"Status":0,"Modifiers":[]},{"$id":"9","SequenceNumber":4,"ItemOptionGroupId":13177,"SalesItemOptionId":18978,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Potato Wedges","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10289,"PosModifierId":16259,"Status":0,"Modifiers":[{"$id":"10","SequenceNumber":5,"ItemOptionGroupId":11513,"SalesItemOptionId":14677,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":4,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"American Cheese","UnitPrice":0.6,"ExtendedPrice":0.6,"PosModifierGroupId":10351,"PosModifierId":16789,"Status":0,"Modifiers":[]}]}],"UnitPrice":8.99,"ExtendedPrice":8.99,"Quantity":1,"NextModifierSequenceNumber":6,"PosItemId":16433,"CompValue":0},{"$id":"11","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"12","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"13","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>19.28</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="fba5850e-3cef-480b-8b6b-249be6452294"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="394c3e1c-6667-4602-be51-c5da7d19fbf4"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="1cac8202-ca8b-4988-a529-7387384fc202"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="3f02c059-a610-4ac2-8a43-f35a3cacf5af"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>411afcad-0b2e-454b-9da0-53b672e352f0</con:value></con:property><con:property><con:name>Amount</con:name><con:value>19.28</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=411afcad-0b2e-454b-9da0-53b672e352f0</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="bcdca380-1b1d-4013-bc4e-50ab17cfdb6f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="5c3e7638-383f-4c56-bd11-7fb24dfbfa05"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="30f40ed2-89b8-436f-9392-f14247d8288a"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="c9202d45-ce23-461c-90fe-8d462493855f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="9ade6258-2d53-41a7-8ad0-61a9158501bb"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="cd7c90ae-193a-4b06-b284-7a7776d3bf19"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="b692121a-5391-46ba-a55a-bce27d0e9969"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="5a70856c-c79e-467f-adf6-b5afb99b8465"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="22d84389-0ea4-4d96-ac29-65b0ae52744c"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="a503b5c0-d280-4fa6-b412-5dd4cb165220"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="db3e4304-de48-458f-9cdb-efa2e3c3b326"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="28df762b-780c-404b-b99a-27758f7bdfa2"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="64a94eb6-16b8-4d98-b0db-c4ed3af4973a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="68c901f0-f96d-48ec-bc2e-0110268b7abf"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>c0127075-c071-4f66-8ba6-87f6ed80d568</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e15a0d52-47c3-426c-bd3e-53c866449e57"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="25241c25-efc9-41d1-b3d5-a6261f0de82f"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a8217cb2-6536-4408-8a0c-0d68364c0adc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="dbae4e20-1094-4d4f-802b-41f9338b870c"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="baed713b-32c4-4338-88f3-2a53c4cddf10"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="a07b2aa8-84b5-43b4-b720-7b6e69c0575a"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="7b1b81bd-1347-414f-8323-7298fd7d9846"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6696157a-b1c3-419e-8244-0892b7808b5f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="c506393c-2146-4de4-8199-304f58ff8252"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="bfeb2631-a630-4dec-93bc-d5a4690f394d"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="60ff5896-4cb2-4ab1-be13-cdf6bbca21ad"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="8e9865ae-f2b3-4768-869c-ae6847480da1"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d4e9a5ae-1c52-4cb5-96d1-c191505e3651"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="08cc4047-bf9a-451d-9af6-a8f6e9dbff16"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="eb939ab4-82dd-4a0b-ab3b-c6ad810a2ecf"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="865c985a-c0a6-415c-b1ad-e4f11623ac13"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="85132c97-e84e-4b8b-9df5-bfba854b3451"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="375a988b-1da0-44a8-9168-abc2c3cde1c9"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="0e91aa7e-8c6c-46be-989d-727ba61a6243" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-FastbreakLunchInvalidTime" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="ec91d35a-6872-42c3-ba56-208cbe7a2563"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="c1531b8a-7e26-44e9-8980-3d64e3cdef98"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Fastbreak Lunch Items",
			"ItemLineNumber": 1,
			"SalesItemId": 3119,
			"MenuItemId": 1813,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 12551,
				"SalesItemOptionId": 20899,
				"Quantity": 1,
				"Name": "Honey BQQ",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     },
			     {
				"ItemOptionGroupId": 8599,
				"SalesItemOptionId": 4036,
				"Quantity": 1,
				"Name": "Souce on Side",
				"UnitPrice": 0.000,
				"Modifiers": []
			},
			{
				"ItemOptionGroupId": 8678,
				"SalesItemOptionId": 4099,
				"Quantity": 1,
				"Name": "Blue Chesse",
				"UnitPrice": 0.000,
				"Modifiers": []
			},
			{
				"ItemOptionGroupId": 13177,
				"SalesItemOptionId": 18978,
				"Quantity": 1,
				"Name": "Pota Wedges",
				"UnitPrice": 0.000,
				"Modifiers": [{
					"ItemOptionGroupId": 11513,
					"SalesItemOptionId": 14677,
					"Quantity": 1,
					"Name": "American Cheese",
					"UnitPrice": 0.6000,
					"Modifiers": []
				}]
			}]
		}, 
		{
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9b8deb90-01f4-48cc-b3b5-1c377b6ad034"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="1f699b8d-cc57-4d21-9266-5ec75d859228"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="49ac8ef6-27cb-46d8-8c23-573b04b65008"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="d4ee3650-a38f-4dab-ae41-52f925f104f7"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="8e4a54e0-9edf-4fe1-bb54-bceaf7024045"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="1a34c340-d688-44b7-bb23-3d708c70b790"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="ed3150be-91ab-4336-b9de-82ec62832ae3"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="9f13167b-badc-4ea3-8a25-c05486b4f427"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="1ed0a9b6-f2e7-402a-8bf5-6a05673c5e2f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14362</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>f0a8eebd-d4aa-4235-bb9d-40cfd55cb0b6</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3119,"MenuItemId":1813,"CompId":0,"Name":"Lunch Traditional Snack (Approx. 5)","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":12551,"SalesItemOptionId":20899,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Honey BBQ","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10455,"PosModifierId":17156,"Status":0,"Modifiers":[]},{"$id":"7","SequenceNumber":2,"ItemOptionGroupId":8599,"SalesItemOptionId":4036,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Sauce on Side","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10001,"PosModifierId":11943,"Status":0,"Modifiers":[]},{"$id":"8","SequenceNumber":3,"ItemOptionGroupId":8678,"SalesItemOptionId":4099,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":1,"Name":"Blue Cheese","UnitPrice":0.6,"ExtendedPrice":0,"PosModifierGroupId":14567,"PosModifierId":10001,"Status":0,"Modifiers":[]},{"$id":"9","SequenceNumber":4,"ItemOptionGroupId":13177,"SalesItemOptionId":18978,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"Potato Wedges","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10289,"PosModifierId":16259,"Status":0,"Modifiers":[{"$id":"10","SequenceNumber":5,"ItemOptionGroupId":11513,"SalesItemOptionId":14677,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":4,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"American Cheese","UnitPrice":0.6,"ExtendedPrice":0.6,"PosModifierGroupId":10351,"PosModifierId":16789,"Status":0,"Modifiers":[]}]}],"UnitPrice":8.99,"ExtendedPrice":8.99,"Quantity":1,"NextModifierSequenceNumber":6,"PosItemId":16433,"CompValue":0},{"$id":"11","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"12","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"13","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>19.28</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="289605fb-f05b-444c-adf6-738452f06194"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="f3ae416c-04c4-4ac2-a205-5940f0913a9e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="a7879c3e-c834-4002-9528-43f9f182da9c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="4599afd9-0afb-42d2-8c65-7c2a3d847182"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>ca723a4e-bc58-4c6a-9300-94b4bd921e2b</con:value></con:property><con:property><con:name>Amount</con:name><con:value>19.28</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=ca723a4e-bc58-4c6a-9300-94b4bd921e2b</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="419fe866-177a-4aee-b706-b116280a7ed8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b3ce24c2-1b63-4030-ab72-d81d2a64ea98"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="90a52806-e254-4d3c-bcaf-1081c171eca7"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="486a6757-5189-48f4-8c5c-9b9410a6da39"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="dc9b4a8d-483b-4243-9a49-105ce1e85234"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="827bf324-50bb-4954-a411-5d5c07c7d243"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="a675a4c7-5fc2-4531-bea8-9f978d163b7f"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="35b0a0f8-4706-4ab7-8527-85bfdf3c7245"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="37bc864f-85b1-4c1b-a333-56e15c6b17f5"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="14e20c43-353c-4cc6-9c3c-747cd35bdd47"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="df01b663-ae85-4370-a518-9a0e067e9d32"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="6c2707d3-cfda-495a-920b-edfd2d72ac69"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="305edae1-e110-4c87-99cf-7e6e5e5f2125"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="1bed73d5-e73c-4558-af9b-dc5226672801"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>279b5cb6-2f5c-425a-b0a9-36cd3d87b503</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="8923c43f-7877-46eb-ba60-691064e01a8f"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="867478c6-455d-4923-81e2-b968547c6238"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="de86a975-b4d3-4f60-a044-dce26adfb519"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="6f7aa5c2-5e50-4150-8e62-a3f846769996"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="441efe33-ffd7-4bb6-8ec3-490020ff17d3"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="c71b5fd6-9af2-41ec-978b-e8fed8d25799"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="9093e051-503f-4f19-8aba-ac246fc222f5"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e0bd12f5-8596-446d-aeae-2c70e834585b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="2a71d59c-0b66-48b8-92af-e1951b2d8caa"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="bd2a941a-0992-41dc-afb2-79e2aed35e5f"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="6579c3ab-3908-4058-a6b7-14e5aaa6d773"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="fc0787b9-f5c3-4561-990c-04aff6b5081d"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8a84b004-39a3-4147-8113-69e3a8d015d9"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="7a8c136a-96e2-460a-8815-674a2fc5e481"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="1e2f4431-ad86-4a89-a5f7-ebb72c63c7e0"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="95ee6f53-deac-4926-bc94-1605486b3f72"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="990ccb4b-2c2c-4b31-9c66-5104f166c6fd"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="7abfc27e-4932-417d-b100-995b392be090"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="40ff1d3b-0bf3-4255-83d7-60d5f9b655b7" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-OrderAmountOver$175" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="c0300207-d379-4ff2-9484-671c5a91df65"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="3b88d456-2da1-4c03-938b-ee9a4b801bf2"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Party Items",
			"ItemLineNumber": 1,
			"SalesItemId": 3870,
			"MenuItemId": 2129,
			"Name": "Party wings",
			"SpecialInstructions": "",
			"Quantity": 7,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 11974,
				"SalesItemOptionId": 14913,
				"Quantity": 1,
				"Name": "No Souce",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }
			     ]
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a6c03084-336b-4cca-89ad-e80e47522004"><con:settings/><con:configuration><codes>406</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b193cae-b698-4b06-b350-85a88bc3ecbd" name="Order total amount exceeds configured limits Check"><con:configuration><token>Order total amount exceeds configured limits</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="a5946126-a1aa-4d1e-9c15-1ead88a2c7af"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3014800f-7008-47e1-8e86-760904bbca59" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-NotContainMinModifier" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="13d766c9-5745-44e6-b78e-9fd266eff30b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="012e4520-30c6-48c5-a4ab-8230e976e39e"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Kids Item with no minium required",
			"ItemLineNumber": 1,
			"SalesItemId": 3403,
			"MenuItemId": 1066,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="11c97a9a-8660-4a9a-a496-5176e2043611"><con:settings/><con:configuration><codes>406</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4fa07c9c-a7ab-42fe-aaff-991c36b8b5ce" name="Item does not contain the minimum required modifiers Check"><con:configuration><token>Item does not contain the minimum required modifiers</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="5fbaba7f-b296-48cf-b3f5-d3cfbc56ff87"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="484f60e1-25c9-412a-9808-8bbbd3a0eec5" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-PartyItems" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="6280617e-ac62-4706-b643-3777c802303f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="f75debfe-d83f-4af4-8aa7-28a5da78e71e"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"_comment": "Party Items",
			"ItemLineNumber": 1,
			"SalesItemId": 3870,
			"MenuItemId": 2129,
			"Name": "Party wings",
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": [{
				 "ItemOptionGroupId": 11974,
				"SalesItemOptionId": 14913,
				"Quantity": 1,
				"Name": "No Souce",
				"UnitPrice": 0.0,				
				"Modifiers": []
			     }
			     ]
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7665361b-4499-4a73-8107-4c29a3ad96e9"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="e69e6496-dfa2-4b14-a011-ab75b8102e85"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="55070f2f-d40a-4ff9-a217-4ef1f33c1913"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="d625070d-0a74-4fe5-84c6-1cc21f42c74e"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="f57018cb-94ba-498c-b300-5c472f099c27"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="865b5396-9ec2-4656-b09d-bfdb57010024"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="9aa8722c-2e2d-46ce-984d-6e43a69f89dc"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="d956a180-809b-427a-b9f8-2ab32c483598"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="f99020b0-99ea-4edb-ad54-dd6bec437deb"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14365</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>673dff87-09ae-4f62-a805-87ed0cce0610</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":3870,"MenuItemId":2129,"CompId":0,"Name":"Party 100 Traditional Wings","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[{"$id":"6","SequenceNumber":1,"ItemOptionGroupId":11974,"SalesItemOptionId":14913,"Action":0,"DefaultAction":0,"ItemLineNumber":1,"ParentSequenceNumber":0,"Quantity":1,"IsOnEntireItem":true,"IsOnSection1":false,"IsOnSection2":false,"IsOnSection3":false,"IsOnSection4":false,"FreeQuantity":0,"Name":"No Sauce","UnitPrice":0,"ExtendedPrice":0,"PosModifierGroupId":10076,"PosModifierId":11942,"Status":0,"Modifiers":[]}],"UnitPrice":29.99,"ExtendedPrice":29.99,"Quantity":1,"NextModifierSequenceNumber":2,"PosItemId":16825,"CompValue":0},{"$id":"7","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"8","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"9","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>42.74</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="2dd25cd0-7520-400d-8b34-62389a0ee121"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="6cf7a07a-3688-4aa7-a345-d07ab2bf9011"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="72932ec6-cd75-4e56-9424-c2b5a62f0e24"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="8ce0a31d-4072-4722-8a7d-1e9747b06196"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>3b937a06-c653-41a8-8acb-bddec7e0095c</con:value></con:property><con:property><con:name>Amount</con:name><con:value>42.74</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=3b937a06-c653-41a8-8acb-bddec7e0095c</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="6e71d6ec-13f5-47e8-a234-1fe3b4a84a9a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="079b807e-17fc-43bc-bd1d-b13b1ddec7bd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="15328015-6407-4b04-a797-c5c7cd3d51de"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="4b42887b-0a05-4084-8e75-9d0ae69bdb1d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="f51bcd5c-0cc1-43e6-84a3-0ec08fb341c8"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="92d2116c-a7a4-4cbd-b6ed-a872b11de022"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="2fcd0146-f2fd-4c71-8b83-fd85e29e0088"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="eeb9edfe-ddd8-4bf8-bff0-ba19f71a16cb"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="26019153-c522-4c96-83ae-dda02fb87f35"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="a6ff90a4-7824-421b-9024-28390d5c2949"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="168482cf-d730-4c08-8759-bf287da3a4ca"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="746cc3e3-11f2-4e47-8f6d-a2a86629b76d"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="9ae9d751-e125-408a-afcb-a6e52a9272d3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="c765f1bb-94c7-4cf1-9d81-a7e04e98a251"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>85afbd4f-f50f-4452-8c28-0d7e789680a8</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3a5e306e-8a5b-4fd3-ad49-7d3b9a066547"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="c65b2d49-574b-4eff-bc0e-d6e1380e3175"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="4d36491a-995c-4944-a075-4f682ee0609d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="6f42f1bf-e638-4db6-8e55-3f2d27940104"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="eca80762-28c1-4e82-92aa-7f8993ad1ce1"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="a87baf95-2b43-402a-899f-f7ec3f5b3b32"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="128e4721-b1bf-429e-b65d-8a288586cfce"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ced903d2-b124-4e93-b5a5-2b85f7e7788c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="0b170e6b-fc2a-4d65-a12c-a01e8d231936"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="0582a232-4035-47c2-8c70-6791f26b2280"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="116ffa54-605b-4d84-b68d-71c1f7297f96"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="40b5f909-7a84-4961-908d-7e12fd382525"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7e6abe35-9326-4390-872c-f112a5154b72"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="f9cd6cb1-485a-466a-92ee-34c0d41f6628"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="a1357df1-c266-4fcc-8d7b-2df928ef7fde"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="1b7b9906-7c10-4d56-bd86-99132e3d08f5"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="f7eac2ae-59d9-4ff0-9a19-ca5aa56734d0"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="a1a7bf52-ab23-47d2-bbc3-044c87415ae7"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8ef2aabd-4ab8-4402-998a-a7e78331e705" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-AMEXPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="311201d7-058b-4e62-84dd-e26a767c30a4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>378282246310005</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="60c45d6b-a671-4eb6-b3de-ad96864f44ef"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9b578210-19eb-4982-b350-cd3ea3b8a103"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="798d9e1a-1a4e-4b8b-8a2f-104da0dbfbea"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="7a20b6d8-9884-4e84-b6e0-8b6beece9395"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="9eea35a3-1640-4460-9a70-d660288cb996"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="571193cd-cc0b-4af0-88f0-238fb95bf11d"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="5b607822-471d-449b-b086-ae03bb7c334b"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="14abadf6-7871-4c7e-8bfc-fd7057d79b3a"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="f7d13544-27d9-4f4d-90a0-fba3acc60be8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="fc6f2a9b-1fe7-4e24-b29a-164ab50e2654"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14366</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>c03129ea-aaf3-47ca-b223-9e2aacceb18e</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="925b2f39-cde1-4673-b598-3e1ecd8fdd00"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="9be20517-74fe-4368-bea8-54bc4e83ead2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="3a782e0e-1b05-4638-9f70-4d58f7f9a6bc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="63942163-baa3-4c3a-80ae-ed0a5b058c6b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>a10c8df4-4c45-4263-885c-b06a7e3b5f73</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=a10c8df4-4c45-4263-885c-b06a7e3b5f73</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="d3231fd3-aa7a-4e9b-a4da-0cdfa7e6da56"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="33544241-167f-416c-af64-bf59379bbb28"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="ebd727cf-0723-4a23-83f1-aafd2aa83719"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="f5fbc029-fa80-42dd-a084-d46ee76faf39"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="233675e5-f870-4d99-84d9-de61e12366aa"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="93698daf-c330-428d-8c25-2f4b3e8c9e78"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="2e797830-f361-4ea9-9b48-3d18499ac6fe"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="ba503129-7d92-4820-b859-d08f94647bf2"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="5e82bb5d-3ca2-44ea-88cf-89f3aea1b649"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="26a04513-0cce-41ee-ac1d-14634d88c7ec"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="6de88987-d9fe-4bf6-97af-b0eda5e297a0"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="54709611-b2f6-476b-b66c-760d6e6a6c9a"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="698beb45-8f52-4beb-af4e-a6dc3a0095ea"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="7a5158b7-21a1-4f69-be99-7b8bfb8dcd77"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>8fb5ec05-3ec3-4247-91e6-b52c6471e7ab</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="b5d90991-2e05-4979-94cc-518dae52ad84"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="813f1ed7-4873-4eaa-8616-53a0fe99f2d9"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="575ad6b4-cc09-487a-ac5a-9d440fa38733"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="45e0a8f0-84aa-4b89-8634-45844d6dc139"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="9ab2148a-c642-4210-8631-e6ce37c2824d"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="ad79b8c2-2f89-4454-b035-d0355397bcdb"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="b4ae102c-fb8b-47a5-b572-ac18e05e33cc"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e0b550bb-9a48-4934-9d3c-b3f4ee64ff10"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="4d5bd2f1-86d6-4165-af16-4ebc648dfc07"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="bc45ea3b-8f70-49ad-9792-1595b61cf02b"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="e566e4fc-ff16-42f1-bd62-b2f62fd46479"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="6004364a-f2bb-45e4-926d-c69ad54e46a3"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8a43c0f2-a823-441b-99f3-b7df47121fd5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="13730159-d635-4ab6-a694-15d267295cde"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="56172204-e4f3-43c2-981f-5b7895a9ecb7"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="3182a12e-a925-4de1-b070-848701c8238a"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="7f048016-9742-4b3a-9c54-8cd4bffa3c08"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="15fbb8db-2c72-4826-9c36-2d67c163195a"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="0c93e770-b138-452b-9fc8-452ffaf755f3" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-DiscoverPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="18366523-1823-4403-a56c-525aeece8933"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>6011111111111117</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="2c5be6b2-624c-49db-89c6-520dd485b587"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e788d84a-c511-4341-bceb-d6ce4be3eca3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="88ea61ef-e3da-4dd4-b053-c43da530e19d"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="06c6cb02-a99d-4123-988c-58100c5f8e5c"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="a4f2b562-d364-4634-9579-9d504b1ef7f4"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="17a8d0c2-ff0b-4c57-8f1d-1b53a5c76ef2"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="b9496d0b-e19c-41ae-a6e8-8712466ea3a6"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="f8b7c5a6-f7fb-4f59-bfd8-980aa93d0c95"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="e0789dbd-eb8b-433e-a40c-41b33932eb13"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="507125ef-a3d0-47b3-9b0c-6677dbb7e624"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14367</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>0ed8d8c8-2341-485a-bfe7-3e952cf85116</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="b87f3c1b-22ec-4149-96c8-3717735eb150"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="3ad57c15-d9d6-4c5f-b049-ef0a0b2204c6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="52f70779-37b8-4a39-bdb9-b5b9031a8116"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="ef7cb7a5-8664-4f32-afe9-8606050048b8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>976250da-ef91-42ef-aa35-7cc7601d01ac</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=976250da-ef91-42ef-aa35-7cc7601d01ac</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="30eaef59-cf84-452b-8b4d-9a920f2c0855"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="01531175-aab0-422e-971c-b3520e2df3e7"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="31998b69-cd34-4e30-8896-a6c03b0ba111"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="051ddc9d-8976-49d4-b24c-8a1cdb34aa07"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="ad9ba3b4-55ba-4634-8b9f-e42a32b37cd9"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="f9a778ab-3a7e-4f47-ac74-5ac31bd5d174"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="c1d2fb86-b41b-47d1-9d5e-be2eaab00474"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="1013ea7e-adfb-4803-b7d2-84375d54ee96"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="655183f8-7437-4f43-bece-dd72b983a141"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="bcc10956-e6a7-4b54-9a5e-3a90a1d4d3e9"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="2240fffb-070a-43c2-a225-7c57b5f7eb1d"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="3284ad5a-7590-40e6-9dd8-720004f04ebe"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="8fac8d98-039d-422d-add5-aa9b76d80b30"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="b3f171e6-57fa-4fd9-820d-f11acf350bd5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>843bc04c-c52f-4ac3-a469-042a277c99a4</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="cfac0788-79da-48fc-981b-bc1fc5ec6bb5"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="d42a5ab1-20b9-43ad-afdf-33538514e503"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ac72c5c5-9fe8-4cf4-8258-60ed53a3ff55"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="1bdec777-539d-4c6c-859c-a783d9d41faf"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="5468e84e-f927-46dd-8621-15b1a619e248"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="3bd534e6-37de-4249-91c0-9d76a38574df"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="f59ff03f-9bb4-4993-8eba-d406186375cb"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="531f0212-b5e5-423c-b061-893b0fe6365b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="a3570a7c-18b3-4c81-a5c8-dd01cd2527e3"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="d41b4061-b89e-4035-a213-de43720bdbc7"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="34f1b03d-1ea4-437a-8070-9cf700bb109b"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="738a11f0-d377-40bb-a0d3-82bdf1a1854e"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7883962b-1ecf-45c0-be1b-7f3840554f6e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="7841f0c4-9474-4fbe-a5e0-fea56f048dab"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="491e298b-4e97-466c-8b14-86dd1d8f8841"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="5f142b85-8537-43d0-89d9-f0fb38a57620"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="ade32fe9-5eb1-4583-98f7-1d70c274c9be"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="baa35d82-33ce-48e7-9134-0cc1df773536"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8e36e2ff-f450-49c1-a579-bf86a7119444" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-JCBPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="bcb76267-e106-4ab9-a9f4-c508a730b9e5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>3530111333300000</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="72208abb-2577-4837-b01e-165d71798328"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3d6d50dc-82b9-471a-bfa4-6322f989fd7b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="926f8c53-d007-4cf6-93b2-74cafb3885b9"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="9a48824d-1576-47ad-befe-da9798346da6"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="c5d40e93-422d-46bd-a2b2-fe58e4e1e33c"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="bd4dc534-4834-4594-a46b-8c9547976fbb"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="9f612d08-8e8f-4321-96ec-f1594f93dce3"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="292c110c-2706-4984-b0b0-76a6d64d3720"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="9f234252-2564-406a-a93d-82f28264d4de"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="97e375ff-19fa-48b0-a27f-3c4bb46f2b2b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14368</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>7fcc34fd-c084-4dff-9a23-07f0120a54f1</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="8202f605-2da3-485f-bbad-3734b6724d12"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="6529ddf3-b36a-4c4b-a048-5a0767f2db5f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="12b0e658-f16b-44c4-b695-1f82e2cd49ac"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="568c97cd-4160-4f8f-a987-81c3513cdf70"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>13a0a3b0-0c0e-48c4-80b2-303ea0aa8c52</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=13a0a3b0-0c0e-48c4-80b2-303ea0aa8c52</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="23dde6a4-3607-4ee9-9bc4-895fdcf5c831"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="acc349fe-3212-4b29-aee8-46fd14ccc215"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="98282228-153f-403a-9f4c-e2132d7fa386"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="be8b6841-5810-4797-8be5-719be1dcd464"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="2d297ecf-5d21-4e1b-afb7-cb49e612a770"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="89ba6e5b-4c8f-416c-8c0b-83129080a09b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="faacbe1f-ae64-4a3f-8746-78b7dce1df62"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="ab512c55-5998-495b-945c-48678509185f"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="b3813718-208e-4407-bc8d-5d6ba81311eb"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="512292df-1c04-49e5-8a79-d459ffde22e9"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="6d6b2751-d194-4ab8-9cdc-72669756cd8c"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="efcb5d38-4321-4224-9d41-9a42c8901feb"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="f9bb3a86-f861-47fd-b04e-2c3336bd376a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="f60f91e7-16a1-406a-9c97-547cfcab022a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="af69b1cc-378b-4d17-b073-1aee80bf8c85"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="578ce2c3-c8d5-4cea-b0d9-55af26a4f5b5"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2167964e-bf35-473d-b9be-d01207d7e33b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="7cdccc23-237d-4b22-bf99-c6d0ec079691"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="55636d41-fca6-48fa-8e54-918930a39122"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="61a26939-1d9c-466c-bfc9-9e7739fb5336"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="ef86a876-e28c-4f08-b599-0be07cf83a18"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="807407ff-1f55-4b81-889d-b7e95cbc2230"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="53fa09be-bd1a-4663-a7c5-1ac4dabbabc8"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="6451ede1-eab0-4693-bcf8-04f00be13230"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="df0eac48-bf9f-4ce2-9fd5-d29f36e2845c"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="4644db27-aef4-4fe4-9b4c-ab611edc5228"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="46370ca7-85b4-453b-b6fb-a25c5c383ae1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="f292d6f6-5ce4-4d68-be49-74270adbf922"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="e2954a25-87ec-47e3-b77b-b392b0298dec"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="1386cd2d-db54-4cfa-a077-3bcc679b2f9e"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="adb38aed-2d9c-4996-b960-fe7d1780e11f"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="38f8948d-f3cb-416d-8f95-6d324586a4d2"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="9ed11ffd-30dd-476f-89cb-58b8cb5150ae" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-MasterPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="7566b462-8023-4dbe-a9f9-bed27bebac37"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>5555555555554444</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="a93d13a8-16d3-4104-89ee-8a4ce8972565"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3bfeb618-a0d1-4d4e-bea6-3778e811f7c5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="4f83d192-4655-4da4-b9a4-4ade34d2fe48"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="829fca71-a273-4860-b290-81e6e5da06bd"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="6980f4d7-f902-44f2-8384-f700ae114481"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="1866b960-58ff-4456-8d86-871afd132d18"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="49c77dd7-fa6c-4a84-b129-bf5e0ffcdaf1"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="845582c2-755d-43fb-bfe5-5d47d128f3a5"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="c579dd5b-a6b2-4a3c-b2f0-07684d51dda4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="7ee6925b-7814-4b99-9dc4-d22de732ba0b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14369</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>2e77ba6b-e77f-498b-a003-d632905cf505</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="acf09d1c-1c10-4ea6-8492-e4a2d82b7395"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="4194d96e-f35a-4e3a-bb23-f095c58750b1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="d54bbdaa-8ea7-42a7-9312-a0592291e9a0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="6960f5fb-2456-4f9d-995b-e66e02066a13"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>04146614-c800-4256-90de-53a29c640ad6</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=04146614-c800-4256-90de-53a29c640ad6</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="0d12c1cc-fcb9-4c03-b991-26d1bfe58e62"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="be12a23b-ddc9-4f1c-a740-a5610c504c0c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="e6093d31-629d-4a5a-bc12-a021470ae794"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="f1f2976b-b6de-44d4-8429-9f938adce3a2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="83151b35-65f6-43ad-b086-81cc16b6e6af"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="4011b32c-7436-47e9-9d4c-a5bf85ce0cc6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="29f6912a-a413-4210-998a-e20ed25e8988"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="e2e95c46-6741-4f11-bd12-8f557cae8a20"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="b41ed4db-94ea-45dd-9d99-5e5e6b57ae70"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="4c1ea9c2-74af-4b50-88ec-8c7e2b319774"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="4639a732-3a8e-4759-b3e9-cd187d3db2dc"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="39b5bb0c-9231-45cf-b9ed-d2e36bdba379"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="ce084f83-8b1f-4409-94ea-5999621bb9c7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="676ea911-f031-4078-adeb-6dc2d22b5bb6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>de834826-1800-48e4-a582-4e5067f317f8</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="515cd820-81cb-4f10-a96e-17962be1dc08"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="54a38a32-7f1b-46bf-aee2-ce376c3c405c"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f2b5aa1f-f7e3-487e-874a-0b43db7125ed"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="85910991-e50a-4052-8516-32e71ac11cf8"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="17d1907e-0b0d-4be1-bd29-9f7010c161b6"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="1e2f43bb-cc08-491f-90ad-23d3bac516e3"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="179d3688-f3b5-4fe3-9c4c-3203826c8d73"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="32350d92-ac80-4b15-a711-80654e4fa887"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="421b328a-6c78-4fc5-bacd-331373b956bf"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="d251f0e1-1278-4e48-8fb6-9986ac8f37c7"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="0d7569a9-0e17-46a9-bc2c-9e51efe24d2b"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="4c12121c-adc7-4ca1-839a-01a7e7f5bb46"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a5c2246a-9f07-4a98-bf8f-1e89152a933e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="a03c0565-a269-472e-9587-18474bad3e50"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="1763b54b-3127-4c40-bb6f-bd65e299d0f9"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="21beb17a-7a3a-45f2-94bb-e6604fa6fd24"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="272b3964-edf2-47cd-abfc-68523a002a1a"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="7c0f671f-b655-434a-aef3-983b63d90d8e"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="10a9b351-3c80-4c99-a389-1ba848e6d98d" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-VisaPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="80492baa-75d9-4200-ad45-eaccfe1ed1d6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>4444333322221111</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="41cff69a-b2c6-45f1-9a6a-0b288293d7cb"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="dd14c5ef-5f68-41ce-8f22-e08b4157fc39"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="db919783-97ef-4f51-98c9-76e72820da06"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="b570b3f1-fba4-464e-bd78-b7be651ea3fe"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="a3e1520e-23aa-4ec7-8000-eb105772e580"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="adcb3541-2a78-40e6-b6e6-d830f97d5166"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="f30dfcf1-dcff-49c9-b1a5-fad281953c79"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="697f1145-7a93-4e73-98aa-5bcce0569757"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="8d8bf1b6-f262-436c-9251-8efbac309ef7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="89ea9f82-e3fd-4416-9c12-ffdd39bda5f0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14370</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>402e59c5-64cd-4f8a-b449-125646d22d35</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="59620625-e486-4a06-8afe-241bfd84ceb3"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="330db8c4-3d58-45a9-b290-42f8dc79db87"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="1cc71485-abac-473b-8a87-c42a97f25aa6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="ae4e33e0-e9ce-4a39-b784-069f9d15077f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>f51eca4f-8094-4a77-9617-03cf897dbf6d</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=f51eca4f-8094-4a77-9617-03cf897dbf6d</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="22e6a801-651f-4eb5-a491-94d88ec4b136"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7c21e1f5-3595-4155-b1f6-44d51e319872"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="978a785a-0e08-4fcd-916d-590b387fe960"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="3c20a2e4-da4b-4d9b-9489-753eb67178e7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="0f9d49a8-be96-4f79-9fb7-a279fa080b68"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="3550d3e9-3eb7-4a23-bfb3-b3a20d394892"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="bbbfdc5f-e425-40a6-99f0-120483424f04"><con:configuration><path>$['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="1a2d9597-01c0-4359-9a6f-9014b31850b3"><con:configuration><path>$['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="HasFailedItemCheck" id="1cfd0c48-9da1-459a-810c-0c154c5dd9e7"><con:configuration><path>$['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="b16c0ab6-223b-4dbc-b75c-5f3481b1e219"><con:configuration><path>$['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="OrderIdCheck" id="98c22e51-d6af-470d-a6fa-afa9f4721775"><con:configuration><path>$['Order']['OrderId']</path><content>${Properties-st1#orderid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="TotalAmountCheckMatch" id="e3668f35-ec69-49ef-b8a1-401485783ca1"><con:configuration><path>$['Order']['TotalAmount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PostOrderPropertyTransfer" id="485d6f58-83fa-43d0-8acd-6632e4b9d781"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>delvId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPostOrder</con:sourceStep><con:sourcePath>$['DeliveryId']</con:sourcePath><con:targetType>delvid</con:targetType><con:targetStep>Properties-DelvID</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-DelvID" id="9f7a032a-08a1-4d7a-8fae-064455958432"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>delvid</con:name><con:value>c7959d50-6c44-485d-841f-de6c92e412d2</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3a012130-39b3-444e-821b-d78833e541b4"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_OrderStatus" id="fb74a52b-3ecf-4b1a-9bf2-f3e139384728"><con:settings/><con:config service="DelievryOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{DeliveryId}/OrderStatus" methodName="OrderStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_OrderStatus" id="07184ec9-f3e4-4740-a812-dbc041e88c93" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v2/DeliveryOrders/DeliveryId/OrderStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7559293e-88e1-4ccc-9e5a-898a77e0591b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="3e5ca02e-ba42-44ff-bc43-4d91e2f7a0d9"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryStatusCheck" id="3be9d0be-c8d3-44ec-abe0-9173a50d62d4"><con:configuration><path>$[0]['DeliveryStatus']</path><content>Pending</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="DeliveryId" value="${Properties-DelvID#delvid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>DeliveryId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="3d26bcee-36b2-4695-8105-db0a7d8931f4"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step_RestaurantOrderStatus" id="d13f8c38-ca71-4d52-809d-e64b6ff69d5b"><con:settings/><con:config service="DeliveryRestOrderStatus" resourcePath="/AOO/v2/DeliveryOrders/{RestaurantNumber}/RestaurantStatus" methodName="RestaurantStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_RestaurantOrderStatus" id="a538c36e-0249-43b8-8a75-3e392623ca83" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request/><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/348/RestaurantStatus</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="cec78f86-1cd6-46c0-a43b-b22be21d5813"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="RestaurantNumberCheck" id="43176f27-595b-43e0-8b56-723a24b83899"><con:configuration><token>${Properties#restnum}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="DeliveryIdCheck" id="1ac69c56-9be2-467c-a457-0d596a34dec5"><con:configuration><token>${Properties-DelvID#delvid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="OrderIdCheck" id="f3564b9e-eb94-47db-8aaf-1746a3eab5c1"><con:configuration><token>${Properties-st1#orderid}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="RestaurantNumber" value="${Properties#restnum}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>RestaurantNumber</con:entry><con:entry>StartDate</con:entry><con:entry>EndDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="dd4f3c7c-b756-4e7d-b4d8-01920a9edbcb"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9837b3ab-d7c3-4fa6-b963-0c6156da7d2f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="f00535f1-fb80-4211-8b7f-5449e30a7502"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CapturedAmountMatchCheck" id="29c01524-7a01-4d1d-be63-2180b41225c0"><con:configuration><path>$['CaptureResponse']['AuthorizationDecision']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="bf793411-4003-4787-b06c-97d91cb1a6ce"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="6e2a0c63-7996-471c-9c5e-b7b882d5f633"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="fc388987-772e-4ac3-8349-f8118f46a9eb"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="7f889b59-7bf9-4f76-a625-bb177d963418" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DeliveryOrder-NotSupportedPayment" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="91052535-8b5b-418c-8e38-5a1eff63349a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cs</con:name><con:value>${#TestSuite#ClientSecret}</con:value></con:property><con:property><con:name>cid</con:name><con:value>${#TestSuite#ClientID}</con:value></con:property><con:property><con:name>siteid</con:name><con:value>${#TestSuite#siteid}</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>${#TestSuite#pickuptime}</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>${#TestSuite#promisetime}</con:value></con:property><con:property><con:name>email</con:name><con:value>trob@buffalowildwings.com</con:value></con:property><con:property><con:name>lat</con:name><con:value>44.984080</con:value></con:property><con:property><con:name>long</con:name><con:value>-93.381670</con:value></con:property><con:property><con:name>ccnum</con:name><con:value>30569309025904</con:value></con:property><con:property><con:name>ccmon</con:name><con:value>08</con:value></con:property><con:property><con:name>ccyy</con:name><con:value>2020</con:value></con:property><con:property><con:name>cccvv</con:name><con:value>123</con:value></con:property><con:property><con:name>restnum</con:name><con:value>${#TestSuite#restnum}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPutOrder" id="6ab80231-10c4-4d88-a19f-07452927473f"><con:settings/><con:config service="DeliveryPutOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteID}" methodName="DeliveryPutOrder" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPutOrder" id="0ba621c3-61ac-4c48-88ac-d96b3b328da9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RequestQuote": {
		"Pickup": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "AS",
			"Instructions": "wqwq",
			"UTCOffset": "UTC-05:00"
			
		},
		"Dropoff": {
			"Street": "5023 Excelsior Boulevard",
			"City": "St. Louis Park",
			"State": "MN",
			"PostalCode": "55416",
			"Latitude": ${Properties#lat},
			"Longitude": ${Properties#long},
			"Unit": "4B",
			"Instructions": "Leave with doorman"
		},
		"NextPickupTime": "${Properties#pickuptime}",
		"FutureDropoffTime": null,
		"Options": {
			"WhitelistedDeliveryServices": "notipmock",
			"PreferredDeliveryServices": "notipmock",
			"MaxDeliveryFee": null
		}
	},
	"PutOrder": {
		"SiteId":${Properties#siteid} ,
		"MenuId": 0,
		"PromiseDateTime": "${Properties#promisetime}",
		"LineItems": [{
			"ItemLineNumber": 1,
			"SalesItemId": 2888,
			"MenuItemId": 1674,
			"SpecialInstructions": "",
			"Quantity": 3,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}, {
			"ItemLineNumber": 2,
			"SalesItemId": 4325,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		},
		{
			"ItemLineNumber": 3,
			"SalesItemId": 4486,
			"MenuItemId": 2318,
			"SpecialInstructions": "",
			"Quantity": 1,
			"NextModifierSequenceNumber": 0,
			"Modifiers": []
		}		
		],
		"OrderMode": 1,
		"UpdateTimeDisabled": true,
		"PaymentMode": 0,
		"OrderSource": 0,
		"Destination": 0,
		"ShouldManualRelease": true,
		"TaxJurisdictionId": 1,
		"Customer": {
			"EMail": "${Properties#email}",
			"FirstName": "Test",
			"LastName": "QA",
			"AltPhone": "5033801760",
			"Addresses": [{
					"AddressId": 1,
					"AddressType": 1,
					"IsDefault": true,
					"AddressLine1": "7300 Gallagher Dr",
					"AddressLine2": "Apt 100",
					"City": "Edina",
					"State": "MN",
					"Postal": "55435"
				}
			]
		},
		"CustomerAddressForOrder": {},
		 "LoyaltyNumber": "1234567890",
		"DeliveryFeeAmount": 0.0
	}
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/SiteID</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9df45f4b-a7a3-448b-9f8b-b2cbfcbf124b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="DeliveryAvailableCheck" id="7438402e-d736-4ef3-a494-5f16785ca6f3"><con:configuration><path>$['DeliveryResponse']['IsAvailable']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="SiteIdCheck" id="56e2ee33-4d6e-4ce5-adf5-c294a273f0da"><con:configuration><path>$['OrderResponse']['Order']['SiteId']</path><content>${Properties#siteid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="CheckExistenceOrderId" id="7271c8b8-e820-4ef0-a111-b8ccc2c2fa6b"><con:configuration><path>$['OrderResponse']['Order']['OrderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="PromiseTimeCheck" id="c60446cc-e455-4b6d-8a45-e804ca3cec5b"><con:configuration><path>$['OrderResponse']['Order']['PromiseDateTime']</path><content>${Properties#promisetime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="FailedItemCheck" id="e195ec1c-e838-4f5f-a317-f6e333dd2269"><con:configuration><path>$['OrderResponse']['HasFailedItems']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ResultCodeCheck" id="775b1004-e805-4ba6-9129-2187c9dc1e3c"><con:configuration><path>$['OrderResponse']['ResultCode']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PutOrderPropertyTransfer" id="c17ddf5b-eb4f-4e52-b499-847670bcaf2d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>OrderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['OrderId']</con:sourcePath><con:targetType>orderid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>QuoteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['QuoteId']</con:sourcePath><con:targetType>quoteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>CustomerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['Customer']['CustomerId']</con:sourcePath><con:targetType>customerid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SiteId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['SiteId']</con:sourcePath><con:targetType>siteid</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>actolodelfee</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['DeliveryResponse']['Fee']</con:sourcePath><con:targetType>actolodelfee</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lineitem</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['LineItems']</con:sourcePath><con:targetType>lineitem</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_DeliveryPutOrder</con:sourceStep><con:sourcePath>$['OrderResponse']['Order']['TotalAmount']</con:sourcePath><con:targetType>amount</con:targetType><con:targetStep>Properties-st1</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties-st1" id="9a3d0a35-1768-471c-ac7b-26e7141adb5e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderid</con:name><con:value>14371</con:value></con:property><con:property><con:name>quoteid</con:name><con:value>8b5db052-35ab-45d9-ad5e-cf038dbe90e1</con:value></con:property><con:property><con:name>customerid</con:name><con:value>33889519-363c-40b3-a900-14bb17c665fb</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>actolodelfee</con:name><con:value>5.0</con:value></con:property><con:property><con:name>lineitem</con:name><con:value>[{"$id":"5","LineItemNumber":1,"SalesItemId":2888,"MenuItemId":1674,"CompId":0,"Name":"Regular Wedge","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":3.79,"ExtendedPrice":11.37,"Quantity":3,"NextModifierSequenceNumber":1,"PosItemId":10719,"CompValue":0},{"$id":"6","LineItemNumber":2,"SalesItemId":4325,"MenuItemId":2318,"CompId":0,"Name":"SERVICE FEE","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":0.5,"ExtendedPrice":0.5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30622,"CompValue":0},{"$id":"7","LineItemNumber":3,"SalesItemId":4486,"MenuItemId":2318,"CompId":0,"Name":"DRIVER TIP $2","ShortDescription":null,"SpecialInstructions":"","RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":2,"ExtendedPrice":2,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30633,"CompValue":0},{"$id":"8","LineItemNumber":4,"SalesItemId":4463,"MenuItemId":2317,"CompId":0,"Name":"DELIVERY FEE $5.00","ShortDescription":null,"SpecialInstructions":null,"RecipientName":null,"ItemOrderingMode":0,"Section1Type":0,"Section2Type":0,"Section3Type":0,"Section4Type":0,"Modifiers":[],"UnitPrice":5,"ExtendedPrice":5,"Quantity":1,"NextModifierSequenceNumber":1,"PosItemId":30692,"CompValue":0}]</con:value></con:property><con:property><con:name>amount</con:name><con:value>21.33</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Step_CreTrnscFPP" id="02969abd-b69d-4a88-9654-673922a823e6"><con:settings/><con:config service="CreateTransaction-Delivery" resourcePath="/FP/v1/Transactions/Create/{SiteID}" methodName="CreateTransactionDelivery" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_CreTrnscFPP" id="78b7c875-3971-4720-80e3-c57df4936c1d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#TrnEndPoint}</con:endpoint><con:request>{
                "TransactionTotal": ${Properties-st1#amount},
                "TimeoutMinutes":1,
                "InvoiceNumber":"${Properties-st1#orderid}",
                "MerchantReferenceCode":"Test-Ref-2018-02-15T17:40:00"
}</con:request><con:originalUri>https://bww-pickuporder-api-chtest.cloudhub.io/experience/v1/Transactions/Create/5</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="ff9be5d5-891c-4c18-9af8-714f6f6b08df"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="SiteID" value="${Properties#siteid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>SiteID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="TransactionPropertyTransfer" id="0ef16a0a-8bd5-4982-b99e-10d94194b3c4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>TransactionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['TransactionId']</con:sourcePath><con:targetType>TransactionId</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>CheckoutUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step_CreTrnscFPP</con:sourceStep><con:sourcePath>$['CheckoutUrl']</con:sourcePath><con:targetType>endpoint</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>Properties-st1</con:sourceStep><con:targetType>Amount</con:targetType><con:targetStep>TransactionProperties</con:targetStep><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransactionProperties" id="9e0abe3c-9b2d-4c7e-a34d-593819aeb974"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TransactionId</con:name><con:value>b93444e7-ea90-4d33-bdb5-c4f3462d7975</con:value></con:property><con:property><con:name>Amount</con:name><con:value>21.33</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>https://payments.uat.freedompay.com/Checkout/Payment?transid=b93444e7-ea90-4d33-bdb5-c4f3462d7975</con:value></con:property><con:property><con:name>CCSubmitUrl</con:name><con:value>https://payments.uat.freedompay.com/Checkout/SubmitData</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Step_PaymentPage" id="2cc74067-babc-483d-96bb-462b9a5e8493"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_PaymentPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="4ba121b9-3426-4606-a3d9-f21de89c8cd6"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="AmountMatchCheck" id="2e11d8ee-46d9-4f14-b074-24da7045ae2c"><con:configuration><path>//html[1]/body[1]/div[1]/div[2]/div[2]/form[1]/div[1]/fieldset[1]/input[3]/@value</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Step_CCPayment" id="d1e46365-1137-4c3e-ac89-b168066073ef"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0a1c1db7-dd20-4fe3-8f43-b98761227b3f" name="Step_CCPayment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TransactionProperties#CCSubmitUrl}</con:endpoint><con:request>{
"TransactionId": "${TransactionProperties#TransactionId}",
"TransactionTotal": ${TransactionProperties#Amount},
"CardInformation.AccountNumber": "${Properties#ccnum}",
"CardInformation.ExpirationMonth": "${Properties#ccmon}",
"CardInformation.ExpirationYear": "${Properties#ccyy}",
"CardInformation.Cvv": "${Properties#cccvv}"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a3865d26-0105-41e5-b909-4f000ea472c8" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6125e8e-cec2-49fe-8e44-f2d790437b39" name="CheckPaymentIsSuccess"><con:configuration><token>success</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Step_DeliveryPostOrder" id="66d120ac-0a85-47de-9226-ade3b1fed184"><con:settings/><con:config service="DeliveryPostOrder" resourcePath="/AOO/v2/DeliveryOrders/{SiteId}/{OrderId}/{QuoteId}/{CustomerId}" methodName="CustomerId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_DeliveryPostOrder" id="42ae0d57-ce6a-4460-bd04-d0f000d78860" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X_CLIENT_ID" value="${Properties#cid}"/>
  &lt;con:entry key="X_CLIENT_SECRET" value="${Properties#cs}"/>
  &lt;con:entry key="origin" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#TestSuite#EndPoint}</con:endpoint><con:request>{
	"RestaurantNumber": 349,
	"RestaurantName": "Station 349",
	"RestaurantEmailId":"trob@buffalowildwings.com",
	"DesignId": 2,
	"MenuId": 0,
	"PromiseDateTime": "${Properties#promisetime}",
	"OloDeliveryFee":${Properties-st1#actolodelfee}, 
	"LineItems": ${Properties-st1#lineitem},
	
	"OrderMode": 1,
	"UpdateTimeDisabled": true,
	"PaymentMode": 0,
	"OrderSource": 1,
	"Destination": 2,
	"ShouldManualRelease": true,
	"TaxJurisdictionId": null,
	"Customer": {
		"CustomerId": "4855d606-dd47-424c-a81b-581faaad1820",
		"EMail": "${Properties#email}",
		"FirstName": "Tinku",
		"LastName": "Rob",
		"BusinessName": null,
		"VoicePhone": null,
		"VoicePhoneExtension": null,
		"DepartmentName": null,
		"AltPhone": "5033801760",
		"AltPhoneExtension": null,
		"FavoriteSiteId": 1,
		"FavoriteSiteIds": [
			1,
			2
		],
		"LoyaltyCardNumber": null,
		"SecondaryEmailAddress": null,
		"Addresses": [{
				"AddressId": 1,
				"AddressType": 1,
				"IsDefault": true,
				"Description": "Work Address",
				"DepartmentName": "Buffalo Wild Wings Corporate Office",
				"AddressLine1": "5500 Wayazata Blvd",
				"AddressLine2": "Suite 1600",
				"City": "Minneapolis",
				"State": "MN",
				"Postal": "55416-1234",
				"ExtraData": null
			}
		],
		"Birthday": "2017-04-21T18:02:55.5845132-05:00",
		"LoyaltyZipCode": null
	},
	"CustomerAddressForOrder": {
		"AddressId": 1,
		"AddressType": 1,
		"IsDefault": true,
		"Description": "Work Address",
		"DepartmentName": "Buffalo Wild Wings Corporate",
		"AddressLine1": "5500 Wayazata Blvd",
		"AddressLine2": "Suite 1600",
		"City": "Minneapolis",
		"State": "MN",
		"Postal": "55416",
		"ExtraData": null
	},
	"SpecialInstructions": "Call upon arrival",
	"CompId": 0,
	"ReferenceNumber": null,
	"ExternalOrderId": null,
	"AssignLoyalty": false,
	"DeliveryFeeAmount": 0,
	"TransactionId": "${TransactionProperties#TransactionId}",
		"Vehicle": {
		"$id": "3",
		"Make": "BMW",
		"Model": "BMW",
		"Color": "red"
	},
	"LoyaltyNumber": "1234567890",
	"SendEmail": true,
	"FavoriteName": "sample string 4",
	"ASAPDeliveryTimeEnabled": true,
	"ApplyStoredValue": true,
	"LockOrderModification": true,
	"PickupName": "Buffalo Wild Wings-MyOffice",
	"PickupPhoneNumber": "444-555-3333",
	"DropoffName": "Tinku CC Rob",
	"DropoffPhoneNumber": "5033801760",
	"Tip": 0
}</con:request><con:originalUri>https://bww-delivery-api-v2-chtest.cloudhub.io/AOO/v1/DeliveryOrders/5/4988/18bf839d-1adb-413e-a6ce-f287c8d02517/4855d606-dd47-424c-a81b-581faaad1820</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodesCheck" id="cffa086c-5009-4bf1-a185-d49848326b29"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5fcb4c5-36f5-4b59-942a-b57647e74989" name="PaymentFailedCheck"><con:configuration><token>Payment failed and order was not submitted</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="SiteId" value="${Properties-st1#siteid}"/>
  <con:entry key="QuoteId" value="${Properties-st1#quoteid}"/>
  <con:entry key="CustomerId" value="4855d606-dd47-424c-a81b-581faaad1820"/>
  <con:entry key="OrderId" value="${Properties-st1#orderid}"/>
  <con:entry key="forceATODeposit" value="false"/>
</con:parameters><con:parameterOrder><con:entry>SiteId</con:entry><con:entry>OrderId</con:entry><con:entry>QuoteId</con:entry><con:entry>CustomerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step_FPPTransactionStatus" id="1a8d6c2a-18e3-41e8-a678-165521cc3c70"><con:settings/><con:config service="TransactionStatus" resourcePath="/CheckoutService/CheckoutService.svc/GetTransaction" methodName="TransactionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step_FPPTransactionStatus" id="5d51976e-9dbe-4d5a-9806-683ec6cf8ac1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://payments.uat.freedompay.com</con:endpoint><con:request>"${TransactionProperties#TransactionId}"</con:request><con:originalUri>https://payments.uat.freedompay.com/CheckoutService/CheckoutService.svc/GetTransaction</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="01e912c4-f79c-4f6a-b36c-7773463590c2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationStatusCheck" id="4744491e-94ad-49d1-ae52-d28c3c530203"><con:configuration><path>$['AuthResponse']['AuthorizationDecision']</path><content>ACCEPT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="AuthorizationAmountMatchCheck" id="64581b28-a6be-4c76-85ed-a1604a823d4a"><con:configuration><path>$['AuthResponse']['FreewayResponse']['Amount']</path><content>${TransactionProperties#Amount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="ProcessorResponseCodeCheck" id="bb0706ce-3e6d-4ed3-b241-f6c64e402e00"><con:configuration><path>$['ProcessorResponseCode']</path><content>100: APPROVED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8afa07be-48cb-4372-94f4-67a88afdb5d2" name="PaymentCaptureFalseCheck"><con:configuration><path>$['AuthResponse']['WasCaptured']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Report" id="701e356f-9d6e-4193-8b94-1cbf2b85a649"><con:settings/><con:config><script>import groovy.xml.DOMBuilder;
import groovy.xml.dom.DOMCategory;
import org.codehaus.groovy.runtime.*;
import groovy.io.FileType
import groovy.util.AntBuilder 
import groovy.sql.Sql 
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.GroovyUtils.*
import com.eviware.soapui.model.propertyexpansion.PropertyExpander; 
import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext; 
import com.eviware.soapui.model.support.ModelSupport;
import com.eviware.soapui.model.testsuite.TestCaseRunContext;
import com.eviware.soapui.model.support.TestRunListenerAdapter
import com.eviware.soapui.model.testsuite.TestRunContext
import com.eviware.soapui.model.testsuite.*
import com.eviware.soapui.model.testsuite.TestCase
import com.eviware.soapui.model.testsuite.TestCaseRunner
import com.eviware.soapui.support.*;
import com.eviware.soapui.impl.wsdl.support.http.ProxyUtils
import groovy.xml.MarkupBuilder
import java.lang.*;
import java.io.*;
import java.lang.String;
import com.eviware.soapui.support.*; 
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import groovy.xml.MarkupBuilder

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def testStep
def testcaseName = testRunner.testCase.name
log.info testcaseName
def testSuiteName = testRunner.testCase.testSuite.name

def fileDirPathHyper = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName
def fileDirPath = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Repository/"
def fileDir = new File(fileDirPath);
if(!fileDir .exists()) {
    fileDir .mkdirs();
} 

def createBackUpFolder
def pathBackUpFolder = fileDirPath+"Backup/"
	createBackUpFolder = new File(pathBackUpFolder)
	if(createBackUpFolder.exists() == false){
		createBackUpFolder.mkdirs()
	}
	def oldfilename
	def tempValue = 0
	def inBackFolderPath
	new File(fileDirPath).eachFile() 
	{ file->  
		oldfilename = file.getName()
		if (oldfilename.contains("Step_") &amp;&amp; tempValue == 0){
			inBackFolderPath = oldfilename.substring(oldfilename.length()-23, oldfilename.length()-4)
			log.info("inBackFolderPath:"+inBackFolderPath)
			tempValue = 1
		}
		createBackUpFolder =  new File(pathBackUpFolder+"/"+inBackFolderPath)
		if (createBackUpFolder.exists() == false)
		{
			createBackUpFolder.mkdirs()
		}
		File dir = new File(pathBackUpFolder+"/"+inBackFolderPath);   
		file.renameTo(new File(dir, file.getName()));      
	}

	def k = 0;
	def serviceStepNameList = []
	def serviceStepStatusList = []
	def serviceRequestPathList = []
	def serviceResponsePathList = []
	def serviceAssertionPathList = []

for(testSteps in context.testCase.testStepList)
{
	def date = new Date()
	def currentTime = date.format("yyyy-MM-dd-HH-mm-ss")
	testStep = testSteps.name
	if (testStep.contains("Step_")){
		myRequestStep = testRunner.testCase.getTestStepByName(testStep)
		serviceStepNameList[k] = testStep
		
		def requestFile =fileDirPath+testStep+"Request_"+currentTime+".txt"
		serviceRequestPathList[k] = requestFile
		def myReqFile = new File(requestFile)
		myReqFile.write(new String(myRequestStep.testRequest.messageExchange.rawRequestData))		

		def responseFile =fileDirPath+testStep+"Response_"+currentTime+".txt"
		serviceResponsePathList[k] = responseFile
		def myResFile = new File(responseFile)
		myResFile.write(new String(myRequestStep.testRequest.messageExchange.rawResponseData))

		def soapStep = testRunner.testCase.testSteps[""+testStep+""]
		def AssertFile =fileDirPath+testStep+"Assertion_File_"+currentTime+".txt"
		serviceAssertionPathList[k] = AssertFile
		def j = new File(AssertFile)
		String assertion_Status
		def i = 0
		def flag = 0;
		String step_Status
		for( assertion in soapStep.assertionList )
		{
			if(i==0){
				j.write('Assertion'+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				//j.append('JSON Token: '+assertion.getToken()+'\n')
				j.append('Token Value: '+assertion.id)
			}
			else{
				j.append('\n============================================\n')
				j.append('Assertion Name: '+assertion.label+'\n')
				j.append('============================================\n')
				j.append('Assertion Description: '+assertion.DESCRIPTION+'\n')
				j.append('Status: '+assertion.status +'\n')
				j.append('Token Value: '+assertion.id)
			}
		
		
				if(assertion.status == assertion.status.VALID){
					serviceStepStatusList[k] = "PASSED"
				}
				else if(assertion.status == assertion.status.FAILED){
					serviceStepStatusList[k] = "FAILED"
				}
			i = i+1
		}
		k = k+1
	}
}

log.info k
def totStepCount = k
def m

for(m=0;m&lt;totStepCount;m++){
	serviceRequestPathList[m] = serviceRequestPathList[m].replace(fileDirPathHyper,"..")
	serviceResponsePathList[m] = serviceResponsePathList[m].replace(fileDirPathHyper,"..")
	serviceAssertionPathList[m] = serviceAssertionPathList[m].replace(fileDirPathHyper,"..")
}
    		def strintialwriter =""
		def strtablewriter  =""
		def strtempcontentwriter  =""
		def strcontentwriter =""
		def strjscriptwriter =""
		def statusFontColor
		def z
		for(z=1;z&lt;=totStepCount;z++){
			if(serviceStepStatusList[z-1]=="PASSED"){
				statusFontColor = "Green"
			}else{
				statusFontColor = "Red"	
			}
			StringWriter intialwriter = new StringWriter() 
			def buildInitialize = new MarkupBuilder(intialwriter)
			buildInitialize.html{   
				head{   
					style('''   
					.cls_innerTable {   
						border: 1px solid  #000000;
						font-weight:normal;
						color: black;
						font-family: Calibri;
						font-size: 13px;        
					}   
					''')
					style('''   
					.cls_innerTable td {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;        
					}   
					''') 
					style('''   
					.cls_innerTable th {   
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000; 
						border-bottom: 1px solid #000000;
						border-right: 1px solid #000000;
					   
					}   
					''')     
				} 
			}
			strintialwriter = intialwriter.toString()	
			StringWriter tablewriter = new StringWriter() 
			def buildBody = new MarkupBuilder(tablewriter)
			buildBody.body{   
				table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
					tr('height':'30','width':'98%'){
						th('colspan':'11','style':'text-align:centre;font-size:11pt','Bgcolor':'#e0e0e0'){
						b{
							span('style':'text-align:centre;color:Black;font-size:15pt:',testSuiteName)    			
						}    		
						}
					}		
					tr('height':'30'){
						th('colspan':'11','style':'text-align:left','Bgcolor':'#ffffff'){    		
						 span('style':'text-align:centre;color:Black;font-size:10pt') {
						 	u(testcaseName){    	 		
						 		}
							}    	 		    		
						}
				  	}
					tr('height':'20','bgcolor':'#8DB3E2'){
						td('width':'20%','style':'text-align:center'){
							b("Services")
						}				
						td('width':'10%','style':'text-align:center'){
							b("Request")					
						}		
						td('width':'10%','style':'text-align:center'){
							b("Response")
						}							
						td('width':'10%','style':'text-align:center'){
							b("Execution Status")
						}
						td('width':'25%','style':'text-align:center'){
							b("Assertion")
						}	
						td('width':'25%','style':'text-align:center'){
							b("Warnings/Errors")
						}						
					}
				}
			}
			strtablewriter = tablewriter.toString()
			StringWriter contentwriter = new StringWriter() 
			def buildContent = new MarkupBuilder(contentwriter)	
			buildContent.table('name':'Result','width':'98%','class':'cls_innerTable','cellspacing':'0','cellpadding':'0'){
			 	tr('height':'20','align':'centre','class':'cls_innerTable'){
				 	td('width':'20%','class':'cls_innerTable','style':'text-align:center'){
						b(serviceStepNameList[z-1])
					}					
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceRequestPathList[z-1],"Request")
					}			
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
							a('target':'_blank','href':serviceResponsePathList[z-1],"Response")
					}
					td('width':'10%','class':'cls_innerTable','style':'text-align:center'){
						b{
							font('color':statusFontColor,serviceStepStatusList[z-1]){     				
							}
						}
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						a('target':'_blank','href':serviceAssertionPathList[z-1],"Assertion")
					}
					td('width':'25%','class':'cls_innerTable','style':'text-align:center'){
						b('Warning')
					}		
				}  	 	
			}
			strtempcontentwriter = contentwriter.toString()	
			strcontentwriter = strcontentwriter + strtempcontentwriter
			strtempcontentwriter = ""
			strReqPath = ""
			strResPath = ""
		}
		StringWriter jscriptwriter = new StringWriter() 
		def buildjavascript = new MarkupBuilder(jscriptwriter)   
		buildjavascript.script('language':'JavaScript',"function ExpandCompress(nam){if(eval(nam).style.display==\"\"){eval(nam).style.display=\"none\"}else if(eval(nam).style.display==\"none\"){eval(nam).style.display=\"\"}}"){
		}
		strjscriptwriter = jscriptwriter.toString()		
		def finalhtmlReport = strintialwriter + strtablewriter + strcontentwriter + strjscriptwriter
		strintialwriter = ""
		strtablewriter = ""
		strcontentwriter = ""
		strjscriptwriter = ""

		def fileDirPathHTML = "D:/Backup/MyBWW/WebserviceProjectTestResult/DeliveryOrder/PrePayment/"+testcaseName+"/Report/"
		def reqfolderHTML = new File(fileDirPathHTML)
		if(reqfolderHTML.exists())
		{
		}
		else
		{	
			reqfolderHTML.mkdirs()	
		}			
		def pathBackFolderHTML
		pathBackFolderHTML = fileDirPathHTML+"Backup/"	
		def createBackFolderHTML
		def oldfilenameHTML
		new File(fileDirPathHTML).eachFile() 
		{ file->  
		oldfilenameHTML = file.getName()
		createBackFolderHTML =  new File(pathBackFolderHTML)
		if (createBackFolderHTML.exists() == false)
		{
		createBackFolderHTML.mkdirs()
		}
		File dir = new File(pathBackFolderHTML);   
		file.renameTo(new File(dir, file.getName()));  			  		  		
		}
		if(finalhtmlReport==null){
			finalhtmlReport = ""
		}
		def shortDate = new Date().format("yyyy-MM-dd_HH-mm-ss").toString();	
		def strFilename = testcaseName +"_@"+ shortDate +".html"
		log.info fileDirPathHTML
		log.info strFilename		
		def htmlfile  = new File(fileDirPathHTML+strFilename)
		htmlfile.write(finalhtmlReport, "UTF-8")</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d0d2962-6257-4eaf-90a5-fd07da537cf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57d35837-0748-4ec3-8a30-237f733c2793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>826fbd8d-3258-49d5-9348-9c0cf237a13e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aa063d-b8ea-4082-a4a0-b64d6236e4f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e39a8c24-eed2-4586-a4ca-607b66001bc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70d02732-fd98-4fd2-a3bf-f8c232da5fce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42cd7f16-b1ce-489e-bd91-64e3bc27db96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95a5753c-92ea-4580-930d-a92918b018ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb8af382-433a-45fe-bd3a-bb1a2b574e0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>391e717e-333a-4125-9a0c-623020932a09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecce8767-3677-434a-adee-ae44285cc504</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3ae7b5e-578c-4bb0-aae7-6dab3df3466e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a7062b8-0b51-4c26-8b4f-b3cf99def078</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a453e8de-d792-4452-b12d-2f6201e78b02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6159022a-c6b7-4d83-a489-8a4de61e06fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1abdc51a-f73e-4f6b-aead-dd26dcdf8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30c8b4aa-2f49-4f33-af78-239b2cffe912</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9adb04ca-654a-4ee6-9852-15c91aea4967</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3889e818-5a3d-43f9-a550-266f6e78624f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>EndPoint</con:name><con:value>https://bww-delivery-api-v2-chtest.cloudhub.io</con:value></con:property><con:property><con:name>TrnEndPoint</con:name><con:value>https://bww-pickuporder-api-chtest.cloudhub.io</con:value></con:property><con:property><con:name>ClientSecret</con:name><con:value>1B44fE3b0dCD4120ae875C90a661bd53</con:value></con:property><con:property><con:name>ClientID</con:name><con:value>dfdbd245cb7746229f51d39f40efbffa</con:value></con:property><con:property><con:name>siteid</con:name><con:value>5</con:value></con:property><con:property><con:name>restnum</con:name><con:value>9009</con:value></con:property><con:property><con:name>pickuptime</con:name><con:value>2018-12-31T13:50:00</con:value></con:property><con:property><con:name>promisetime</con:name><con:value>2018-12-31T13:50:00</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:authRepository/><con:tags/></con:soapui-project>